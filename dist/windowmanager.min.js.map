{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///windowmanager.min.js","webpack:///webpack/bootstrap dd8ae9bffc1f50e9614f","webpack:///./src/index.js","webpack:///./src/global.js","webpack:///./src/utils/index.js","webpack:///./src/utils/EventHandler.js","webpack:///./src/utils/SyncCallback.js","webpack:///./src/geometry/index.js","webpack:///./src/geometry/Vector.js","webpack:///./src/geometry/BoundingBox.js","webpack:///./src/geometry/CollisionMesh.js","webpack:///./src/runtime/index.js","webpack:///./src/runtime/ready.js","webpack:///./src/runtime/electron/index.js","webpack:///./src/runtime/electron/global.js","webpack:///./src/runtime/electron/require.js","webpack:///./src/runtime/electron/node/index.js","webpack:///./src/runtime/electron/node/Window.js","webpack:///./src/runtime/electron/renderer/index.js","webpack:///./src/runtime/electron/renderer/Window.js","webpack:///./src/runtime/openfin/index.js","webpack:///./src/runtime/openfin/global.js","webpack:///./src/runtime/openfin/Window.js","webpack:///./src/runtime/browser/index.js","webpack:///./src/runtime/browser/global.js","webpack:///./src/runtime/browser/Window.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_global","_global2","global","windowmanager","window","_index","_index2","_index3","windowmanagerEventNames","EventHandler","version","runtime","name","undefined","isBrowser","isElectron","isOpenFin","isDesktop","isMobile","isMain","navigator","a","test","substr","userAgent","vendor","opera","geometry","getUniqueWindowName","genUIDE7","Date","getTime","_EventHandler","_EventHandler2","_SyncCallback","_SyncCallback2","lut","i","toString","d0","Math","random","d1","d2","d3","SyncCallback","acceptedEventHandlers","arguments","length","_eventListeners","_eventPipes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","acceptedEventHandler","err","return","prototype","on","eventNames","eventListener","toLowerCase","split","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","eventName","constructor","Error","indexOf","push","once","onceListener","off","apply","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","index","splice","clearEvent","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","emit","_len","args","Array","_key","returnVal","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","eventHandler","addPipe","removePipe","callback","count","ref","thisRef","_deref","_Vector","_Vector2","_BoundingBox","_BoundingBox2","_CollisionMesh","_CollisionMesh2","BoundingBox","CollisionMesh","Position","Size","Vector","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","left","top","Number","_isNaN","isNaN","getBoundingBox","other","diff","subtract","sqrt","distanceSquared","getVector","deltaLeft","deltaTop","abs","minAbs","min","vals","val","argAbs","right","bottom","getWidth","getHeight","getCenterPosition","getPosition","max","cLeft","cTop","cPos","getDistanceSquaredToPoint","width","height","anchor","curSize","getSize","newSize","String","anchorStr","others","isContains","centerPos","dis","edge","sort","b","map","edges","getEdgeClosestOrder","snapDistance","snapDelta","NaN","leftRightDis","topBottomDis","isTouching","isColliding","boxes","opts","box","concat","getCollisionMesh","clone","newPosition","moveBy","otherBox","contained","thisBox","someContains","someTouching","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","someColliding","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","collided","getColliding","process","versions","electron","nodeRequire","fin","desktop","main","callbacks","isReady","onReady","_isNode","_isRenderer","_require2","_require3","_isStartup","_nodeRequire","BrowserWindow","_require","workingDir","dirname","filename","windowmanagerPath","__filename","_windows","Map","eval","_ready","_ready2","_windowmanager$geomet","_notifyReady","getAllWindows","webContents","send","_ensureDockSystem","_this","_dockedGroup","undock","_dockMinimize","restore","lastBounds","getBounds","newBounds","dock","otherID","fromId","otherWin","_dockFocus","setAlwaysOnTop","_dragStart","_dragStartPos","_getBounds","bounds","x","y","_dragBy","thisBounds","moveTo","setMin","getSnapDelta","pos","setPosition","_dragStop","_dockMoveTo","oldPos","minimize","_dockHide","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","hide","_dockShow","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","show","_Window","_Window2","_window$nodeRequire","ipcRenderer","messagebus","wrapListener","listener","_","message","_id","winID","fromWindow","Window","getByID","current","wrappedListeners","windowWrappedListeners","curWin","event","shift","_window","getAll","onMessage","winLisGroup","set","removeListener","delete","Set","get","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","resolveWindowWithID","electronWin","remote","url","currentWin","getCurrentWindow","defaultConfig","frame","resizable","hasShadow","icon","webPreferences","nodeIntegration","preload","configMap","config","_onmove","thisWindow","_onminimize","_onclose","removeEventListener","_oncurrclose","_isClosed","getPrototypeOf","isArgConfig","prop","hasOwnProperty","_url","title","resolve","location","href","origin","getGlobal","loadURL","setTitle","addEventListener","isClosed","size","getTitle","newTitle","isShown","isVisible","isMinimized","isMaximized","close","maximize","focus","setSize","deltaPos","setBounds","from","values","onDragEnd","dragging","preventDefault","wX","wY","classList","contains","screenX","screenY","touches","Menu","MenuItem","rightClickPosition","menu","append","label","accelerator","click","reload","app","relaunch","exit","type","inspectElement","popup","APP_UUID","InterApplicationBus","subscribe","unsubscribe","setVersion","System","getVersion","Application","getCurrent","mainWindow","getWindow","contentWindow","_internalBus","keys","_setupDOM","setWindows","setTimeout","onBoundsChange","_bounds","changeType","onClose","parent","getParent","getChildren","child","setParent","onMinimized","_titleEl","document","createElement","innerText","_title","head","appendChild","setupCurrentWindow","defaultWidth","defaultHeight","saveWindowState","autoShow","app_uuid","_isHidden","_isMinimized","_isMaximized","_children","_parent","bind","console","error","slice","beforeCallback","bringToFront","resizeTo","add","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","currentReady","data","win","postMessage","getBrowserInfo","ua","M","match","tem","exec","appName","appVersion","browser","e","nextZIndex","_Map","_map","_launcher","_getNextZIndex","minWidth","minHeight","maxWidth","Infinity","maxHeight","transformPropNames","_minSize","_maxSize","newWindow","src","style","position","isFinite","innerWidth","innerHeight","margin","padding","border","resize","overflow","body","getBoundingClientRect","parentElement","removeChild","_restoreBounds","display","transformPropName","transform","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,mBAAAH,GACA,gBAAAC,SACAA,QAAA,cAAAD,IAEAD,EAAA,cAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YAYA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GE3DV,IAAAC,GAAAhB,EAAA,GFgEKiB,EAAWR,EAAuBO,EE/DvChB,GAAA,GAGsB,mBAAXkB,SAA0BA,SAAUA,OAAOC,cAAPF,EAAAL,SACzB,mBAAXQ,SAA0BA,SAAUA,OAAOD,cAAPF,EAAAL,SFyE9ClB,EAAQkB,QAAUK,EAASL,QAC3BjB,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAYA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFG,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GGvFZ,IAAAM,GAAArB,EAAA,GACAsB,EAAAtB,EAAA,GH6FKuB,EAAUd,EAAuBa,GG3FhCE,GAA2B,gBAAiB,gBAoB9CL,EAAgB,GAAAE,GAAAI,aAAiBD,EAErCL,GAAcO,QAAU,SAExBP,EAAcQ,SACVC,KAAMC,OACNH,QAASG,OACTC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,QAAQ,GAIa,mBAAdC,aAEPjB,EAAcQ,QAAQO,SAAY,SAAUG,GAAK,MAAO,sVAAsVC,KAAKD,IAAM,0kDAA0kDC,KAAKD,EAAEE,OAAO,EAAG,KAAQH,UAAUI,WAAaJ,UAAUK,QAAUrB,OAAOsB,OAE9iEvB,EAAcQ,QAAQM,WAAad,EAAce,UAIrDf,EAAcwB,SAAdpB,EAAAX,QHuGClB,EAAQkB,QGnGMO,EHoGdxB,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GIvJxF,QAASkC,KACL,MAAO,SAAWC,KAAc,GAAIC,OAAQC,UJ0I/ClC,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GIjKZ,IAAAiC,GAAAhD,EAAA,GJsKKiD,EAAiBxC,EAAuBuC,GIrK7CE,EAAAlD,EAAA,GJyKKmD,EAAiB1C,EAAuByC,GIvKvCL,EAAY,WAGd,IAAK,GAFDO,MAEKC,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAKD,EAAIC,IAAMA,EAAI,GAAK,IAAM,IAAOA,EAAGC,SAAS,GAE/E,OAAO,YACH,GAAIC,GAAqB,WAAhBC,KAAKC,SAAwB,EAClCC,EAAqB,WAAhBF,KAAKC,SAAwB,EAClCE,EAAqB,WAAhBH,KAAKC,SAAwB,EAClCG,EAAqB,WAAhBJ,KAAKC,SAAwB,CAEtC,OAAOL,GAAS,IAALG,GAAaH,EAAIG,GAAM,EAAI,KAAQH,EAAIG,GAAM,GAAK,KAAQH,EAAIG,GAAM,GAAK,KAAQ,IACxFH,EAAS,IAALM,GAAaN,EAAIM,GAAM,EAAI,KAAQ,IAAMN,EAAIM,GAAM,GAAK,GAAO,IAAQN,EAAIM,GAAM,GAAK,KAAQ,IAClGN,EAAS,GAALO,EAAY,KAAQP,EAAIO,GAAM,EAAI,KAAQ,IAAMP,EAAIO,GAAM,GAAK,KAAQP,EAAIO,GAAM,GAAK,KAC1FP,EAAS,IAALQ,GAAaR,EAAIQ,GAAM,EAAI,KAAQR,EAAIQ,GAAM,GAAK,KAAQR,EAAIQ,GAAM,GAAK,QJkLxFlE,GAAQkB,SIzKLgC,sBACAnB,uBACAoC,wBJ4KHlE,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,GAEtB,YKtMD,SAAS+B,KAAyC,GAA5BqC,GAA4BC,UAAAC,OAAA,GAAAnC,SAAAkC,UAAA,GAAAA,UAAA,KAC9CjE,MAAKmE,mBACLnE,KAAKoE,cAFyC,IAAAC,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAI9C,OAAAyC,GAAAC,EAAmCT,EAAnCU,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA0D,IAA/CS,GAA+CN,EAAAvD,KACtDjB,MAAKmE,gBAAgBW,OALqB,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,KLwMjDxD,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IK3LZU,EAAasD,UAAUC,GAAK,SAAUC,EAAYC,GAC9CD,EAAaA,EAAWE,cAAcC,MAAM,IADiB,IAAAC,IAAA,EAAAC,GAAA,EAAAC,EAAA1D,MAAA,KAG7D,OAAA2D,GAAAC,EAAwBR,EAAxBT,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAAoC,IAAzBK,GAAyBF,EAAAzE,KAEhC,IAAwCc,SAApC/B,KAAKmE,gBAAgByB,GAAzB,CAGA,IAAKR,GAAsD,kBAA9BA,GAAcS,YACvC,KAAM,IAAIC,OAAM,wDAIhB9F,MAAKmE,gBAAgByB,GAAWG,QAAQX,IAAkB,GAG9DpF,KAAKmE,gBAAgByB,GAAWI,KAAKZ,KAhBoB,MAAAL,GAAAS,GAAA,EAAAC,EAAAV,EAAA,aAAAQ,GAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,KAAAC,MAyBjE9D,EAAasD,UAAUgB,KAAO,SAAUL,EAAWR,GAC/C,QAASc,KACLlG,KAAKmG,IAAIP,EAAWM,GACpBd,EAAcgB,MAAMpG,KAAMiE,WAE9BjE,KAAKkF,GAAGU,EAAWM,IAQvBvE,EAAasD,UAAUkB,IAAM,SAAUhB,EAAYC,GAC/CD,EAAaA,EAAWE,cAAcC,MAAM,IADkB,IAAAe,IAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KAG9D,OAAAyE,GAAAC,EAAwBtB,EAAxBT,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAoC,IAAzBT,GAAyBY,EAAAvF,KAEhC,IAAwCc,SAApC/B,KAAKmE,gBAAgByB,GAA4B,MAGrD,KAAKR,GAAsD,kBAA9BA,GAAcS,YACvC,KAAM,IAAIC,OAAM,yDAIpB,IAAMY,GAAQ1G,KAAKmE,gBAAgByB,GAAWG,QAAQX,EAElDsB,IAAS,GAAK1G,KAAKmE,gBAAgByB,GAAWe,OAAOD,EAAO,IAfN,MAAA3B,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,aAAAsB,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,MAuBlE5E,EAAasD,UAAU2B,WAAa,SAAUzB,GAC1CA,EAAaA,EAAWE,aAD8B,IAAAwB,IAAA,EAAAC,GAAA,EAAAC,EAAAhF,MAAA,KAGtD,OAAAiF,GAAAC,EAAwB9B,EAAxBT,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAoC,IAAzBjB,GAAyBoB,EAAA/F,KAEhC,IAAwCc,SAApC/B,KAAKmE,gBAAgByB,GAA4B,MAErD5F,MAAKmE,gBAAgByB,OAP6B,MAAAb,GAAA+B,GAAA,EAAAC,EAAAhC,EAAA,aAAA8B,GAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,KAAAC,MAiB1DpF,EAAasD,UAAUiC,KAAO,SAAUtB,GAAoB,OAAAuB,GAAAlD,UAAAC,OAANkD,EAAMC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,EAAA,GAAArD,UAAAqD,EAIxD,IAHA1B,EAAYA,EAAUP,cAGkBtD,SAApC/B,KAAKmE,gBAAgByB,GAA4B,OAAO,CAE5D,IAAI2B,IAAY,EANwCC,GAAA,EAAAC,GAAA,EAAAC,EAAA3F,MAAA,KAQxD,OAAA4F,GAAAC,EAA4B5H,KAAKmE,gBAAgByB,GAAjDlB,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EAA6D,IAAlDpC,GAAkDuC,EAAA1G,KAEzDsG,GAAYA,GAAanC,EAAcgB,MAAMpG,KAAMoH,MAAU,GAVT,MAAArC,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,aAAAyC,GAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,KAAAC,IAAA,GAAAG,IAAA,EAAAC,GAAA,EAAAC,EAAAhG,MAAA,KAaxD,OAAAiG,GAAAC,EAA2BjI,KAAKoE,YAAhCM,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAA6C,IAAlCK,GAAkCF,EAAA/G,KAEzCsG,GAAYA,GAAaW,EAAahB,KAAKd,MAAM8B,EAAcjE,cAAe,GAf1B,MAAAc,GAAA+C,GAAA,EAAAC,EAAAhD,EAAA,aAAA8C,GAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,WAAA8C,EAAA,KAAAC,IAkBxD,MAAOR,IAOX5F,EAAasD,UAAUkD,QAAU,SAAUD,GAEvC,IAAKA,IAAiBA,EAAahB,KAC/B,KAAM,IAAIpB,OAAM,gEAIhB9F,MAAKoE,YAAY2B,QAAQmC,IAAiB,GAG9ClI,KAAKoE,YAAY4B,KAAKkC,IAO1BvG,EAAasD,UAAUmD,WAAa,SAAUF,GAE1C,IAAKA,IAAiBA,EAAahB,KAC/B,KAAM,IAAIpB,OAAM,mEAIpB,MAAI9F,KAAKoE,YAAY2B,QAAQmC,IAAiB,GAA9C,CAGA,GAAMxB,GAAQ1G,KAAKoE,YAAY2B,QAAQmC,EAEnCxB,IAAS,GAAK1G,KAAKoE,YAAYuC,OAAOD,EAAO,KL4WpD9G,EAAQkB,QKzWMa,EL0Wd9B,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,GAEtB,YM7gBD,SAASmE,GAAasE,GAClB,MAAMrI,gBAAgB+D,IAEtB/D,KAAKqI,SAAWA,OAChBrI,KAAKsI,MAAQ,IAHiC,GAAIvE,GAAasE,GN8gBlEtH,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IMzgBZ8C,EAAakB,UAAUsD,IAAM,SAAUF,GACnC,GAAIG,GAAUxI,IAGd,OADAA,MAAKsI,OAAS,EACP,WACCD,GAAYA,0BAChBG,EAAQC,WAIhB1E,EAAakB,UAAUwD,OAAS,WAC5BzI,KAAKsI,OAAS,EACVtI,KAAKsI,OAAS,GAAKtI,KAAKqI,YN2hB/BzI,EAAQkB,QMxhBMiD,ENyhBdlE,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAkBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAhBvFG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GOljBV,IAAAyH,GAAAxI,EAAA,GPujBKyI,EAAWhI,EAAuB+H,GOtjBvCE,EAAA1I,EAAA,GP0jBK2I,EAAgBlI,EAAuBiI,GOzjB5CE,EAAA5I,EAAA,GP6jBK6I,EAAkBpI,EAAuBmI,EAc7ClJ,GAAQkB,SO9jBLkI,sBACAC,wBAOAC,mBAOAC,eACAC,kBPukBHvJ,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAgBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASyI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAhBhHzI,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIwI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrG,GAAI,EAAGA,EAAIqG,EAAM1F,OAAQX,IAAK,CAAE,GAAIsG,GAAaD,EAAMrG,EAAIsG,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjJ,OAAOC,eAAe2I,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYtE,UAAWiF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MQxnBjiBX,EAAA1I,EAAA,GR4nBK2I,EAAgBlI,EAAuBiI,GQ3nB5CE,EAAA5I,EAAA,GR+nBK6I,EAAkBpI,EAAuBmI,GQ1nBxCM,ERmoBQ,WQ7nBV,QAAAA,GAAYgB,EAAMC,GAAKhB,EAAArJ,KAAAoJ,EACnB,IAAIxI,GAAMwJ,CAENxJ,IAAOA,EAAIiF,cAAgByE,QAE3BtK,KAAKoK,KAAOxJ,EAAIwJ,KAChBpK,KAAKqK,IAAMzJ,EAAIyJ,MAGfrK,KAAKoK,KAAOA,EACZpK,KAAKqK,IAAMA,GR83BlB,MA/OAZ,GAAaL,IACTa,IAAK,QACLhJ,MAAO,WQxoBR,MAAO,IAAImI,GAAOpJ,SRkpBjBiK,IAAK,QACLhJ,MAAO,SAAUsJ,GACb,QAASC,KACL,MAAOD,GAAOnE,MAAMpG,KAAMiE,WAO9B,MAJAuG,GAAMhH,SAAW,WACb,MAAO+G,GAAO/G,YAGXgH,GACT,WQrpBH,MAAOA,OAAMxK,KAAKoK,OAASI,MAAMxK,KAAKqK,SRgqBrCJ,IAAK,YACLhJ,MAAO,WQrpBR,MAAOjB,SRqqBNiK,IAAK,iBACLhJ,MAAO,WQxpBR,MAAO,IAAA4H,GAAA/H,QAAgBd,KAAKoK,KAAMpK,KAAKqK,IAAKrK,KAAKoK,KAAMpK,KAAKqK,QRwqB3DJ,IAAK,mBACLhJ,MAAO,WQ9pBR,MAAO,IAAA8H,GAAAjI,QAAkBd,KAAKyK,qBRyqB7BR,IAAK,kBACLhJ,MAAO,SQlqBIyJ,GACZ,GAAIC,GAAOD,EAAME,SAAS5K,KAE1B,OAAO2K,GAAKP,KAAOO,EAAKP,KAAOO,EAAKN,IAAMM,EAAKN,OR4qB9CJ,IAAK,WACLhJ,MAAO,SQrqBHyJ,GACL,MAAOhH,MAAKmH,KAAK7K,KAAK8K,gBAAgBJ,OR+qBrCT,IAAK,MACLhJ,MAAO,SQxqBRyJ,GACA,IAAKA,EAAS,KAAM,IAAI5E,OAAM,gCAK9B,OAJA4E,GAAQA,EAAMK,YAEd/K,KAAKoK,KAAOM,EAAMN,KAClBpK,KAAKqK,IAAMK,EAAML,IACVrK,QRqrBNiK,IAAK,SACLhJ,MAAO,SQ7qBLmJ,EAAMC,GAGT,MAFID,IAAQA,EAAKvE,cAAgByE,SAAUtK,KAAKoK,KAAOA,GACnDC,GAAOA,EAAIxE,cAAgByE,SAAUtK,KAAKqK,IAAMA,GAC7CrK,QR4rBNiK,IAAK,SACLhJ,MAAO,SQprBL+J,EAAWC,GAGd,MAFID,IAAaA,EAAUnF,cAAgByE,SAAUtK,KAAKoK,KAAOY,GAC7DC,GAAYA,EAASpF,cAAgByE,SAAUtK,KAAKqK,IAAMY,GACvDjL,QRksBNiK,IAAK,SACLhJ,MAAO,SQ3rBLyJ,GACH,IAAKA,EAAS,KAAM,IAAI5E,OAAM,mCAC9B4E,GAAQA,EAAMK,aAEVrH,KAAKwH,IAAIR,EAAMN,MAAQ1G,KAAKwH,IAAIlL,KAAKoK,OAASI,MAAMxK,KAAKoK,SAASpK,KAAKoK,KAAOM,EAAMN,OACpF1G,KAAKwH,IAAIR,EAAML,KAAO3G,KAAKwH,IAAIlL,KAAKqK,MAAQG,MAAMxK,KAAKqK,QAAQrK,KAAKqK,IAAMK,EAAML,QR2sBnFJ,IAAK,SACLhJ,MAAO,SQpsBLyJ,GACH,IAAKA,EAAS,KAAM,IAAI5E,OAAM,mCAC9B4E,GAAQA,EAAMK,aAEVrH,KAAKwH,IAAIR,EAAMN,MAAQ1G,KAAKwH,IAAIlL,KAAKoK,OAASI,MAAMxK,KAAKoK,SAASpK,KAAKoK,KAAOM,EAAMN,OACpF1G,KAAKwH,IAAIR,EAAML,KAAO3G,KAAKwH,IAAIlL,KAAKqK,MAAQG,MAAMxK,KAAKqK,QAAQrK,KAAKqK,IAAMK,EAAML,QRotBnFJ,IAAK,MACLhJ,MAAO,SQ7sBRyJ,GACA,IAAKA,EAAS,KAAM,IAAI5E,OAAM,gCAK9B,OAJA4E,GAAQA,EAAMK,YAEd/K,KAAKoK,MAAQM,EAAMN,KACnBpK,KAAKqK,KAAOK,EAAML,IACXrK,QRktBNiK,IAAK,WAQLhJ,MAAO,SQltBHyJ,GACL,IAAKA,EAAS,KAAM,IAAI5E,OAAM,qCAK9B,OAJA4E,GAAQA,EAAMK,YAEd/K,KAAKoK,MAAQM,EAAMN,KACnBpK,KAAKqK,KAAOK,EAAML,IACXrK,SRwtBHoJ,IAGXxJ,GAAQkB,QQvtBMsI,ERwtBdvJ,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAiBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASyI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCS56BjH,QAAS2B,GAAOC,GAAc,OACtBD,GAASzH,KAAKwH,IAAIE,GADIjE,EAAAlD,UAAAC,OAANmH,EAAMhE,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAN+D,EAAM/D,EAAA,GAAArD,UAAAqD,EAAA,IAAAjD,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAG1B,OAAAyC,GAAAC,EAAkB4G,EAAlB3G,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwB,IAAbiH,GAAa9G,EAAAvD,MAChBsK,EAAS7H,KAAKwH,IAAII,EAElBC,GAASJ,IACTC,EAAME,EACNH,EAASI,IARS,MAAAxG,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAY1B,OACI6G,IAAKA,EACLF,IAAKC,GT64BZpK,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIwI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrG,GAAI,EAAGA,EAAIqG,EAAM1F,OAAQX,IAAK,CAAE,GAAIsG,GAAaD,EAAMrG,EAAIsG,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjJ,OAAOC,eAAe2I,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYtE,UAAWiF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MSn6BjiBb,EAAAxI,EAAA,GTw6BKyI,EAAWhI,EAAuB+H,GSv6BvCI,EAAA5I,EAAA,GT26BK6I,EAAkBpI,EAAuBmI,GSn5BxCE,ETy8Ba,WSl8Bf,QAAAA,GAAYoB,EAAMC,EAAKmB,EAAOC,GAAQpC,EAAArJ,KAAAgJ,EAClC,IAAIpI,GAAMwJ,CAENxJ,IAAOA,EAAIiF,cAAgByE,QACvB1J,EAAI6J,iBAAkB7J,EAAMA,EAAI6J,kBAEpCzK,KAAKoK,KAAOxJ,EAAIwJ,KAChBpK,KAAKqK,IAAMzJ,EAAIyJ,IACfrK,KAAKwL,MAAQ5K,EAAI4K,MACjBxL,KAAKyL,OAAS7K,EAAI6K,SAGlBzL,KAAKoK,KAAOA,EACZpK,KAAKqK,IAAMA,EACXrK,KAAKwL,MAAQA,EACbxL,KAAKyL,OAASA,GT+lDrB,MAxoBAhC,GAAaT,IACTiB,IAAK,QACLhJ,MAAO,WSh9BR,MAAO,IAAI+H,GAAYhJ,ST09BtBiK,IAAK,QACLhJ,MAAO,SAAUsJ,GACb,QAASC,KACL,MAAOD,GAAOnE,MAAMpG,KAAMiE,WAO9B,MAJAuG,GAAMhH,SAAW,WACb,MAAO+G,GAAO/G,YAGXgH,GACT,WS79BH,MAAOA,OAAMxK,KAAKoK,OAASI,MAAMxK,KAAKqK,MAAQG,MAAMxK,KAAKwL,QAAUhB,MAAMxK,KAAKyL,YTu+B7ExB,IAAK,WACLhJ,MAAO,WSh+BR,MAAOyC,MAAKwH,IAAIlL,KAAKwL,MAAQxL,KAAKoK,ST0+BjCH,IAAK,YACLhJ,MAAO,WSn+BR,MAAOyC,MAAKwH,IAAIlL,KAAKyL,OAASzL,KAAKqK,QT6+BlCJ,IAAK,UACLhJ,MAAO,WSt+BR,MAAO,IAAA0H,GAAA7H,QAAWd,KAAK0L,WAAY1L,KAAK2L,gBTg/BvC1B,IAAK,UACLhJ,MAAO,WSz+BR,MAAOjB,MAAK0L,WAAa1L,KAAK2L,eTm/B7B1B,IAAK,cACLhJ,MAAO,WS5+BR,MAAO,IAAA0H,GAAA7H,QAAWd,KAAKoK,KAAMpK,KAAKqK,QTu/BjCJ,IAAK,iBACLhJ,MAAO,WS5+BR,MAAOjB,ST4/BNiK,IAAK,mBACLhJ,MAAO,WSl/BR,MAAO,IAAA8H,GAAAjI,QAAkBd,ST4/BxBiK,IAAK,oBACLhJ,MAAO,WSr/BR,MAAO,IAAA0H,GAAA7H,QAAWd,KAAKoK,KAAOpK,KAAK0L,WAAa,EAAG1L,KAAKqK,IAAMrK,KAAK2L,YAAc,MTggChF1B,IAAK,aACLhJ,MAAO,SSz/BDyJ,GACP,IAAKA,EAAS,KAAM,IAAI5E,OAAM,uCAG9B,OAFA4E,GAAQA,EAAMD,iBAEP,GAAIzB,GAAYhJ,KAAKoK,KAAOM,EAAMN,KAAMpK,KAAKqK,IAAMK,EAAML,IACxCrK,KAAKwL,MAAQd,EAAMc,MAAOxL,KAAKyL,OAASf,EAAMe,WTogCrExB,IAAK,wBACLhJ,MAAO,SS7/BUyJ,GAClB,IAAKA,EAAS,KAAM,IAAI5E,OAAM,kDAG9B,OAFA4E,GAAQA,EAAMD,iBAEPC,EAAMkB,oBAAoBhB,SAAS5K,KAAK4L,oBAAoBhB,SAAS5K,KAAK6L,mBT4gChF5B,IAAK,kBACLhJ,MAAO,SSlgCIyJ,GACZ,IAAKA,EAAS,KAAM,IAAI5E,OAAM,4CAC9B4E,GAAQA,EAAMD,gBAEd,IAAIL,GAAO1G,KAAKoI,IAAI9L,KAAKoK,KAAMM,EAAMN,MACjCC,EAAM3G,KAAKoI,IAAI9L,KAAKqK,IAAKK,EAAML,KAC/BmB,EAAQ9H,KAAK0H,IAAIpL,KAAKwL,MAAOd,EAAMc,OACnCC,EAAS/H,KAAK0H,IAAIpL,KAAKyL,OAAQf,EAAMe,OAEzC,OAAIrB,KAASoB,GAASnB,IAAQoB,EACnB,GAAA9C,GAAA7H,QAAWsJ,EAAMC,GACjBD,GAAQoB,GAASnB,GAAOoB,EACxB,GAAIzC,GAAYoB,EAAMC,EAAKmB,EAAOC,GADtC,UTghCNxB,IAAK,4BACLhJ,MAAO,SSvgCcyJ,GACtBA,EAAQA,EAAMK,WACd,IAAIgB,GAASrB,EAAMN,MAAQpK,KAAKoK,KAAOpK,KAAKoK,KAAQM,EAAMN,MAAQpK,KAAKwL,MAAQxL,KAAKwL,MAAQd,EAAMN,KAC9F4B,EAAQtB,EAAML,KAAOrK,KAAKqK,IAAMrK,KAAKqK,IAAOK,EAAML,KAAOrK,KAAKyL,OAASzL,KAAKyL,OAASf,EAAML,IAC3F4B,EAAO,GAAAtD,GAAA7H,QAAWiL,EAAOC,EAE7B,OAAOC,GAAKnB,gBAAgBJ,MTihC3BT,IAAK,qBACLhJ,MAAO,SS1gCOyJ,GACf,MAAOhH,MAAKmH,KAAK7K,KAAKkM,0BAA0BxB,OTohC/CT,IAAK,MACLhJ,MAAO,SS7gCRyJ,GACA,IAAKA,EAAS,KAAM,IAAI5E,OAAM,gCAO9B,OANA4E,GAAQA,EAAMD,iBAEdzK,KAAKoK,KAAOM,EAAMN,KAClBpK,KAAKqK,IAAMK,EAAML,IACjBrK,KAAKwL,MAAQd,EAAMc,MACnBxL,KAAKyL,OAASf,EAAMe,OACbzL,QT0hCNiK,IAAK,SACLhJ,MAAO,SSlhCLmJ,EAAMC,GAST,MARID,IAAQA,EAAKvE,cAAgByE,SAC7BtK,KAAKwL,MAAQpB,GAAQpK,KAAKwL,MAAQxL,KAAKoK,MACvCpK,KAAKoK,KAAOA,GAEZC,GAAOA,EAAIxE,cAAgByE,SAC3BtK,KAAKyL,OAASpB,GAAOrK,KAAKyL,OAASzL,KAAKqK,KACxCrK,KAAKqK,IAAMA,GAERrK,QT6hCNiK,IAAK,SACLhJ,MAAO,SSrhCL+J,EAAWC,GASd,MARID,IAAaA,EAAUnF,cAAgByE,SACvCtK,KAAKoK,MAAQY,EACbhL,KAAKwL,OAASR,GAEdC,GAAYA,EAASpF,cAAgByE,SACrCtK,KAAKqK,KAAOY,EACZjL,KAAKyL,QAAUR,GAEZjL,QTiiCNiK,IAAK,WACLhJ,MAAO,SSxhCHkL,EAAOC,EAAQC,GAIpB,GAAIC,GAAUtM,KAAKuM,UACfC,EAAU,GAAA7D,GAAA7H,QAAWqL,GAASG,EAAQlC,KAAMgC,GAAUE,EAAQjC,IAGlE,IADAgC,EAASA,GAAU,WACG,gBAAXA,IAAuBA,YAAkBI,QAAQ,CACxD,GAAIC,GAAYL,CAEhBA,GAASrM,KAAK6L,cACVa,EAAU3G,QAAQ,UAAY,IAAKsG,EAAOjC,MAAQkC,EAAQlC,MAC1DsC,EAAU3G,QAAQ,WAAa,IAAKsG,EAAOhC,KAAOiC,EAAQjC,KAOlE,MAJArK,MAAKoK,OAASiC,EAAOjC,KAAOpK,KAAKoK,OAASkC,EAAQlC,KAAOoC,EAAQpC,MAAQkC,EAAQlC,KACjFpK,KAAKwL,QAAUa,EAAOjC,KAAOpK,KAAKwL,QAAUc,EAAQlC,KAAOoC,EAAQpC,MAAQkC,EAAQlC,KACnFpK,KAAKqK,MAAQgC,EAAOhC,IAAMrK,KAAKqK,MAAQiC,EAAQjC,IAAMmC,EAAQnC,KAAOiC,EAAQjC,IAC5ErK,KAAKyL,SAAWY,EAAOhC,IAAMrK,KAAKyL,SAAWa,EAAQjC,IAAMmC,EAAQnC,KAAOiC,EAAQjC,IAC3ErK,QTsiCNiK,IAAK,aACLhJ,MAAO,SS/hCDyJ,GACP,IAAKA,EAAS,KAAM,IAAI5E,OAAM,uCAG9B,OAFA4E,GAAQA,EAAMD,iBAEPC,EAAMN,MAAQpK,KAAKoK,MAAQM,EAAMc,OAASxL,KAAKwL,OAClDd,EAAML,KAAOrK,KAAKqK,KAAOK,EAAMe,QAAUzL,KAAKyL,UT0iCjDxB,IAAK,eACLhJ,MAAO,SSniCC0L,GACT,IAAKA,EAAU,KAAM,IAAI7G,OAAM,0CAC/B,IAAI6G,EAAO9G,cAAgBwB,MAAS,KAAM,IAAIvB,OAAM,wDAEpD,KAAK,GAAIY,GAAQ,EAAGA,EAAQiG,EAAOzI,OAAQwC,GAAS,EAChD,GAAI1G,KAAK4M,WAAWD,EAAOjG,IAAW,OAAO,CAEjD,QAAO,KTmjCNuD,IAAK,aACLhJ,MAAO,SS5iCDyJ,GACP,IAAKA,EAAS,KAAM,IAAI5E,OAAM,uCAG9B,OAFA4E,GAAQA,EAAMD,iBAELzK,KAAKqK,KAAOK,EAAMe,QAAUzL,KAAKyL,QAAUf,EAAML,MACjDrK,KAAKoK,OAASM,EAAMc,OAASxL,KAAKwL,QAAUd,EAAMN,OACjDpK,KAAKoK,MAAQM,EAAMc,OAASxL,KAAKwL,OAASd,EAAMN,OACjDpK,KAAKqK,MAAQK,EAAMe,QAAUzL,KAAKyL,SAAWf,EAAML,QTqjC3DJ,IAAK,kBACLhJ,MAAO,SS9iCI0L,GACZ,IAAKA,EAAU,KAAM,IAAI7G,OAAM,6CAC3B6G,GAAO9G,cAAgBwB,QAASsF,GAAUA,GAE9C,KAAK,GAAIjG,GAAQ,EAAGA,EAAQiG,EAAOzI,OAAQwC,GAAS,EAAG,CACnD,GAAIgE,GAAQiC,EAAOjG,GAAO+D,gBAE1B,IAAIzK,KAAKqK,KAAOK,EAAMe,QAAUzL,KAAKyL,QAAUf,EAAML,IAAK,CACtD,GAAIrK,KAAKoK,OAASM,EAAMc,MAAS,MAAO,MACxC,IAAIxL,KAAKwL,QAAUd,EAAMN,KAAQ,MAAO,QAE5C,GAAIpK,KAAKoK,MAAQM,EAAMc,OAASxL,KAAKwL,OAASd,EAAMN,KAAM,CACtD,GAAIpK,KAAKqK,MAAQK,EAAMe,OAAU,MAAO,KACxC,IAAIzL,KAAKyL,SAAWf,EAAML,IAAO,MAAO,cTskC/CJ,IAAK,uBACLhJ,MAAO,SS7jCS0L,GACjB,IAAKA,EAAU,KAAM,IAAI7G,OAAM,kDAC3B6G,GAAO9G,cAAgBwB,QAASsF,GAAUA,GAE9C,KAAK,GAAIjG,GAAQ,EAAGA,EAAQiG,EAAOzI,OAAQwC,GAAS,EAAG,CACnD,GAAIgE,GAAQiC,EAAOjG,GAAO+D,gBAE1B,IAAIzK,KAAKqK,KAAOK,EAAMe,QAAUzL,KAAKyL,QAAUf,EAAML,IAAK,CACtD,GAAIrK,KAAKoK,OAASM,EAAMc,MAAS,MAAO,OACxC,IAAIxL,KAAKwL,QAAUd,EAAMN,KAAQ,MAAO,OAE5C,GAAIpK,KAAKoK,MAAQM,EAAMc,OAASxL,KAAKwL,OAASd,EAAMN,KAAM,CACtD,GAAIpK,KAAKqK,MAAQK,EAAMe,OAAU,MAAO,QACxC,IAAIzL,KAAKyL,SAAWf,EAAML,IAAO,MAAO,WTqlC/CJ,IAAK,sBACLhJ,MAAO,SS5kCQyJ,GAChB,IAAKA,EAAS,KAAM,IAAI5E,OAAM,2CAC9B4E,GAAQA,EAAMD,gBACd,IAAIoC,GAAY7M,KAAK4L,oBACjBkB,IAsBJ,OApBAA,GAAI9G,MACA+G,KAAQ,OACRD,IAAKpC,EAAMwB,0BAA0BlM,KAAKoK,KAAMyC,EAAUxC,OAE9DyC,EAAI9G,MACA+G,KAAQ,MACRD,IAAKpC,EAAMwB,0BAA0BW,EAAUzC,KAAMpK,KAAKqK,OAE9DyC,EAAI9G,MACA+G,KAAQ,QACRD,IAAKpC,EAAMwB,0BAA0BlM,KAAKwL,MAAOqB,EAAUxC,OAE/DyC,EAAI9G,MACA+G,KAAQ,SACRD,IAAKpC,EAAMwB,0BAA0BW,EAAUzC,KAAMpK,KAAKyL,UAE9DqB,EAAIE,KAAK,SAAUzK,EAAG0K,GAClB,MAAO1K,GAAEuK,IAAMG,EAAEH,MAGdA,EAAII,IAAI,SAAUJ,GAAO,MAAOA,GAAIC,UT0lC1C9C,IAAK,iBACLhJ,MAAO,SSnlCGyJ,GACX,GAAIyC,GAAQnN,KAAKoN,oBAAoB1C,EAErC,OAAOyC,GAAM,MT+lCZlD,IAAK,eACLhJ,MAAO,SStlCCyJ,EAAO2C,GAChB,IAAK3C,EAAS,KAAM,IAAI5E,OAAM,yCAC9B4E,GAAQA,EAAMD,iBACd4C,EAAeA,GAAgB,CAE/B,IAAIC,GAAY,GAAA3E,GAAA7H,QAAWyM,IAAKA,IAEhC,IAAIvN,KAAKqK,KAAOK,EAAMe,QAAUzL,KAAKyL,QAAUf,EAAML,IAAK,CAEtD,GAAMmD,GAAerC,EAAOT,EAAMN,KAAOpK,KAAKwL,MAAOd,EAAMc,MAAQxL,KAAKoK,KAExE,IAAIoD,EAAatC,KAAOmC,EAAc,CAClCC,EAAUlD,KAAOoD,EAAapC,GAG9B,IAAMqC,GAAetC,EAAOT,EAAML,IAAMrK,KAAKqK,IAAKK,EAAMe,OAASzL,KAAKyL,OAElEgC,GAAavC,KAAOmC,IACpBC,EAAUjD,IAAMoD,EAAarC,UAGlC,IAAIpL,KAAKoK,MAAQM,EAAMc,OAASxL,KAAKwL,OAASd,EAAMN,KAAM,CAE7D,GAAMqD,GAAetC,EAAOT,EAAML,IAAMrK,KAAKyL,OAAQf,EAAMe,OAASzL,KAAKqK,IAEzE,IAAIoD,EAAavC,KAAOmC,EAAc,CAClCC,EAAUjD,IAAMoD,EAAarC,GAG7B,IAAMoC,GAAerC,EAAOT,EAAMN,KAAOpK,KAAKoK,KAAMM,EAAMc,MAAQxL,KAAKwL,MAEnEgC,GAAatC,KAAOmC,IACpBC,EAAUlD,KAAOoD,EAAapC,MAK1C,MAAOkC,MTsmCNrD,IAAK,eACLhJ,MAAO,SS/lCC0L,GACT,IAAKA,EAAU,KAAM,IAAI7G,OAAM,0CAC/B,IAAI6G,EAAO9G,cAAgBwB,MAAS,KAAM,IAAIvB,OAAM,wDAEpD,KAAK,GAAIY,GAAQ,EAAGA,EAAQiG,EAAOzI,OAAQwC,GAAS,EAChD,GAAI1G,KAAK0N,WAAWf,EAAOjG,IAAW,OAAO,CAEjD,QAAO,KT+mCNuD,IAAK,cACLhJ,MAAO,SSxmCAyJ,GACR,IAAKA,EAAS,KAAM,IAAI5E,OAAM,wCAG9B,OAFA4E,GAAQA,EAAMD,iBAEPzK,KAAKoK,KAAOM,EAAMc,OAASxL,KAAKwL,MAAQd,EAAMN,MAAQpK,KAAKqK,IAAMK,EAAMe,QAAUzL,KAAKyL,OAASf,EAAML,OTonC3GJ,IAAK,gBACLhJ,MAAO,SS7mCE0L,GACV,IAAKA,EAAU,KAAM,IAAI7G,OAAM,2CAC/B,IAAI6G,EAAO9G,cAAgBwB,MAAS,KAAM,IAAIvB,OAAM,yDAEpD,KAAK,GAAIY,GAAQ,EAAGA,EAAQiG,EAAOzI,OAAQwC,GAAS,EAChD,GAAI1G,KAAK2N,YAAYhB,EAAOjG,IAAW,OAAO,CAElD,QAAO,KT6nCNuD,IAAK,eACLhJ,MAAO,SStnCC0L,GACT,IAAKA,EAAU,KAAM,IAAI7G,OAAM,0CAC/B,IAAI6G,EAAO9G,cAAgBwB,MAAS,KAAM,IAAIvB,OAAM,wDAEpD,KAAK,GAAIY,GAAQ,EAAGA,EAAQiG,EAAOzI,OAAQwC,GAAS,EAChD,GAAI1G,KAAK2N,YAAYhB,EAAOjG,IAAW,MAAOiG,GAAOjG,OTioCrDsC,IAGXpJ,GAAQkB,QS/nCMkI,ETgoCdnJ,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAgBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASyI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAhBhHzI,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIwI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrG,GAAI,EAAGA,EAAIqG,EAAM1F,OAAQX,IAAK,CAAE,GAAIsG,GAAaD,EAAMrG,EAAIsG,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjJ,OAAOC,eAAe2I,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYtE,UAAWiF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MU/pDjiBb,EAAAxI,EAAA,GVmqDKyI,EAAWhI,EAAuB+H,GUlqDvCE,EAAA1I,EAAA,GVsqDK2I,EAAgBlI,EAAuBiI,GUjqDtCK,EV0qDe,WUtqDjB,QAAAA,GAAY2E,GAAkB,GAAXC,GAAW5J,UAAAC,OAAA,GAAAnC,SAAAkC,UAAA,GAAAA,UAAA,KAC1B,IAD0BoF,EAAArJ,KAAAiJ,IACrB2E,EAAS,KAAM,IAAI9H,OAAM,sDAC1B8H,GAAM/H,cAAgBwB,QAASuG,GAASA,IAC5C5N,KAAK4N,QAHqB,IAAAvJ,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAK1B,OAAAyC,GAAAC,EAAgBmJ,EAAhBlJ,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAuB,IAAdyJ,GAActJ,EAAAvD,KACf6M,GAAIjI,cAAJgD,EAAA/H,QACAd,KAAK4N,MAAM5H,KAAK8H,GACTA,EAAIjI,cAAgBoD,EAC3BjJ,KAAK4N,MAAQ5N,KAAK4N,MAAMG,OAAOD,EAAIF,OAEnC5N,KAAK4N,MAAQ5N,KAAK4N,MAAMG,OAAOD,EAAIE,iBAAiBH,GAAMD,QAXxC,MAAA7I,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,KVovE7B,MAvhBAkF,GAAaR,IACTgB,IAAK,QACLhJ,MAAO,WUxsDR,IAAK,GAFD2M,GAAQ,GAAIvG,OAAMrH,KAAK4N,MAAM1J,QAExBwC,EAAQ,EAAGA,EAAQ1G,KAAK4N,MAAM1J,OAAQwC,GAAS,EACpDkH,EAAMlH,GAAS1G,KAAK4N,MAAMlH,GAAOuH,OAGrC,OAAO,IAAIhF,GAAc2E,MVotDxB3D,IAAK,WACLhJ,MAAO,WU7sDR,GAA0B,IAAtBjB,KAAK4N,MAAM1J,OAAgB,MAAO,EAItC,KAAK,GAHDkG,GAAOpK,KAAK4N,MAAM,GAAGxD,KACrBoB,EAAQxL,KAAK4N,MAAM,GAAGpC,MAEjB9E,EAAQ,EAAGA,EAAQ1G,KAAK4N,MAAM1J,OAAQwC,GAAS,EAEpD0D,EAAO1G,KAAK0H,IAAIhB,EAAMpK,KAAK4N,MAAMlH,GAAO0D,MACxCoB,EAAQ9H,KAAKoI,IAAIN,EAAOxL,KAAK4N,MAAMlH,GAAO8E,MAG9C,OAAOA,GAAQpB,KVytDdH,IAAK,YACLhJ,MAAO,WUltDR,GAA0B,IAAtBjB,KAAK4N,MAAM1J,OAAgB,MAAO,EAKtC,KAAK,GAHDmG,GAAMrK,KAAK4N,MAAM,GAAGvD,IACpBoB,EAASzL,KAAK4N,MAAM,GAAGnC,OAElB/E,EAAQ,EAAGA,EAAQ1G,KAAK4N,MAAM1J,OAAQwC,GAAS,EAEpD2D,EAAM3G,KAAK0H,IAAIf,EAAKrK,KAAK4N,MAAMlH,GAAO2D,KACtCoB,EAAS/H,KAAKoI,IAAIL,EAAQzL,KAAK4N,MAAMlH,GAAO+E,OAGhD,OAAOA,GAASpB,KV8tDfJ,IAAK,UACLhJ,MAAO,WUvtDR,MAAOjB,MAAKyK,iBAAiB8B,aViuD5BtC,IAAK,cACLhJ,MAAO,WU1tDR,MAAOjB,MAAKyK,iBAAiBoB,iBVouD5B5B,IAAK,iBACLhJ,MAAO,WU7tDR,GAA0B,IAAtBjB,KAAK4N,MAAM1J,OAAgB,MAAO,IAAA2E,GAAA/H,QAAgByM,IAAKA,IAAKA,IAAKA,IAIrE,KAAK,GAFDO,GAAM9N,KAAK4N,MAAM,GAAGK,QAEfvH,EAAQ,EAAGA,EAAQ1G,KAAK4N,MAAM1J,OAAQwC,GAAS,EACpDoH,EAAI1D,KAAO1G,KAAK0H,IAAI0C,EAAI1D,KAAMpK,KAAK4N,MAAMlH,GAAO0D,MAChD0D,EAAIzD,IAAM3G,KAAK0H,IAAI0C,EAAIzD,IAAKrK,KAAK4N,MAAMlH,GAAO2D,KAC9CyD,EAAItC,MAAQ9H,KAAKoI,IAAIgC,EAAItC,MAAOxL,KAAK4N,MAAMlH,GAAO8E,OAClDsC,EAAIrC,OAAS/H,KAAKoI,IAAIgC,EAAIrC,OAAQzL,KAAK4N,MAAMlH,GAAO+E,OAGxD,OAAOqC,MV0uDN7D,IAAK,mBACLhJ,MAAO,WUluDR,MAAOjB,SV8uDNiK,IAAK,SACLhJ,MAAO,SUtuDLmJ,EAAMC,GACT,GAAI6D,GAAc,GAAAvF,GAAA7H,QAAWsJ,EAAMC,EAGnC,OADArK,MAAKmO,OAAOD,EAAYtD,SAAS5K,KAAK6L,gBAC/B7L,QVivDNiK,IAAK,SACLhJ,MAAO,SUzuDLmJ,EAAMC,GACT,GAAI6D,GAAc,GAAAvF,GAAA7H,QAAWsJ,GAAQ,EAAGC,GAAO,GADjC9E,GAAA,EAAAC,GAAA,EAAAC,EAAA1D,MAAA,KAGd,OAAA2D,GAAAC,EAAgB3F,KAAK4N,MAArBlJ,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAA4B,IAAnBuI,GAAmBpI,EAAAzE,KACxB6M,GAAIK,OAAOD,IAJD,MAAAnJ,GAAAS,GAAA,EAAAC,EAAAV,EAAA,aAAAQ,GAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,KAAAC,IAMd,MAAOzF,SVywDNiK,IAAK,aACLhJ,MAAO,SUlwDDyJ,GACP,IAAKA,EAAS,KAAM,IAAI5E,OAAM,uCAC9B4E,GAASA,EAAM7E,cAAgBwB,MAAQ,GAAI4B,GAAcyB,GAASA,EAAMsD,kBAF1D,IAAA3H,IAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KAId,OAAAyE,GAAAC,EAAuBiE,EAAMkD,MAA7BlJ,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAoC,IAAzB+H,GAAyB5H,EAAAvF,MAC5BoN,GAAY,EADgBxH,GAAA,EAAAC,GAAA,EAAAC,EAAAhF,MAAA,KAGhC,OAAAiF,GAAAC,EAAsBjH,KAAK4N,MAA3BlJ,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAkC,IAAvByH,GAAuBtH,EAAA/F,KAC9BoN,IAAaC,EAAQ1B,WAAWwB,IAJJ,MAAArJ,GAAA+B,GAAA,EAAAC,EAAAhC,EAAA,aAAA8B,GAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,KAAAC,IAOhC,IAAKsH,EAAa,OAAO,GAXf,MAAAtJ,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,aAAAsB,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAcd,OAAO,KV0zDN0D,IAAK,eACLhJ,MAAO,SUnzDCyJ,GACT,IAAKA,EAAS,KAAM,IAAI5E,OAAM,yCAC9B4E,GAASA,EAAM7E,cAAgBwB,MAAQ,GAAI4B,GAAcyB,GAASA,EAAMsD,kBAFxD,IAAAxG,IAAA,EAAAC,GAAA,EAAAC,EAAA3F,MAAA,KAIhB,OAAA4F,GAAAC,EAAkB5H,KAAK4N,MAAvBlJ,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EAA8B,IAAnBsG,GAAmBnG,EAAA1G,KAC1B,IAAI6M,EAAIS,aAAa7D,EAAMkD,OAAU,OAAO,GALhC,MAAA7I,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,aAAAyC,GAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,KAAAC,IAOhB,OAAO,KVu1DNuC,IAAK,aACLhJ,MAAO,SUh1DDyJ,GACP,IAAKA,EAAS,KAAM,IAAI5E,OAAM,uCAC9B4E,GAASA,EAAM7E,cAAgBwB,MAAQ,GAAI4B,GAAcyB,GAASA,EAAMsD,kBAF1D,IAAAnG,IAAA,EAAAC,GAAA,EAAAC,EAAAhG,MAAA,KAId,OAAAiG,GAAAC,EAAkBjI,KAAK4N,MAAvBlJ,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAA8B,IAAnBiG,GAAmB9F,EAAA/G,KAC1B,IAAI6M,EAAIU,aAAa9D,EAAMkD,OAAU,OAAO,GALlC,MAAA7I,GAAA+C,GAAA,EAAAC,EAAAhD,EAAA,aAAA8C,GAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,WAAA8C,EAAA,KAAAC,IAOd,OAAO,KVo3DNkC,IAAK,eACLhJ,MAAO,SU72DC0L,GACT,IAAKA,EAAU,KAAM,IAAI7G,OAAM,0CAC/B,IAAI6G,EAAO9G,cAAgBwB,MACvB,KAAM,IAAIvB,OAAM,mEAHH,IAAA2I,IAAA,EAAAC,GAAA,EAAAC,EAAA5M,MAAA,KAMjB,OAAA6M,GAAAC,EAAoBlC,EAApBjI,OAAAC,cAAA8J,GAAAG,EAAAC,EAAAjK,QAAAC,MAAA4J,GAAA,EAA4B,IAAjB/D,GAAiBkE,EAAA3N,KACxB,IAAIjB,KAAK0N,WAAWhD,GAAU,OAAO,GAPxB,MAAA3F,GAAA2J,GAAA,EAAAC,EAAA5J,EAAA,aAAA0J,GAAAI,EAAA7J,QAAA6J,EAAA7J,SAAA,WAAA0J,EAAA,KAAAC,IASjB,OAAO,KVi5DN1E,IAAK,cACLhJ,MAAO,SU14DAyJ,GACR,IAAKA,EAAS,KAAM,IAAI5E,OAAM,wCAC9B4E,GAASA,EAAM7E,cAAgBwB,MAAQ,GAAI4B,GAAcyB,GAASA,EAAMsD,kBAFzD,IAAAc,IAAA,EAAAC,GAAA,EAAAC,EAAAjN,MAAA,KAIf,OAAAkN,GAAAC,EAAkBlP,KAAK4N,MAAvBlJ,OAAAC,cAAAmK,GAAAG,EAAAC,EAAAtK,QAAAC,MAAAiK,GAAA,EAA8B,IAAnBhB,GAAmBmB,EAAAhO,KAC1B,IAAI6M,EAAIqB,cAAczE,EAAMkD,OAAU,OAAO,GALlC,MAAA7I,GAAAgK,GAAA,EAAAC,EAAAjK,EAAA,aAAA+J,GAAAI,EAAAlK,QAAAkK,EAAAlK,SAAA,WAAA+J,EAAA,KAAAC,IAOf,OAAO,KV86DN/E,IAAK,gBACLhJ,MAAO,SUv6DE0L,GACV,IAAKA,EAAU,KAAM,IAAI7G,OAAM,2CAC/B,IAAI6G,EAAO9G,cAAgBwB,MACvB,KAAM,IAAIvB,OAAM,oEAHF,IAAAsJ,IAAA,EAAAC,GAAA,EAAAC,EAAAvN,MAAA,KAMlB,OAAAwN,GAAAC,EAAoB7C,EAApBjI,OAAAC,cAAAyK,GAAAG,EAAAC,EAAA5K,QAAAC,MAAAuK,GAAA,EAA4B,IAAjB1E,GAAiB6E,EAAAtO,MAAAwO,GAAA,EAAAC,GAAA,EAAAC,EAAA5N,MAAA,KACxB,OAAA6N,GAAAC,EAAkB7P,KAAK4N,MAAvBlJ,OAAAC,cAAA8K,GAAAG,EAAAC,EAAAjL,QAAAC,MAAA4K,GAAA,EAA8B,IAAnB3B,GAAmB8B,EAAA3O,KAC1B,IAAI6M,EAAIH,YAAYjD,GAAU,OAAO,GAFjB,MAAA3F,GAAA2K,GAAA,EAAAC,EAAA5K,EAAA,aAAA0K,GAAAI,EAAA7K,QAAA6K,EAAA7K,SAAA,WAAA0K,EAAA,KAAAC,MANV,MAAA5K,GAAAsK,GAAA,EAAAC,EAAAvK,EAAA,aAAAqK,GAAAI,EAAAxK,QAAAwK,EAAAxK,SAAA,WAAAqK,EAAA,KAAAC,IAWlB,OAAO,KV+9DNrF,IAAK,eACLhJ,MAAO,SUx9DCyJ,GACT,IAAKA,EAAS,KAAM,IAAI5E,OAAM,yCAC9B4E,GAASA,EAAM7E,cAAgBwB,MAAQ,GAAI4B,GAAcyB,GAASA,EAAMsD,kBAFxD,IAAA8B,IAAA,EAAAC,GAAA,EAAAC,EAAAjO,MAAA,KAIhB,OAAAkO,GAAAC,EAAgBlQ,KAAK4N,MAArBlJ,OAAAC,cAAAmL,GAAAG,EAAAC,EAAAtL,QAAAC,MAAAiL,GAAA,EAA4B,IAAnBhC,GAAmBmC,EAAAhP,MACpBkP,EAAWrC,EAAIsC,aAAa1F,EAAMkD,MAEtC,IAAIuC,EAAY,MAAOA,IAPX,MAAApL,GAAAgL,GAAA,EAAAC,EAAAjL,EAAA,aAAA+K,GAAAI,EAAAlL,QAAAkL,EAAAlL,SAAA,WAAA+K,EAAA,KAAAC,SV6/DZ/G,IAGXrJ,GAAQkB,QUp/DMmI,EVq/DdpJ,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAEAa,QAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IW1wEZf,EAAA,GAGA,IAAI2B,SAKAA,GAAU3B,EAHU,mBAAZmQ,UAA2BA,SAAWA,QAAQC,UAAYD,QAAQC,SAASC,UAChE,mBAAXjP,SAA0BA,QAAUA,OAAOkP,aAAelP,OAAOkP,YAAY3O,QAEnE,GACI,mBAAR4O,MAAuBA,KAAOA,IAAIC,SAAWD,IAAIC,QAAQC,KAErD,GAGA,IXgxErB/Q,EAAQkB,QW7wEMe,EX8wEdhC,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAYA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAVvFG,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GYzyEZ,IAAAC,GAAAhB,EAAA,GZ8yEKiB,EAAWR,EAAuBO,GY7yEvCK,EAAArB,EAAA,GAEI0Q,KACAC,GAAU,CAQd1P,GAAAL,QAAcgQ,QAAU,SAAUzI,GAE9B,KAAMA,GAAYA,EAASxC,aAAewC,EAAS9H,MAAQ8H,EAASjC,OAChE,KAAM,IAAIN,OAAM,8DAIhB+K,IAAWxI,IAGXuI,EAAU7K,QAAQsC,IAAa,GAEnCuI,EAAU5K,KAAKqC,IASnBlH,EAAAL,QAAc+P,QAAU,WACpB,MAAOA,IZwzEVjR,EAAQkB,QYrzEM,GAAAS,GAAAwC,aAAiB,WAC5B8M,GAAU,CAD8B,IAAAxM,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAExC,OAAAyC,GAAAC,EAAuBmM,EAAvBlM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkC,IAAvBgE,GAAuB7D,EAAAvD,KAAEoH,MAFI,MAAAtD,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAGxCqM,OZ80EH/Q,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAMA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,Gal4ExF,GAAAM,GAAAhB,EAAA,Ibg4EKiB,EAAWR,EAAuBO,Ea73EnCC,GAAAL,QAAciQ,QAEd7Q,EAAQ,IACDiB,EAAAL,QAAckQ,aAErB9Q,EAAQ,Kby4EN,SAASL,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAZvFG,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,Gct5EZ,IAAAC,GAAAhB,EAAA,Gd25EKiB,EAAWR,EAAuBO,Gc15EvC+P,EAAA/Q,EAAA,Id85EKgR,EAAYvQ,EAAuBsQ,Ecn5ExC,IATA9P,EAAAL,QAAciQ,SAAU,EACxB5P,EAAAL,QAAcqQ,YAAa,EAC3BhQ,EAAAL,QAAckQ,aAAc,EAC5B7P,EAAAL,QAAce,QAAQC,KAAO,WAC7BX,EAAAL,QAAce,QAAQD,QAAUG,OAChCZ,EAAAL,QAAce,QAAQI,YAAa,EAIb,mBAAXb,SAA0BA,OAAQ,IAAAgQ,IAEf,EAAAF,EAAApQ,SAAY,YAA9BuQ,EAFiCD,EAEjCC,aAGRlQ,GAAAL,QAAciQ,QAA4B,MAAjBM,EACzBlQ,EAAAL,QAAcqQ,YAAchQ,EAAAL,QAAciQ,QAC1C5P,EAAAL,QAAce,QAAQD,QAAUR,OAAOiP,QAAQC,SAASC,SAGpDpP,EAAAL,QAAcqQ,aAAY,WAC1B,GAAIG,YAEJA,GAASzP,QAAUV,EAAAL,QAAce,QACjCyP,EAASC,WAAaD,EAAS,QAAQE,QAAQF,EAASX,KAAKc,UAC7DH,EAASI,kBAAoBC,WAC7BvQ,OAAOoP,YAAcc,EAGrBjB,QAAQpK,KAAK,SAAU,WAEnB7E,OAAOoP,YAAcc,WAGJ,mBAAXhQ,SAA0BA,SACxCH,EAAAL,QAAckQ,aAAc,EAEF,MAAtB1P,OAAOkP,cAEPrP,EAAAL,QAAce,QAAUP,OAAOkP,YAAY3O,QAC3CV,EAAAL,QAAc8Q,SAAW,GAAIC,Md26EpCjS,GAAQkB,QAAUK,EAASL,QAC3BjB,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,OAAQD,SAEtB,YAEAmB,QAAOC,eAAepB,QAAS,cAC7BqB,OAAO,IAGTrB,QAAQkB,Qej+EMgR,KAAK,6Cfm+EnBjS,OAAOD,QAAUA,QAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAQA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GgBl/ExF,GAAAmR,GAAA7R,EAAA,IhB8+EK8R,EAAUrR,EAAuBoR,EgB7+EtC7R,GAAA,IAIA8R,EAAAlR,QAAU2H,UhBu/EJ,SAAS5I,EAAQD,EAASM,GAE/B,YAUA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GiBxgFxF,GAAAM,GAAAhB,EAAA,IjBkgFKiB,EAAWR,EAAuBO,GiBjgFvCoQ,EAAApR,EAAA,IjBqgFK+Q,EAAYtQ,EAAuB2Q,GAInCF,GiBxgFqB,EAAAH,EAAAnQ,SAAY,YAA9BuQ,EjBygFaD,EiBzgFbC,cjB+gFHY,EiB3gF2B9Q,EAAAL,QAAc+B,SAAtCuG,EjB4gFM6I,EiB5gFN7I,OAAQJ,EjB6gFGiJ,EiB7gFHjJ,WAGhBqI,GAAcpM,UAAUiN,aAAe,WAAY,GAAA7N,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAC/C,OAAAyC,GAAAC,EAAkB4M,EAAcc,gBAAhCzN,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiD,IAAxCqG,GAAwClG,EAAAvD,KAC7CyJ,GAAM0H,YAAYC,KAAK,gBAAiBrS,KAAKK,KAFF,MAAA0E,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,MAMnD8M,EAAcpM,UAAUqN,kBAAoB,WAAY,GAAAC,GAAAvS,IAE1B+B,UAAtB/B,KAAKwS,eAA4B,WACjCD,EAAKC,cAAeD,GAEpBA,EAAKrN,GAAG,SAAU,WAEdlF,KAAKyS,WAGTF,EAAKrN,GAAG,WAAY,WAChBlF,KAAKyS,WAGTF,EAAKrN,GAAG,WAAY,WAChBlF,KAAK0S,kBAGTH,EAAKrN,GAAG,UAAW,WAAY,GAAAK,IAAA,EAAAC,GAAA,EAAAC,EAAA1D,MAAA,KAC3B,OAAA2D,GAAAC,EAAkB3F,KAAKwS,aAAvB9N,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAAqC,IAA5BmF,GAA4BhF,EAAAzE,KAC7ByJ,KAAU1K,MACV0K,EAAMiI,WAHa,MAAA5N,GAAAS,GAAA,EAAAC,EAAAV,EAAA,aAAAQ,GAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,KAAAC,MAQ/B,IAAImN,GAAaL,EAAKM,WAEtBN,GAAKrN,GAAG,OAAQ,WACZ,GAAM4N,GAAY9S,KAAK6S,WAGvBD,GAAaE,IAGjBP,EAAKrN,GAAG,SAAU,WACd,GAAM4N,GAAY9S,KAAK6S,WAEnBC,GAAU3G,QAAUyG,EAAWzG,OAAS2G,EAAU1G,SAAWwG,EAAWxG,QACxEpM,KAAKyS,SAaTG,EAAaE,QAKzBzB,EAAcpM,UAAU8N,KAAO,SAAUC,GACrChT,KAAKsS,mBAGL,IAAM5H,GAAQ2G,EAAc4B,OAAOD,EAEnC,IAAcjR,SAAV2I,KAGA1K,KAAKwS,aAAazM,QAAQ2E,IAAU,GAAxC,CAGAA,EAAM4H,mBAZwC,IAAAjM,IAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KAe9C,OAAAyE,GAAAC,EAAqBiE,EAAM8H,aAA3B9N,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAyC,IAAhC6M,GAAgC1M,EAAAvF,KACrCjB,MAAKwS,aAAaxM,KAAKkN,GAEvBA,EAASV,aAAexS,KAAKwS,cAlBa,MAAAzN,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,aAAAsB,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,OAwBlD8K,EAAcpM,UAAUwN,OAAS,WAC7BzS,KAAKsS,oBAG4B,IAA7BtS,KAAKwS,aAAatO,SAGtBlE,KAAKwS,aAAa7L,OAAO3G,KAAKwS,aAAazM,QAAQ/F,MAAO,GAC1DA,KAAKwS,cAAgBxS,QAKzBqR,EAAcpM,UAAUkO,WAAa,WACjCnT,KAAKsS,mBADwC,IAAAzL,IAAA,EAAAC,GAAA,EAAAC,EAAAhF,MAAA,KAG7C,OAAAiF,GAAAC,EAAmBjH,KAAKwS,aAAxB9N,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAsC,IAA7BvF,GAA6B0F,EAAA/F,KAC9BK,KAAWtB,OACXsB,EAAO8R,gBAAe,GACtB9R,EAAO8R,gBAAe,KANe,MAAArO,GAAA+B,GAAA,EAAAC,EAAAhC,EAAA,aAAA8B,GAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,KAAAC,IAS7C/G,KAAKoT,gBAAe,GACpBpT,KAAKoT,gBAAe,IAGxB/B,EAAcpM,UAAUoO,WAAa,WAEjCrT,KAAKsS,oBAELtS,KAAK2S,SAJwC,IAAAnL,IAAA,EAAAC,GAAA,EAAAC,EAAA3F,MAAA,KAM7C,OAAA4F,GAAAC,EAAmB5H,KAAKwS,aAAxB9N,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EAAsC,IAA7BlG,GAA6BqG,EAAA1G,KAClCK,GAAOgS,cAAgBhS,EAAOuK,eAPW,MAAA9G,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,aAAAyC,GAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,KAAAC,MAWjD2J,EAAcpM,UAAUsO,WAAa,WACjC,GAAMC,GAASxT,KAAK6S,WAEpB,OAAO,IAAI7J,GAAYwK,EAAOC,EAAGD,EAAOE,EAAGF,EAAOC,EAAID,EAAOrH,MAAOqH,EAAOE,EAAIF,EAAOpH,SAG1FiF,EAAcpM,UAAU0O,QAAU,SAAU3I,EAAWC,GACnDjL,KAAKsS,mBAGL,IAAMsB,GAAa5T,KAAKuT,aAAaM,OAAO7T,KAAKsT,cAAc,GAAKtI,EACxBhL,KAAKsT,cAAc,GAAKrI,GAChEqC,EAAY,GAAIlE,GAAOmE,IAAKA,KAN6B1F,GAAA,EAAAC,GAAA,EAAAC,EAAAhG,MAAA,KAQ7D,OAAAiG,GAAAC,EAAkBoJ,EAAcc,gBAAhCzN,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAAiD,IAAxC6C,GAAwC1C,EAAA/G,KACzCyJ,GAAM8H,eAAiBxS,KAAKwS,cAC5BlF,EAAUwG,OAAOF,EAAWG,aAAarJ,EAAM6I,gBAVM,MAAAxO,GAAA+C,GAAA,EAAAC,EAAAhD,EAAA,aAAA8C,GAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,WAAA8C,EAAA,KAAAC,IAa7DiD,GAAasC,EAAUlD,MAAQ,EAC/Ba,GAAYqC,EAAUjD,KAAO,CAdgC,IAAAoE,IAAA,EAAAC,GAAA,EAAAC,EAAA5M,MAAA,KAgB7D,OAAA6M,GAAAC,EAAkB7O,KAAKwS,aAAvB9N,OAAAC,cAAA8J,GAAAG,EAAAC,EAAAjK,QAAAC,MAAA4J,GAAA,EAAqC,IAA5B/D,GAA4BkE,EAAA3N,MAC7B+S,EAAMtJ,EAAM4I,aAGJvR,UAARiS,IACAA,EAAMtJ,EAAM4I,cAAgB5I,EAAMmB,cAClCmI,EAAI,IAAMhJ,EACVgJ,EAAI,IAAM/I,GAGdP,EAAMuJ,YAAYD,EAAI,GAAKhJ,EAAWgJ,EAAI,GAAK/I,IA1BU,MAAAlG,GAAA2J,GAAA,EAAAC,EAAA5J,EAAA,aAAA0J,GAAAI,EAAA7J,QAAA6J,EAAA7J,SAAA,WAAA0J,EAAA,KAAAC,MA8BjE0C,EAAcpM,UAAUiP,UAAY,WAChClU,KAAKsS,mBAGL,IAAMsB,GAAa5T,KAAKuT,aAJoBzE,GAAA,EAAAC,GAAA,EAAAC,EAAAjN,MAAA,KAM5C,OAAAkN,GAAAC,EAAkBmC,EAAcc,gBAAhCzN,OAAAC,cAAAmK,GAAAG,EAAAC,EAAAtK,QAAAC,MAAAiK,GAAA,EAAiD,IAAxCpE,GAAwCuE,EAAAhO,KACzC2S,GAAWlG,WAAWhD,EAAM6I,eAC5BvT,KAAK+S,KAAKrI,EAAMrK,KARoB,MAAA0E,GAAAgK,GAAA,EAAAC,EAAAjK,EAAA,aAAA+J,GAAAI,EAAAlK,QAAAkK,EAAAlK,SAAA,WAAA+J,EAAA,KAAAC,IAAA,GAAAI,IAAA,EAAAC,GAAA,EAAAC,EAAAvN,MAAA,KAY5C,OAAAwN,GAAAC,EAAmBxP,KAAKwS,aAAxB9N,OAAAC,cAAAyK,GAAAG,EAAAC,EAAA5K,QAAAC,MAAAuK,GAAA,EAAsC,IAA7B9N,GAA6BiO,EAAAtO,YAC3BK,GAAOgS,eAb0B,MAAAvO,GAAAsK,GAAA,EAAAC,EAAAvK,EAAA,aAAAqK,GAAAI,EAAAxK,QAAAwK,EAAAxK,SAAA,WAAAqK,EAAA,KAAAC,MAiBhD+B,EAAcpM,UAAUkP,YAAc,SAAU/J,EAAMC,GAClDrK,KAAKsS,mBAEL,IAAM8B,GAASpU,KAAK6L,cACdb,EAAYZ,EAAOgK,EAAO,GAC1BnJ,EAAWZ,EAAM+J,EAAO,GALyB3E,GAAA,EAAAC,GAAA,EAAAC,EAAA5N,MAAA,KAOvD,OAAA6N,GAAAC,EAAkB7P,KAAKwS,aAAvB9N,OAAAC,cAAA8K,GAAAG,EAAAC,EAAAjL,QAAAC,MAAA4K,GAAA,EAAqC,IAA5B/E,GAA4BkF,EAAA3O,MAC3B+S,EAAMtJ,EAAMmB,aAElBnB,GAAMuJ,YAAYD,EAAI,GAAKhJ,EAAWgJ,EAAI,GAAK/I,IAVI,MAAAlG,GAAA2K,GAAA,EAAAC,EAAA5K,EAAA,aAAA0K,GAAAI,EAAA7K,QAAA6K,EAAA7K,SAAA,WAAA0K,EAAA,KAAAC,MAc3D0B,EAAcpM,UAAUyN,cAAgB,SAAUtI,EAAMC,GACpDrK,KAAKsS,mBADoD,IAAAxC,IAAA,EAAAC,GAAA,EAAAC,EAAAjO,MAAA,KAGzD,OAAAkO,GAAAC,EAAmBlQ,KAAKwS,aAAxB9N,OAAAC,cAAAmL,GAAAG,EAAAC,EAAAtL,QAAAC,MAAAiL,GAAA,EAAsC,IAA7BxO,GAA6B2O,EAAAhP,KAClCK,GAAO+S,YAJ8C,MAAAtP,GAAAgL,GAAA,EAAAC,EAAAjL,EAAA,aAAA+K,GAAAI,EAAAlL,QAAAkL,EAAAlL,SAAA,WAAA+K,EAAA,KAAAC,MAQ7DqB,EAAcpM,UAAUqP,UAAY,SAAUlK,EAAMC,GAChDrK,KAAKsS,mBADgD,IAAAiC,IAAA,EAAAC,GAAA,EAAAC,EAAA1S,MAAA,KAGrD,OAAA2S,GAAAC,EAAmB3U,KAAKwS,aAAxB9N,OAAAC,cAAA4P,GAAAG,EAAAC,EAAA/P,QAAAC,MAAA0P,GAAA,EAAsC,IAA7BjT,GAA6BoT,EAAAzT,KAClCK,GAAOsT,QAJ0C,MAAA7P,GAAAyP,GAAA,EAAAC,EAAA1P,EAAA,aAAAwP,GAAAI,EAAA3P,QAAA2P,EAAA3P,SAAA,WAAAwP,EAAA,KAAAC,MAQzDpD,EAAcpM,UAAU4P,UAAY,SAAUzK,EAAMC,GAChDrK,KAAKsS,mBADgD,IAAAwC,IAAA,EAAAC,GAAA,EAAAC,EAAAjT,MAAA,KAGrD,OAAAkT,GAAAC,EAAmBlV,KAAKwS,aAAxB9N,OAAAC,cAAAmQ,GAAAG,EAAAC,EAAAtQ,QAAAC,MAAAiQ,GAAA,EAAsC,IAA7BxT,GAA6B2T,EAAAhU,KAClCK,GAAO6T,QAJ0C,MAAApQ,GAAAgQ,GAAA,EAAAC,EAAAjQ,EAAA,aAAA+P,GAAAI,EAAAlQ,QAAAkQ,EAAAlQ,SAAA,WAAA+P,EAAA,KAAAC,OjBmzFnD,SAASnV,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GkB3hGxF,GAAAM,GAAAhB,EAAA,IlBihGKiB,EAAWR,EAAuBO,GkBhhGvC6Q,EAAA7R,EAAA,IlBohGK8R,EAAUrR,EAAuBoR,GkBnhGtCqD,EAAAlV,EAAA,IlBuhGKmV,EAAW1U,EAAuByU,GAIlCE,EkB1hGmBhU,OAAOkP,YAAY,YAAnC+E,ElB2hGWD,EkB3hGXC,WAERpU,GAAAL,QAAc0U,WAAc,WAQxB,QAASC,GAAanU,EAAQoU,GAC1B,MAAO,UAACC,EAAGC,GAEP,IAAItU,GAAUA,EAAOuU,MAAQD,EAAQE,MAArC,CAEA,GAAMC,GAAa5U,EAAAL,QAAckV,OAAOC,QAAQL,EAAQE,MAGpDC,GAAWF,MAAQ1U,EAAAL,QAAckV,OAAOE,QAAQL,KAEpDH,EAAStP,MAAM2P,EAAYH,EAAQxO,QAb3C,GAAI+O,MACAC,IAiBJ,QACI/D,KAAM,SAACzM,GAAuB,OAAAuB,GAAAlD,UAAAC,OAATkD,EAASC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,EAAA,GAAArD,UAAAqD;AAC1B,GAAM+O,GAASlV,EAAAL,QAAckV,OAAOE,QAC9BN,GACFvV,GAAI,EACJyV,MAAOO,EAAOR,IACdS,MAAO1Q,EACPwB,KAAMA,EAGV,IAAIA,EAAKlD,OAAS,GAAKkD,EAAK,YAALiO,GAAAvU,QAA2B,CAE9C,GAAMQ,GAAS8F,EAAKmP,OAGpB,IAAIjV,EAAOuU,MAAQQ,EAAOR,IAAO,MAEjCvU,GAAOkV,QAAQpE,YAAYC,KAAKzM,EAAWgQ,OACxC,IAAAvR,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KACH,OAAAyC,GAAAC,EAAqBtD,EAAAL,QAAckV,OAAOS,SAA1C/R,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoD,IAAzC/C,GAAyCkD,EAAAvD,KAC5CK,KAAW+U,GACX/U,EAAOkV,QAAQpE,YAAYC,KAAKzM,EAAWgQ,IAHhD,MAAA7Q,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,OAQXW,GAAI,SAACU,EAAWtE,EAAQoU,GACH3T,SAAb2T,IACAA,EAAWpU,EACXA,EAASS,OAGb,IAAM2U,GAAYjB,EAAanU,EAAQoU,EAEvC,IAAe3T,SAAXT,EAAsB,CAEtB,GAAIA,EAAOuU,MAAQ1U,EAAAL,QAAckV,OAAOE,QAAQL,IAAO,MAEvD,IAAMc,GAAeP,EAAuB9U,EAAOuU,KAAOO,EAAuB9U,EAAOuU,QAExFc,GAAY/Q,GAAa+Q,EAAY/Q,IAAc,GAAIiM,KACvD8E,EAAY/Q,GAAWgR,IAAIlB,EAAUgB,OAGrCP,GAAiBvQ,GAAauQ,EAAiBvQ,IAAc,GAAIiM,KACjEsE,EAAiBvQ,GAAWgR,IAAIlB,EAAUgB,EAE9CnB,GAAYrQ,GAAGU,EAAW8Q,IAE9BvQ,IAAK,SAACP,EAAWtE,EAAQoU,GAMrB,GALiB3T,SAAb2T,IACAA,EAAWpU,EACXA,EAASS,QAGEA,SAAXT,EAAsB,CACtB,GAAMqV,GAAeP,EAAuB9U,EAAOuU,KAAOO,EAAuB9U,EAAOuU,QAExFc,GAAY/Q,GAAa+Q,EAAY/Q,IAAc,GAAIiM,KAEvD0D,EAAYsB,eAAejR,EAAW+Q,EAAY/Q,GAAWkR,OAAOpB,QAEpES,GAAiBvQ,GAAauQ,EAAiBvQ,IAAc,GAAImR,KAEjExB,EAAYsB,eAAejR,EAAWuQ,EAAiBvQ,GAAWoR,IAAItB,SAMtF1D,EAAAlR,QAAU2H,UlBgkGJ,SAAS5I,EAAQD,EAASM,GAE/B,YAgBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASyI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASyN,GAA2BC,EAAM3W,GAAQ,IAAK2W,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAO5W,GAAyB,gBAATA,IAAqC,kBAATA,GAA8B2W,EAAP3W,EAElO,QAAS6W,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI9N,WAAU,iEAAoE8N,GAAeD,GAASpS,UAAYlE,OAAOwW,OAAOD,GAAcA,EAAWrS,WAAaY,aAAe5E,MAAOoW,EAAUvN,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAeuN,IAAYvW,OAAOyW,eAAiBzW,OAAOyW,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GmBnxFle,QAASI,GAAoBrX,GACzB,GAAIiB,GAASH,EAAAL,QAAc8Q,SAASoF,IAAI3W,EAExC,IAAIiB,EAAQ,MAAOA,EAGnB,IAAIqW,GAActG,EAAc4B,OAAO5S,EAEvC,OAAoB,QAAhBsX,EACO,GAAI3B,GAAO2B,GADtB,OnBuvFH5W,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIwI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrG,GAAI,EAAGA,EAAIqG,EAAM1F,OAAQX,IAAK,CAAE,GAAIsG,GAAaD,EAAMrG,EAAIsG,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjJ,OAAOC,eAAe2I,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYtE,UAAWiF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MmB1qGjiBrI,EAAAhB,EAAA,InB8qGKiB,EAAWR,EAAuBO,GmB7qGvCK,EAAArB,EAAA,GACAsB,EAAAtB,EAAA,GnB0rGKoV,EmBzrG2BhU,OAAOkP,YAAY,YAA3C+E,EnB0rGWD,EmB1rGXC,YAAaqC,EnB2rGPtC,EmB3rGOsC,OACfC,EAAMvW,OAAOkP,YAAY,OACzBa,EAAgBuG,EAAOvG,cAEvByG,EAAaF,EAAOG,mBACpBC,GACF7L,MAAO,IACPC,OAAQ,IACR6L,OAAO,EACPC,WAAW,EACXC,WAAW,EACXC,KAAM,cACNC,gBACIC,iBAAiB,EACjBC,QAASjX,OAAOkP,YAAYkB,oBAG9B8G,GACFpO,KAAM,IACNC,IAAK,KAEHrG,GACF,QACA,aAAc,cAAe,YAC7B,cACA,OAAQ,cACR,gBAAiB,QAAS,YAExBgS,EnBurGQ,SAAU9S,GmBtrGpB,QAAA8S,GAAYyC,GAwDR,QAASC,KACLC,EAAWzR,KAAK,QAIpB,QAAS0R,KACLD,EAAWzR,KAAK,YAIpB,QAAS2R,KACLvX,OAAOwX,oBAAoB,eAAgBC,GAC3C5X,EAAAL,QAAc8Q,SAASkF,OAAO6B,EAAW9C,KACzC8C,EAAWK,WAAY,EACvBL,EAAWzR,KAAK,SAChByR,EAAWnC,QAAUzU,OAIzB,QAASgX,KACL5X,EAAAL,QAAc8Q,SAASkF,OAAO6B,EAAW9C,KACzC8C,EAAWnC,QAAQK,eAAe,OAAQ6B,GAC1CC,EAAWnC,QAAQK,eAAe,QAASgC,GAC3CF,EAAWnC,QAAQK,eAAe,WAAY+B,GA/ElCvP,EAAArJ,KAAAgW,EAAA,IAAAzD,GAAA0E,EAAAjX,MAAAgW,EAAAyB,WAAA1W,OAAAkY,eAAAjD,IAAAzV,KAAAP,KAEVgE,GAENyU,GAASA,KACT,IAAMS,GAAsCnX,SAAvB0W,EAAOrG,WAE5B,IAAI8G,EAAa,CACb,IAAK,GAAMC,KAAQV,GACXA,EAAOW,eAAeD,IAA6BpX,SAApByW,EAAUW,KACzCV,EAAOD,EAAUW,IAASV,EAAOU,SAC1BV,GAAOU,GAGtB,KAAK,GAAMA,KAAQnB,GACXA,EAAcoB,eAAeD,KAC7BV,EAAOU,GAAQV,EAAOU,IAASnB,EAAcmB,GAGrD,IAAIE,GAAOZ,EAAOZ,UAEXY,GAAOZ,IAEdtF,EAAKiE,QAAU,GAAInF,GAAcoH,GACjClG,EAAKsD,IAAMtD,EAAKiE,QAAQnW,GACxBoY,EAAOa,MAAwB,MAAhBb,EAAOa,MAAgB/G,EAAKsD,IAAM4C,EAAOa,MAQnD,gBAAgB9W,KAAK6W,KACN,MAAZA,EAAK,GACLA,EAAOxB,EAAI0B,QAAQC,SAASC,KAAMJ,GAC3B,SAAS7W,KAAKgX,SAASC,MAC9BJ,EAAOG,SAASE,OAASL,EAClB,SAAS7W,KAAKgX,SAASC,QAC9BJ,EAAOzB,EAAO+B,UAAU,cAAgBN,IAIhD9G,EAAKiE,QAAQoD,QAAQP,GACrB9G,EAAKiE,QAAQqD,SAASpB,EAAOa,WAE7B/G,GAAKiE,QAAUiC,EACflG,EAAKsD,IAAMtD,EAAKiE,QAAQnW,EAE5Bc,GAAAL,QAAc8Q,SAASgF,IAAIrE,EAAKsD,IAAhCtD,GACAA,EAAKiE,QAAQlE,mBAIb,IAAMqG,IAtDU,OA2DhBpG,GAAKiE,QAAQtR,GAAG,OAAQwT,GAKxBnG,EAAKiE,QAAQtR,GAAG,WAAY0T,GAmB5BtX,OAAOwY,iBAAiB,eAAgBf,GAGpCxG,EAAKiE,UAAYsB,GACjBvF,EAAKiE,QAAQtR,GAAG,QAAS2T,GAG7BtG,EAAKyG,WAAY,EACjBzG,EAAKR,QAAS,EACVmH,GAAe3G,EAAKiE,QAAQtE,eA5FhBK,EnBgkHnB,MAzYA6E,GAAUpB,EAAQ9S,GAuGlBuG,EAAauM,IACT/L,IAAK,UACLhJ,MAAO,WmBhsGR,MAAwBc,UAAjB/B,KAAKwW,UAA0BxW,KAAKgZ,enBosG1C/O,IAAK,UACLhJ,MAAO,SmBlsGJoH,GACJ,GAAIrI,KAAK+Z,WAAc,KAAM,IAAIjU,OAAM,6CACvC,OAAI9F,MAAK6Q,UAAoBxI,EAAS9H,KAAKP,UAE3CA,MAAKiG,KAAK,QAASoC,MnBysGlB4B,IAAK,WACLhJ,MAAO,WmBtsGR,MAAOjB,MAAKgZ,anB0sGX/O,IAAK,cACLhJ,MAAO,WmBvsGR,GAAM+S,GAAMhU,KAAKwW,QAAQ3K,aAEzB,OAAO,IAAArK,GAAA0H,SAAa8K,EAAI,GAAIA,EAAI,OnB2sG/B/J,IAAK,WACLhJ,MAAO,WmBxsGR,GAAM+Y,GAAOha,KAAKwW,QAAQjK,SAE1B,OAAOyN,GAAK,MnB4sGX/P,IAAK,YACLhJ,MAAO,WmBzsGR,GAAM+Y,GAAOha,KAAKwW,QAAQjK,SAE1B,OAAOyN,GAAK,MnB6sGX/P,IAAK,UACLhJ,MAAO,WmB1sGR,GAAM+Y,GAAOha,KAAKwW,QAAQjK,SAE1B,OAAO,IAAA/K,GAAA0H,SAAa8Q,EAAK,GAAIA,EAAK,OnB8sGjC/P,IAAK,YACLhJ,MAAO,WmB3sGR,GAAMuS,GAASxT,KAAKwW,QAAQ3D,WAE5B,OAAO,IAAArR,GAAAwH,YAAgBwK,EAAOC,EAAGD,EAAOE,EAAGF,EAAOC,EAAID,EAAOrH,MAAOqH,EAAOE,EAAIF,EAAOpH,WnB+sGrFnC,IAAK,WACLhJ,MAAO,WmB5sGR,MAAOjB,MAAKwW,QAAQyD,cnBgtGnBhQ,IAAK,WACLhJ,MAAO,SmB9sGHiZ,GACL,IAAKA,EAAY,KAAM,IAAIpU,OAAM,gDACjC9F,MAAKwW,QAAQqD,SAASK,MnBmtGrBjQ,IAAK,WACLhJ,MAAO,WmBhtGR,OAAQjB,KAAKma,anBotGZlQ,IAAK,UACLhJ,MAAO,WmBjtGR,MAAOjB,MAAKwW,QAAQ4D,enBqtGnBnQ,IAAK,cACLhJ,MAAO,WmBltGR,MAAOjB,MAAKwW,QAAQ6D,iBnBstGnBpQ,IAAK,cACLhJ,MAAO,WmBntGR,MAAOjB,MAAKwW,QAAQ8D,iBnButGnBrQ,IAAK,aACLhJ,MAAO,WmBptGR,MAAOjB,MAAKma,YAAcna,KAAKqa,gBAAkBra,KAAKsa,iBnBwtGrDrQ,IAAK,QACLhJ,MAAO,SmBttGNoH,GACF,MAAIrI,MAAK+Z,WAAqB1R,GAAYA,KAE1CrI,KAAKwW,QAAQ+D,aACTlS,GAAYA,SnB6tGf4B,IAAK,WACLhJ,MAAO,SmB3tGHoH,GACL,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDAEpC9F,MAAKwW,QAAQ9D,gBACTrK,GAAYA,OnBkuGf4B,IAAK,WACLhJ,MAAO,SmBhuGHoH,GACL,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDAEpC9F,MAAKwW,QAAQgE,WACTnS,GAAYA,OnBuuGf4B,IAAK,OACLhJ,MAAO,SmBruGPoH,GACD,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,4CAEpC9F,MAAKwW,QAAQ3B,YACTxM,GAAYA,OnB4uGf4B,IAAK,OACLhJ,MAAO,SmB1uGPoH,GACD,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,4CAEpC9F,MAAKwW,QAAQlC,YACTjM,GAAYA,OnBivGf4B,IAAK,UACLhJ,MAAO,SmB/uGJoH,GACJ,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,+CAEpC9F,MAAKwW,QAAQ7D,UACTtK,GAAYA,OnBsvGf4B,IAAK,eACLhJ,MAAO,SmBpvGCoH,GACT,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,oDAEpC9F,MAAKwW,QAAQpD,gBAAe,GAC5BpT,KAAKwW,QAAQpD,gBAAe,GACxB/K,GAAYA,OnB2vGf4B,IAAK,QACLhJ,MAAO,SmBzvGNoH,GACF,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,6CAEpC9F,MAAKwW,QAAQiE,QACTpS,GAAYA,OnBgwGf4B,IAAK,WACLhJ,MAAO,SmB9vGHkL,EAAOC,EAAQ/D,GACpB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDACpC,IAAMkU,GAAO,GAAAxY,GAAA0H,SAAaiD,EAAOC,EAEjCpM,MAAKwW,QAAQkE,QAAQV,EAAK5P,KAAM4P,EAAK3P,KACjChC,GAAYA,OnBqwGf4B,IAAK,SACLhJ,MAAO,SmBnwGLmJ,EAAMC,EAAKhC,GACd,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,8CACpC,IAAMkO,GAAM,GAAAxS,GAAA0H,SAAakB,EAAMC,EAE/BrK,MAAKwW,QAAQrC,YAAYH,EAAI5J,KAAM4J,EAAI3J,KACnChC,GAAYA,OnB0wGf4B,IAAK,SACLhJ,MAAO,SmBxwGL+J,EAAWC,EAAU5C,GACxB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,8CACpC,IAAM0N,GAASxT,KAAK6S,YACd8H,EAAW,GAAAnZ,GAAA0H,SAAa8B,EAAWC,EAEzCjL,MAAKwW,QAAQrC,YAAYX,EAAOpJ,KAAOuQ,EAASvQ,KAAMoJ,EAAOnJ,IAAMsQ,EAAStQ,KACxEhC,GAAYA,OnB+wGf4B,IAAK,UACLhJ,MAAO,SmB7wGJkL,EAAOC,EAAQ/D,GACnB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,+CACpC,IAAMkU,GAAO,GAAAxY,GAAA2H,KAASgD,EAAOC,EAE7BpM,MAAKwW,QAAQkE,QAAQV,EAAK5P,KAAM4P,EAAK3P,KACjChC,GAAYA,OnBoxGf4B,IAAK,YACLhJ,MAAO,SmBlxGFmJ,EAAMC,EAAKmB,EAAOC,EAAQpD,GAChC,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDACpC,IAAM0N,GAAS,GAAAhS,GAAAwH,YAAgBoB,EAAMC,EAAKmB,EAAOC,EAEjDzL,MAAKwW,QAAQoE,WACTnH,EAAGD,EAAOpJ,KACVsJ,EAAGF,EAAOnJ,IACV8B,MAAOqH,EAAO9H,WACdU,OAAQoH,EAAO7H,cAEftD,GAAYA,OnByxGf4B,IAAK,OACLhJ,MAAO,SmBvxGPyJ,GACD1K,KAAKwW,QAAQzD,KAAKrI,EAAM8L,QAAQnW,OnB0xG/B4J,IAAK,SACLhJ,MAAO,WmBvxGRjB,KAAKwW,QAAQ/D,cnB2xGZxI,IAAK,SACLhJ,MAAO,WmBxxGR,MAAOoG,OAAMwT,KAAK1Z,EAAAL,QAAc8Q,SAASkJ,anB4xGxC7Q,IAAK,UACLhJ,MAAO,SmB1xGGZ,GACX,MAAOc,GAAAL,QAAc8Q,SAASoF,IAAI3W,MnB6xGjC4J,IAAK,aACLhJ,MAAO,WmB1xGR,MAAO+U,GAAOE,YnB+xGVF,GACTzU,EAAOI,amB3xGVqU,GAAOE,QAAU,GAAIF,GAAO8B,GAE5B,WA4CI,QAASiD,KACDC,IACA1E,MAAM2E,iBACND,GAAW,EACXhF,EAAOE,QAAQM,QAAQtC,aA9C/B,GAAIgH,GAAK,EACLC,EAAK,EACLH,GAAW,CAEf1Z,QAAOwY,iBAAiB,QAAS,WAC7B9D,EAAOE,QAAQM,QAAQrD,eAG3B7R,OAAOwY,iBAAiB,YAAa,SAAqBxD,GAClDA,EAAM3M,OAAOyR,WAAa9E,EAAM3M,OAAOyR,UAAUC,SAAS,iBAC1D/E,EAAM2E,iBACND,GAAW,EACXE,EAAK5E,EAAMgF,QACXH,EAAK7E,EAAMiF,QACXvF,EAAOE,QAAQM,QAAQnD,gBAI/B/R,OAAOwY,iBAAiB,aAAc,SAAUxD,GACxCA,EAAM3M,OAAOyR,WAAa9E,EAAM3M,OAAOyR,UAAUC,SAAS,iBAC1D/E,EAAM2E,iBACND,GAAW,EACXE,EAAK5E,EAAMkF,QAAQ,GAAGF,QACtBH,EAAK7E,EAAMkF,QAAQ,GAAGD,QACtBvF,EAAOE,QAAQM,QAAQnD,gBAI/B/R,OAAOwY,iBAAiB,YAAa,SAAUxD,GACvC0E,IACA1E,EAAM2E,iBACNjF,EAAOE,QAAQM,QAAQ7C,QAAQ2C,EAAMgF,QAAUJ,EAAI5E,EAAMiF,QAAUJ,MAI3E7Z,OAAOwY,iBAAiB,YAAa,SAAUxD,GACvC0E,IACA1E,EAAM2E,iBACNjF,EAAOE,QAAQM,QAAQ7C,QAAQ2C,EAAMkF,QAAQ,GAAGF,QAAUJ,EAAI5E,EAAMkF,QAAQ,GAAGD,QAAUJ,MAWjG7Z,OAAOwY,iBAAiB,UAAWiB,GACnCzZ,OAAOwY,iBAAiB,WAAYiB,EAGpC,IAAIU,GAAO7D,EAAO6D,KACdC,EAAW9D,EAAO8D,SAClBC,EAAqB,KACrBC,EAAO,GAAIH,EAEfG,GAAKC,OAAO,GAAIH,IACZI,MAAO,SACPC,YAAa,cACbC,MAAO,WACHhG,EAAOE,QAAQM,QAAQyF,aAG/BL,EAAKC,OAAO,GAAIH,IACZI,MAAO,kCACPE,MAAO,WAAY,GAAA3X,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAEf,OAAAyC,GAAAC,EAAqBtD,EAAAL,QAAc8Q,SAASkJ,SAA5CpW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsD,IAA3C/C,GAA2CkD,EAAAvD,KAClDK,GAAOiZ,SAHI,MAAAxV,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAMfqT,EAAOsE,IAAIC,WACXvE,EAAOsE,IAAIE,KAAK,OAGxBR,EAAKC,OAAO,GAAIH,IAAWW,KAAM,eACjCT,EAAKC,OAAO,GAAIH,IACZI,MAAO,kBACPC,YAAa,oBACbC,MAAO,WACHhG,EAAOE,QAAQM,QAAQ8F,eAAeX,EAAmBlI,EAAGkI,EAAmBjI,OAIvFpS,OAAOwY,iBAAiB,cAAe,SAAUxD,GAC7CA,EAAM2E,iBACNU,GAAuBlI,EAAG6C,EAAM7C,EAAGC,EAAG4C,EAAM5C,GAC5CkI,EAAKW,MAAMvG,EAAOE,QAAQM,WAC3B,KnBu0GN,IAAIjR,IAA6B,EAC7BC,GAAqB,EACrBC,EAAkB1D,MAEtB,KmB1zGD,OAAA2D,GAAAC,EAAkB0L,EAAcc,gBAAhCzN,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAAiD,IAAxCmF,GAAwChF,EAAAzE,KAC7CyW,GAAoBhN,EAAMrK,KnB+zG3B,MAAO0E,GACLS,GAAqB,EACrBC,EAAkBV,EACpB,QACE,KACSQ,GAA8BI,EAAWX,QAC1CW,EAAWX,SAEjB,QACE,GAAIQ,EACA,KAAMC,ImBt0GnB8P,EAAYrQ,GAAG,gBAAiB,SAAUoR,EAAOtD,GAC7C7R,EAAAL,QAAcoG,KAAK,gBAAiBwQ,EAAoB1E,MAG5D7R,EAAAL,QAAckV,OAASA,EnB40GtBpW,EAAQkB,QmB30GMkV,EnB40GdnW,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAUA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GoBzxHxF,GAAAM,GAAAhB,EAAA,IpBmxHKiB,EAAWR,EAAuBO,GoBlxHvCkU,EAAAlV,EAAA,IpBsxHKmV,EAAW1U,EAAuByU,GoBpxHjCoH,EAAW,UAEjBrb,GAAAL,QAAc0U,WAAc,WAIxB,QAASC,GAAaC,GAClB,MAAO,UAACE,GACJ,GAAMtU,GAAS+T,EAAAvU,QAAOmV,QAAQL,EAAQE,MAGlCxU,GAAOuU,MAAQR,EAAAvU,QAAOoV,QAAQL,KAElCH,EAAStP,MAAM9E,EAAQsU,EAAQxO,OAVvC,GAAI+O,MACAC,IAcJ,QACI/D,KAAM,SAACzM,GAAuB,OAAAuB,GAAAlD,UAAAC,OAATkD,EAASC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,EAAA,GAAArD,UAAAqD,EAE1B,IAAM+O,GAAShB,EAAAvU,QAAOoV,QAChBN,GACFvV,GAAI,EACJyV,MAAOO,EAAOR,IACdS,MAAO1Q,EACPwB,KAAMA,EAGV,IAAIA,EAAKlD,OAAS,GAAKkD,EAAK,YAALiO,GAAAvU,QAA2B,CAE9C,GAAMQ,GAAS8F,EAAKmP,OAGpB,IAAIjV,EAAOuU,MAAQQ,EAAOR,IAAO,MAEjCpF,KAAIC,QAAQ+L,oBAAoBpK,KAAKgD,EAAAvU,QAAOoV,QAAQM,QAAQgG,GAAWlb,EAAOuU,IACtCjQ,EAAWgQ,OAGnDnF,KAAIC,QAAQ+L,oBAAoBpK,KAAKgD,EAAAvU,QAAOoV,QAAQM,QAAQgG,GAAW5W,EAAWgQ,IAG1F1Q,GAAI,SAACU,EAAWtE,EAAQoU,GACH3T,SAAb2T,IACAA,EAAWpU,EACXA,EAASS,OAGb,IAAM2U,GAAYjB,EAAaC,EAE/B,IAAe3T,SAAXT,EAAsB,CAEtB,GAAIA,EAAOuU,MAAQR,EAAAvU,QAAOoV,QAAQL,IAAO,MAEzC,IAAMc,GAAeP,EAAuB9U,EAAOuU,KAAOO,EAAuB9U,EAAOuU,QAExFc,GAAY/Q,GAAa+Q,EAAY/Q,IAAc,GAAIiM,KACvD8E,EAAY/Q,GAAWgR,IAAIlB,EAAUgB,GACrCjG,IAAIC,QAAQ+L,oBAAoBC,UAAUrH,EAAAvU,QAAOoV,QAAQM,QAAQgG,GAAWlb,EAAOuU,IACvCjQ,EAAW8Q,OAGvDP,GAAiBvQ,GAAauQ,EAAiBvQ,IAAc,GAAIiM,KACjEsE,EAAiBvQ,GAAWgR,IAAIlB,EAAUgB,GAC1CjG,IAAIC,QAAQ+L,oBAAoBC,UAAUrH,EAAAvU,QAAOoV,QAAQM,QAAQgG,GAAW5W,EAAW8Q,IAG/FvQ,IAAK,SAACP,EAAWtE,EAAQoU,GAMrB,GALiB3T,SAAb2T,IACAA,EAAWpU,EACXA,EAASS,QAGEA,SAAXT,EAAsB,CACtB,GAAMqV,GAAeP,EAAuB9U,EAAOuU,KAAOO,EAAuB9U,EAAOuU,QAExFc,GAAY/Q,GAAa+Q,EAAY/Q,IAAc,GAAIiM,KAEvDpB,IAAIC,QAAQ+L,oBAAoBE,YAAYtH,EAAAvU,QAAOoV,QAAQM,QAAQgG,GAAWlb,EAAOkV,QAAQX,IAC7DjQ,EAAW+Q,EAAY/Q,GAAWkR,OAAOpB,QAEzES,GAAiBvQ,GAAauQ,EAAiBvQ,IAAc,GAAImR,KAEjEtG,IAAIC,QAAQ+L,oBAAoBE,YAAYtH,EAAAvU,QAAOoV,QAAQM,QAAQgG,GAAW5W,EAClCuQ,EAAiBvQ,GAAWkR,OAAOpB,UpBuyHzF,SAAS7V,EAAQD,EAASM,GAE/B,YAgBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAdvFG,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GqBp4HZ,IAAAC,GAAAhB,EAAA,GrBy4HKiB,EAAWR,EAAuBO,GqBx4HvC6Q,EAAA7R,EAAA,IrB44HK8R,EAAUrR,EAAuBoR,GqB34HtCxQ,EAAArB,EAAA,EAEAiB,GAAAL,QAAce,QAAQC,KAAO,UAC7BX,EAAAL,QAAce,QAAQD,QAAUG,OAChCZ,EAAAL,QAAce,QAAQK,WAAY,CAElC,IAAI0a,GAAa5K,EAAAlR,QAAUyH,IAAI,SAAU3G,GACrCT,EAAAL,QAAce,QAAQD,QAAUA,GAGpC6O,KAAIC,QAAQC,KAAKqB,EAAAlR,QAAUyH,IAAI,WAC3BkI,IAAIC,QAAQmM,OAAOC,WAAWF,EAE9B,IAAIV,GAAMzL,IAAIC,QAAQqM,YAAYC,aAC9BC,EAAaf,EAAIgB,YAAYC,aAE7BF,KAAe3b,SACfH,EAAAL,QAAce,QAAQQ,QAAS,EAC/BlB,EAAAL,QAAcsc,aAAe,GAAA7b,GAAAI,aAAiBZ,OAAOsc,KAAKlc,EAAAL,QAAcqD,kBACxEhD,EAAAL,QAAc8Q,SAAW,GAAIC,MAIjC1Q,EAAAL,QAAcsc,aAAajV,QAA3BhH,EAAAL,YrBq5HHlB,EAAQkB,QAAUK,EAASL,QAC3BjB,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAoBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASyI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASyN,GAA2BC,EAAM3W,GAAQ,IAAK2W,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAO5W,GAAyB,gBAATA,IAAqC,kBAATA,GAA8B2W,EAAP3W,EAElO,QAAS6W,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI9N,WAAU,iEAAoE8N,GAAeD,GAASpS,UAAYlE,OAAOwW,OAAOD,GAAcA,EAAWrS,WAAaY,aAAe5E,MAAOoW,EAAUvN,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAeuN,IAAYvW,OAAOyW,eAAiBzW,OAAOyW,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GsBl7Hle,QAASgG,KAIL,QAASC,KACD5E,EAAWnC,QAAQ2G,cAAc9b,eACjCsX,EAAWnC,QAAQ2G,cAAc9b,cAAcuQ,SAAWzQ,EAAAL,QAAc8Q,SACxE+G,EAAWnC,QAAQ2G,cAAc9b,cAAc+b,aAAejc,EAAAL,QAAcsc,cAE5EI,WAAWD,EAAY,GAa/B,QAASE,GAAenH,GACpBA,EAAM9K,MAAQ8K,EAAMlM,KAAOkM,EAAMnK,MACjCmK,EAAM7K,OAAS6K,EAAMjM,IAAMiM,EAAMlK,OACjCuM,EAAW+E,QAAQ9G,IAAI,GAAApV,GAAAwH,YAAgBsN,IAEd,IAArBA,EAAMqH,YACNhF,EAAWlG,SAEU,IAArB6D,EAAMqH,YACNhF,EAAWzR,KAAK,QAMxB,QAAS0W,KAGLjF,EAAWK,WAAY,EACvB7X,EAAAL,QAAc8Q,SAASkF,OAAO6B,EAAW9C,KAGzC8C,EAAWlG,QAGX,IAAMoL,GAASlF,EAAWmF,YAVXzZ,GAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAYf,OAAAyC,GAAAC,EAAoBkU,EAAWoF,cAA/BrZ,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8C,IAAnC2Z,GAAmCxZ,EAAAvD,KAG1C+c,GAAMC,UAAUJ,IAfL,MAAA9Y,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAiBfoU,EAAWsF,UAAUlc,QAErB4W,EAAWzR,KAAK,SAChB/F,EAAAL,QAAcsc,aAAalW,KAAK,eAAgByR,GAChDA,EAAWnC,QAAUzU,OAKzB,QAASmc,KACLvF,EAAWzR,KAAK,YA/DpB,GAAIyR,GAAa3Y,IAWjBud,KAEAvd,KAAKwW,QAAQ3D,UAAU,SAAUW,GAC7BA,EAAOhI,MAAQgI,EAAOpJ,KAAOoJ,EAAOrH,MACpCqH,EAAO/H,OAAS+H,EAAOnJ,IAAMmJ,EAAOpH,OACpCuM,EAAW+E,QAAQ9G,IAAI,GAAApV,GAAAwH,YAAgBwK,MAiB3CxT,KAAKwW,QAAQsD,iBAAiB,kBAAmB2D,GACjDzd,KAAKwW,QAAQsD,iBAAiB,iBAAkB2D,GA0BhDzd,KAAKwW,QAAQsD,iBAAiB,SAAU8D,GAKxC5d,KAAKwW,QAAQsD,iBAAiB,YAAaoE,GAG3Cle,KAAKme,SAAWne,KAAKwW,QAAQ2G,cAAciB,SAASC,cAAc,SAClEre,KAAKme,SAASG,UAAYte,KAAKue,OAC/Bve,KAAKwW,QAAQ2G,cAAciB,SAASI,KAAKC,YAAYze,KAAKme,UAE1Dne,KAAK+R,QAAS,EACd/R,KAAKkH,KAAK,SACV/F,EAAAL,QAAcsc,aAAalW,KAAK,gBAAiBlH,MAiYrD,QAAS0e,KA0CL,QAAS3D,KACDC,IACA1E,MAAM2E,iBACND,GAAW,EACXhF,EAAOE,QAAQhC,aA7CvB8B,EAAOE,QAAU/U,EAAAL,QAAc8Q,SAASoF,IAAIc,EAAWhW,OAAS,GAAIkU,GAAO8B,EAG3E,IAAIoD,GAAK,EACLC,EAAK,EACLH,GAAW,CAEf1Z,QAAOwY,iBAAiB,YAAa,SAAqBxD,GAClDA,EAAM3M,OAAOyR,WAAa9E,EAAM3M,OAAOyR,UAAUC,SAAS,iBAC1D/E,EAAM2E,iBACND,GAAW,EACXE,EAAK5E,EAAMgF,QACXH,EAAK7E,EAAMiF,QACXvF,EAAOE,QAAQ7C,gBAIvB/R,OAAOwY,iBAAiB,aAAc,SAAUxD,GACxCA,EAAM3M,OAAOyR,WAAa9E,EAAM3M,OAAOyR,UAAUC,SAAS,iBAC1D/E,EAAM2E,iBACND,GAAW,EACXE,EAAK5E,EAAMkF,QAAQ,GAAGF,QACtBH,EAAK7E,EAAMkF,QAAQ,GAAGD,QACtBvF,EAAOE,QAAQ7C,gBAIvB/R,OAAOwY,iBAAiB,YAAa,SAAUxD,GACvC0E,IACA1E,EAAM2E,iBACNjF,EAAOE,QAAQvC,QAAQ2C,EAAMgF,QAAUJ,EAAI5E,EAAMiF,QAAUJ,MAInE7Z,OAAOwY,iBAAiB,YAAa,SAAUxD,GACvC0E,IACA1E,EAAM2E,iBACNjF,EAAOE,QAAQvC,QAAQ2C,EAAMkF,QAAQ,GAAGF,QAAUJ,EAAI5E,EAAMkF,QAAQ,GAAGD,QAAUJ,MAWzF7Z,OAAOwY,iBAAiB,UAAWiB,GACnCzZ,OAAOwY,iBAAiB,WAAYiB,GtB45GvCha,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIwI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrG,GAAI,EAAGA,EAAIqG,EAAM1F,OAAQX,IAAK,CAAE,GAAIsG,GAAaD,EAAMrG,EAAIsG,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjJ,OAAOC,eAAe2I,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYtE,UAAWiF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MsB37HjiBrI,EAAAhB,EAAA,ItB+7HKiB,EAAWR,EAAuBO,GsB97HvC6Q,EAAA7R,EAAA,ItBk8HK8R,EAAUrR,EAAuBoR,GsBj8HtCxQ,EAAArB,EAAA,GACAsB,EAAAtB,EAAA,GAEM8X,GACF2G,aAAc,IACdC,cAAe,IACf3G,OAAO,EACPC,WAAW,EACX2G,iBAAiB,EACjBC,UAAU,EACV1G,KAAMoB,SAASC,KAAO,eAEpBjB,GACFc,MAAO,OACPlP,KAAM,cACNC,IAAK,aACL8B,MAAO,eACPC,OAAQ,iBAENpI,GACF,QACA,aAAc,cAAe,YAC7B,cACA,OAAQ,cACR,gBAAiB,QAAS,YAC1B8T,SAgFE9B,EtB89HQ,SAAU9S,GsB79HpB,QAAA8S,GAAYyC,GAAQpP,EAAArJ,KAAAgW,EAAA,IAAAzD,GAAA0E,EAAAjX,MAAAgW,EAAAyB,WAAA1W,OAAAkY,eAAAjD,IAAAzV,KAAAP,KAEVgE,GAENyU,GAASA,KACT,IAAMS,GAAmCnX,SAApB0W,EAAOsG,QAe5B,IAZAxM,EAAKmL,QAAU,GAAAlc,GAAAwH,YACfuJ,EAAKR,QAAS,EAEdQ,EAAKyG,WAAY,EACjBzG,EAAKyM,WAAY,EACjBzM,EAAK0M,cAAe,EACpB1M,EAAK2M,cAAe,EACpB3M,EAAKC,cAAeD,GACpBA,EAAK4M,aACL5M,EAAK6M,QAAUrd,OACfwQ,EAAKgM,OAASxc,OAEVmX,EAAa,CACb,IAAK,GAAMC,KAAQV,GACXA,EAAOW,eAAeD,IAA6BpX,SAApByW,EAAUW,KACzCV,EAAOD,EAAUW,IAASV,EAAOU,SAC1BV,GAAOU,GAGtB,KAAK,GAAMA,KAAQnB,GACXA,EAAcoB,eAAeD,KAC7BV,EAAOU,GAAQV,EAAOU,IAASnB,EAAcmB,GAGrD5G,GAAKsD,KAAM,EAAAtU,EAAAuB,uBACXyP,EAAKgM,OAAwB,MAAf9F,EAAO3W,KAAeyQ,EAAKsD,IAAM4C,EAAO3W,KACtD2W,EAAO3W,KAAOyQ,EAAKsD,IAEf4C,EAAOoF,SACPpF,EAAOoF,OAAOsB,UAAUnZ,KAAxBuM,GACAA,EAAK6M,QAAU3G,EAAOoF,aAEfpF,GAAOoF,QAGlB1c,EAAAL,QAAc8Q,SAASgF,IAAIrE,EAAKsD,IAAhCtD,GACAA,EAAKiE,QAAU,GAAI/F,KAAIC,QAAQsF,OAAOyC,EAAQ6E,EAAU+B,KAAV9M,GAAsB,SAAUxN,GAC1Eua,QAAQC,MAAMxa,EAAK0T,SAGvBlG,GAAKsD,IAAM4C,EAAO5C,KAAO4C,EAAO3W,KAChCyQ,EAAKgM,OAAShM,EAAKsD,IACnBtD,EAAKiE,QAAUiC,EACftX,EAAAL,QAAc8Q,SAASgF,IAAIrE,EAAKsD,IAAhCtD,GACA+K,EAAU/c,KAAVgS,EApDY,OAAAA,GtBsuJnB,MAxwBA6E,GAAUpB,EAAQ9S,GAgElBuG,EAAauM,IACT/L,IAAK,UACLhJ,MAAO,WsBr+HR,MAAOjB,MAAK+R,UtBy+HX9H,IAAK,UACLhJ,MAAO,SsBv+HJoH,GACJ,GAAIrI,KAAK+Z,WAAc,KAAM,IAAIjU,OAAM,6CACvC,OAAI9F,MAAK6Q,UAAoBxI,EAAS9H,KAAKP,UAE3CA,MAAKiG,KAAK,QAASoC,MtB8+HlB4B,IAAK,WACLhJ,MAAO,WsB3+HR,MAAOjB,MAAKgZ,atB++HX/O,IAAK,cACLhJ,MAAO,WsB5+HR,MAAOjB,MAAK0d,QAAQ7R,iBtBg/HnB5B,IAAK,WACLhJ,MAAO,WsB7+HR,MAAOjB,MAAK0d,QAAQhS,ctBi/HnBzB,IAAK,YACLhJ,MAAO,WsB9+HR,MAAOjB,MAAK0d,QAAQ/R,etBk/HnB1B,IAAK,UACLhJ,MAAO,WsB/+HR,MAAOjB,MAAK0d,QAAQnR,atBm/HnBtC,IAAK,YACLhJ,MAAO,WsBh/HR,MAAOjB,MAAK0d,QAAQzP,WtBo/HnBhE,IAAK,YACLhJ,MAAO,WsBj/HR,MAAOjB,MAAKof,WtBq/HXnV,IAAK,YACLhJ,MAAO,SsBn/HF4c,GAGN,GAAIA,IAAW7d,KAAKof,QAApB,CAEA,GAAIpf,KAAKof,QAAS,CACd,GAAM1Y,GAAQ1G,KAAKof,QAAQD,UAAUpZ,QAAQ/F,KAEzC0G,IAAS,GAAK1G,KAAKof,QAAQD,UAAUxY,OAAOD,EAAO,GAIvDmX,IACA7d,KAAKof,QAAUvB,EACf7d,KAAKof,QAAQD,UAAUnZ,KAAKhG,WtB4/H/BiK,IAAK,cACLhJ,MAAO,WsBv/HR,MAAOjB,MAAKmf,UAAUK,WtB2/HrBvV,IAAK,WACLhJ,MAAO,SsBz/HH+c,GACLA,EAAMC,UAAUje,StB4/HfiK,IAAK,WACLhJ,MAAO,WsBz/HR,MAAOjB,MAAKue,UtB6/HXtU,IAAK,WACLhJ,MAAO,SsB3/HHiZ,GACL,IAAKA,EAAY,KAAM,IAAIpU,OAAM,gDACjC9F,MAAKme,SAASG,UAAYte,KAAKue,OAASrE,KtBggIvCjQ,IAAK,WACLhJ,MAAO,WsB7/HR,MAAOjB,MAAKgf,atBigIX/U,IAAK,UACLhJ,MAAO,WsB9/HR,OAAQjB,KAAKgf,atBkgIZ/U,IAAK,cACLhJ,MAAO,WsB//HR,MAAOjB,MAAKif,gBtBmgIXhV,IAAK,cACLhJ,MAAO,WsBhgIR,MAAOjB,MAAKkf,gBtBogIXjV,IAAK,aACLhJ,MAAO,WsBjgIR,MAAOjB,MAAKma,YAAcna,KAAKqa,gBAAkBra,KAAKsa,iBtBqgIrDrQ,IAAK,QACLhJ,MAAO,SsBngINoH,GACF,MAAIrI,MAAK+Z,WAAqB1R,GAAYA,QAC1CrI,MAAKwW,QAAQ+D,MAAMlS,MtBwgIlB4B,IAAK,WACLhJ,MAAO,SsBtgIHoH,GACL,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDAEpCuC,GAAW,GAAA9G,GAAAwC,aAAiBsE,EAHb,IAAA9C,IAAA,EAAAC,GAAA,EAAAC,EAAA1D,MAAA,KAIf,OAAA2D,GAAAC,EAAmB3F,KAAKwS,aAAxB9N,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAAsC,IAA7BjE,GAA6BoE,EAAAzE,KAClCK,GAAO2d,cAAe,EACtB3d,EAAOkV,QAAQnC,SAAShM,EAASE,QANtB,MAAAxD,GAAAS,GAAA,EAAAC,EAAAV,EAAA,aAAAQ,GAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,KAAAC,QtBuiIdwE,IAAK,WACLhJ,MAAO,SsB9hIHoH,GACL,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDAEpC9F,MAAKkf,cAAe,EACpBlf,KAAKwW,QAAQgE,SAASnS,MtBmiIrB4B,IAAK,OACLhJ,MAAO,SsBjiIPoH,GACD,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,4CAEpCuC,GAAW,GAAA9G,GAAAwC,aAAiBsE,EAHjB,IAAAhC,IAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KAIX,OAAAyE,GAAAC,EAAmBzG,KAAKwS,aAAxB9N,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAsC,IAA7B/E,GAA6BkF,EAAAvF,KAClCK,GAAO0d,WAAY,EACnB1d,EAAOkV,QAAQrB,KAAK9M,EAASE,QANtB,MAAAxD,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,aAAAsB,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,QtBkkIV0D,IAAK,OACLhJ,MAAO,SsBzjIPoH,GACD,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,4CAEpCuC,GAAW,GAAA9G,GAAAwC,aAAiBsE,EAHjB,IAAAxB,IAAA,EAAAC,GAAA,EAAAC,EAAAhF,MAAA,KAIX,OAAAiF,GAAAC,EAAmBjH,KAAKwS,aAAxB9N,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAsC,IAA7BvF,GAA6B0F,EAAA/F,KAClCK,GAAO0d,WAAY,EACnB1d,EAAOkV,QAAQ5B,KAAKvM,EAASE,QANtB,MAAAxD,GAAA+B,GAAA,EAAAC,EAAAhC,EAAA,aAAA8B,GAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,KAAAC,QtB0lIVkD,IAAK,UACLhJ,MAAO,SsBjlIJoH,GACJ,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,+CAEpCuC,GAAW,GAAA9G,GAAAwC,aAAiBsE,EAHd,IAAAb,IAAA,EAAAC,GAAA,EAAAC,EAAA3F,MAAA,KAId,OAAA4F,GAAAC,EAAmB5H,KAAKwS,aAAxB9N,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EAAsC,IAA7BlG,GAA6BqG,EAAA1G,KAClCK,GAAO0d,WAAY,EACnB1d,EAAO2d,cAAe,EACtB3d,EAAO4d,cAAe,EACtB5d,EAAOkV,QAAQ7D,QAAQtK,EAASE,QARtB,MAAAxD,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,aAAAyC,GAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,KAAAC,QtBonIbuC,IAAK,eACLhJ,MAAO,SsBzmICoH,GACT,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,oDACpC,IAAI6S,GAAa3Y,KAEbyf,EAAiB,GAAAle,GAAAwC,aAAiB,WAClC4U,EAAWnC,QAAQkJ,aAAarX,KALjBR,GAAA,EAAAC,GAAA,EAAAC,EAAAhG,MAAA,KAQnB,OAAAiG,GAAAC,EAAmBjI,KAAKwS,aAAxB9N,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAAsC,IAA7BvG,GAA6B0G,EAAA/G,KAC9BK,KAAWtB,MACXsB,EAAOkV,QAAQkJ,aAAaD,EAAelX,QAVhC,MAAAxD,GAAA+C,GAAA,EAAAC,EAAAhD,EAAA,aAAA8C,GAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,WAAA8C,EAAA,KAAAC,QtB+oIlBkC,IAAK,QACLhJ,MAAO,SsBjoINoH,GACF,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,6CACpC,IAAI6S,GAAa3Y,KAEbyf,EAAiB,GAAAle,GAAAwC,aAAiB,WAClC4U,EAAWnC,QAAQiE,MAAMpS,KALjBoG,GAAA,EAAAC,GAAA,EAAAC,EAAA5M,MAAA,KAQZ,OAAA6M,GAAAC,EAAmB7O,KAAKwS,aAAxB9N,OAAAC,cAAA8J,GAAAG,EAAAC,EAAAjK,QAAAC,MAAA4J,GAAA,EAAsC,IAA7BnN,GAA6BsN,EAAA3N,KAC9BK,KAAWtB,MACXsB,EAAOkV,QAAQiE,MAAMgF,EAAelX,QAVhC,MAAAxD,GAAA2J,GAAA,EAAAC,EAAA5J,EAAA,aAAA0J,GAAAI,EAAA7J,QAAA6J,EAAA7J,SAAA,WAAA0J,EAAA,KAAAC,QtBuqIX1E,IAAK,WACLhJ,MAAO,SsBzpIHkL,EAAOC,EAAQ/D,GACpB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDACpC,IAAK9F,KAAKkH,KAAK,iBAAf,CACA,GAAI8S,GAAO,GAAAxY,GAAA0H,SAAaiD,EAAOC,EAE/BpM,MAAKwW,QAAQmJ,SAAS3F,EAAK5P,KAAM4P,EAAK3P,IAAK,WAAYhC,OtBgqItD4B,IAAK,SACLhJ,MAAO,SsB9pILmJ,EAAMC,EAAKhC,GACd,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,8CACpC,IAAK9F,KAAKkH,KAAK,eAAf,CACA,GAAIyT,GAAY,GAAAnZ,GAAA0H,SAAakB,EAAMC,GAAMO,SAAS5K,KAAK6L,cAEvDxD,GAAW,GAAA9G,GAAAwC,aAAiBsE,EALJ,IAAAyG,IAAA,EAAAC,GAAA,EAAAC,EAAAjN,MAAA,KAMxB,OAAAkN,GAAAC,EAAmBlP,KAAKwS,aAAxB9N,OAAAC,cAAAmK,GAAAG,EAAAC,EAAAtK,QAAAC,MAAAiK,GAAA,EAAsC,IAA7BxN,GAA6B2N,EAAAhO,MAC9B+S,EAAM1S,EAAOuK,cAAc+T,IAAIjF,EAEnCrZ,GAAOoc,QAAQ7J,OAAOG,GACtB1S,EAAOkV,QAAQ3C,OAAOG,EAAI5J,KAAM4J,EAAI3J,IAAKhC,EAASE,QAV9B,MAAAxD,GAAAgK,GAAA,EAAAC,EAAAjK,EAAA,aAAA+J,GAAAI,EAAAlK,QAAAkK,EAAAlK,SAAA,WAAA+J,EAAA,KAAAC,StBqsIvB/E,IAAK,SACLhJ,MAAO,SsBxrIL+J,EAAWC,EAAU5C,GACxB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,8CACpC,IAAK9F,KAAKkH,KAAK,eAAf,CACA,GAAIyT,GAAW,GAAAnZ,GAAA0H,SAAa8B,EAAWC,EAEvC5C,GAAW,GAAA9G,GAAAwC,aAAiBsE,EALM,IAAA+G,IAAA,EAAAC,GAAA,EAAAC,EAAAvN,MAAA,KAMlC,OAAAwN,GAAAC,EAAmBxP,KAAKwS,aAAxB9N,OAAAC,cAAAyK,GAAAG,EAAAC,EAAA5K,QAAAC,MAAAuK,GAAA,EAAsC,IAA7B9N,GAA6BiO,EAAAtO,MAC9B+S,EAAM1S,EAAOuK,cAAc+T,IAAIjF,EAEnCrZ,GAAOoc,QAAQ7J,OAAOG,GACtB1S,EAAOkV,QAAQ3C,OAAOG,EAAI5J,KAAM4J,EAAI3J,IAAKhC,EAASE,QAVpB,MAAAxD,GAAAsK,GAAA,EAAAC,EAAAvK,EAAA,aAAAqK,GAAAI,EAAAxK,QAAAwK,EAAAxK,SAAA,WAAAqK,EAAA,KAAAC,StB+tIjCrF,IAAK,UACLhJ,MAAO,SsBltIJkL,EAAOC,EAAQ/D,GACnB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,+CACpC,IAAMkU,GAAO,GAAAxY,GAAA2H,KAASgD,EAAOC,EAE7BpM,MAAKwW,QAAQmJ,SAAS3F,EAAK5P,KAAM4P,EAAK3P,IAAK,WAAYhC,MtButItD4B,IAAK,YACLhJ,MAAO,SsBrtIFmJ,EAAMC,EAAKmB,EAAOC,EAAQpD,GAChC,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDACpC,IAAI0N,GAAS,GAAAhS,GAAAwH,YAAgBoB,EAAMC,EAAKmB,EAAOC,EAE/CzL,MAAKwW,QAAQoE,UAAUpH,EAAOpJ,KAAMoJ,EAAOnJ,IAAKmJ,EAAOhI,MAAOgI,EAAO/H,OAAQpD,MtB0tI5E4B,IAAK,OACLhJ,MAAO,SsBxtIPyJ,GACD,GAAK1K,KAAKkH,KAAK,gBACDnF,SAAV2I,KAGA1K,KAAKwS,aAAazM,QAAQ2E,IAAU,GAAxC,CALQ,GAAA+E,IAAA,EAAAC,GAAA,EAAAC,EAAA5N,MAAA,KAQR,OAAA6N,GAAAC,EAAqBnF,EAAM8H,aAA3B9N,OAAAC,cAAA8K,GAAAG,EAAAC,EAAAjL,QAAAC,MAAA4K,GAAA,EAAyC,IAAhCyD,GAAgCtD,EAAA3O,KACrCjB,MAAKwS,aAAaxM,KAAKkN,GAEvBA,EAASV,aAAexS,KAAKwS,cAXzB,MAAAzN,GAAA2K,GAAA,EAAAC,EAAA5K,EAAA,aAAA0K,GAAAI,EAAA7K,QAAA6K,EAAA7K,SAAA,WAAA0K,EAAA,KAAAC,StBowIP1F,IAAK,SACLhJ,MAAO,SsBpvILyJ,GAE8B,IAA7B1K,KAAKwS,aAAatO,SAGtBlE,KAAKwS,aAAa7L,OAAO3G,KAAKwS,aAAazM,QAAQ/F,MAAO,GAC1DA,KAAKwS,cAAgBxS,UtB2vIpBiK,IAAK,aACLhJ,MAAO,WsBtvIR,GAAKjB,KAAKkH,KAAK,cAAf,CADS,GAAA4I,IAAA,EAAAC,GAAA,EAAAC,EAAAjO,MAAA,KAET,OAAAkO,GAAAC,EAAmBlQ,KAAKwS,aAAxB9N,OAAAC,cAAAmL,GAAAG,EAAAC,EAAAtL,QAAAC,MAAAiL,GAAA,EAAsC,IAA7BxO,GAA6B2O,EAAAhP,KAClCK,GAAOgS,cAAgBhS,EAAOuK,eAHzB,MAAA9G,GAAAgL,GAAA,EAAAC,EAAAjL,EAAA,aAAA+K,GAAAI,EAAAlL,QAAAkL,EAAAlL,SAAA,WAAA+K,EAAA,KAAAC,StBqxIR/F,IAAK,UACLhJ,MAAO,SsB/wIJ+J,EAAWC,GACf,GAAKjL,KAAKkH,KAAK,eAAf,CAEA,GAAM0M,GAAa5T,KAAK6S,YAAYgB,OAAO7T,KAAKsT,cAAclJ,KAAOY,EACzBhL,KAAKsT,cAAcjJ,IAAMY,GACjEqC,EAAY,GAAA9L,GAAA4H,OAAWmE,IAAKA,KALPgH,GAAA,EAAAC,GAAA,EAAAC,EAAA1S,MAAA,KAOzB,OAAA2S,GAAAC,EAAoBxT,EAAAL,QAAc8Q,SAASkJ,SAA3CpW,OAAAC,cAAA4P,GAAAG,EAAAC,EAAA/P,QAAAC,MAAA0P,GAAA,EAAqD,IAA1C7J,GAA0CgK,EAAAzT,KAC7CyJ,GAAM8H,eAAiBxS,KAAKwS,cAC5BlF,EAAUwG,OAAOF,EAAWG,aAAarJ,EAAMmI,eAT9B,MAAA9N,GAAAyP,GAAA,EAAAC,EAAA1P,EAAA,aAAAwP,GAAAI,EAAA3P,QAAA2P,EAAA3P,SAAA,WAAAwP,EAAA,KAAAC,IAYzBzJ,GAAasC,EAAUlD,MAAQ,EAC/Ba,GAAYqC,EAAUjD,KAAO,CAbJ,IAAAyK,IAAA,EAAAC,GAAA,EAAAC,EAAAjT,MAAA,KAezB,OAAAkT,GAAAC,EAAkBlV,KAAKwS,aAAvB9N,OAAAC,cAAAmQ,GAAAG,EAAAC,EAAAtQ,QAAAC,MAAAiQ,GAAA,EAAqC,IAA5BpK,GAA4BuK,EAAAhU,MAC7B+S,EAAMtJ,EAAM4I,aAGJvR,UAARiS,IACAA,EAAMtJ,EAAM4I,cAAgB5I,EAAMmB,cAClCmI,EAAI5J,MAAQY,EACZgJ,EAAI3J,KAAOY,GAGfP,EAAM8L,QAAQ3C,OAAOG,EAAI5J,KAAOY,EAAWgJ,EAAI3J,IAAMY,IAzBhC,MAAAlG,GAAAgQ,GAAA,EAAAC,EAAAjQ,EAAA,aAAA+P,GAAAI,EAAAlQ,QAAAkQ,EAAAlQ,SAAA,WAAA+P,EAAA,KAAAC,StBw1IxB/K,IAAK,YACLhJ,MAAO,WsB1zIR,GAAM2S,GAAa5T,KAAK6S,YAFhBgN,GAAA,EAAAC,GAAA,EAAAC,EAAAhe,MAAA,KAIR,OAAAie,GAAAC,EAAoB9e,EAAAL,QAAc8Q,SAASkJ,SAA3CpW,OAAAC,cAAAkb,GAAAG,EAAAC,EAAArb,QAAAC,MAAAgb,GAAA,EAAqD,IAA1CnV,GAA0CsV,EAAA/e,KAC7C2S,GAAWlG,WAAWhD,EAAMmI,cAC5B7S,KAAK+S,KAAKrI,IANV,MAAA3F,GAAA+a,GAAA,EAAAC,EAAAhb,EAAA,aAAA8a,GAAAI,EAAAjb,QAAAib,EAAAjb,SAAA,WAAA8a,EAAA,KAAAC,IAAA,GAAAG,IAAA,EAAAC,GAAA,EAAAC,EAAAre,MAAA,KAUR,OAAAse,GAAAC,EAAmBtgB,KAAKwS,aAAxB9N,OAAAC,cAAAub,GAAAG,EAAAC,EAAA1b,QAAAC,MAAAqb,GAAA,EAAsC,IAA7B5e,GAA6B+e,EAAApf,YAC3BK,GAAOgS,eAXV,MAAAvO,GAAAob,GAAA,EAAAC,EAAArb,EAAA,aAAAmb,GAAAI,EAAAtb,QAAAsb,EAAAtb,SAAA,WAAAmb,EAAA,KAAAC,IAcRpgB,KAAKkH,KAAK,kBtBy2IT+C,IAAK,SACLhJ,MAAO,WsBt2IR,MAAOoG,OAAMwT,KAAK1Z,EAAAL,QAAc8Q,SAASkJ,atB02IxC7Q,IAAK,UACLhJ,MAAO,SsBx2IGZ,GACX,MAAOc,GAAAL,QAAc8Q,SAASoF,IAAI3W,MtB22IjC4J,IAAK,aACLhJ,MAAO,WsBx2IR,MAAO+U,GAAOE,YtB62IVF,GACTzU,EAAOI,asBnzIV8O,KAAIC,QAAQC,KAAKqB,EAAAlR,QAAUyH,IAAI,WAI3B,QAASyU,KACD7b,EAAAL,QAAc8Q,SACd2O,IAEA/C,WAAWR,EAAY,GAP/BlF,EAAarH,IAAIC,QAAQsF,OAAOgH,YAChC,IAAIuD,GAAevO,EAAAlR,QAAUyH,IAAImW,EASjC1B,QAGJ7b,EAAAL,QAAckV,OAASA,EtB62ItBpW,EAAQkB,QsB52IMkV,EtB62IdnW,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GuBj7JxF,GAAAM,GAAAhB,EAAA,IvBu6JKiB,EAAWR,EAAuBO,GuBt6JvC6Q,EAAA7R,EAAA,IvB06JK8R,EAAUrR,EAAuBoR,GuBz6JtCqD,EAAAlV,EAAA,IvB66JKmV,EAAW1U,EAAuByU,EuBt6JvCjU,GAAAL,QAAc0U,WAAc,WAExB,GAAIW,MACAC,IAwBJ,OAtBA9U,QAAOwY,iBAAiB,UAAW,SAAUxD,GACzC,GAAMV,GAAUU,EAAMkK,KAChBC,EAAMpL,EAAAvU,QAAOmV,QAAQL,EAAQE,MAGnC,IAAI2K,EAAI5K,MAAQR,EAAAvU,QAAOoV,QAAQL,IAA/B,CAEA,GAA6C,MAAzCO,EAAuBR,EAAQU,QAE6B,MAAxDF,EAAuBR,EAAQU,OAAOV,EAAQE,OAAgB,IAAAzR,IAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAC9D,OAAAyC,GAAAC,EAAuB2R,EAAuBR,EAAQU,OAAOV,EAAQE,OAArEpR,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA6E,IAAlEqR,GAAkElR,EAAAvD,KACzEyU,GAAStP,MAAMqa,EAAK7K,EAAQxO,OAF8B,MAAArC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,KAMtE,GAAuC,MAAnC4R,EAAiBP,EAAQU,OAAgB,IAAA/Q,IAAA,EAAAC,GAAA,EAAAC,EAAA1D,MAAA,KACzC,OAAA2D,GAAAC,EAAuBwQ,EAAiBP,EAAQU,OAAhD5R,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAAwD,IAA7CmQ,GAA6ChQ,EAAAzE,KACpDyU,GAAStP,MAAMqa,EAAK7K,EAAQxO,OAFS,MAAArC,GAAAS,GAAA,EAAAC,EAAAV,EAAA,aAAAQ,GAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,KAAAC,SAK9C,IAUC4M,KAAM,SAACzM,GAAuB,OAAAuB,GAAAlD,UAAAC,OAATkD,EAASC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATF,EAASE,EAAA,GAAArD,UAAAqD,EAG1B,IAAM+O,GAAShB,EAAAvU,QAAOoV,QAChBN,GACFvV,GAAI,EACJyV,MAAOO,EAAOR,IACdS,MAAO1Q,EACPwB,KAAMA,EAGV,IAAIA,EAAKlD,OAAS,GAAKkD,EAAK,YAALiO,GAAAvU,QAA2B,CAE9C,GAAMQ,GAAS8F,EAAKmP,OAGpB,IAAIjV,EAAOuU,MAAQQ,EAAOR,IAAO,MAEjCvU,GAAOkV,QAAQ2G,cAAcuD,YAAY9K,EAAS,SAC/C,IAAAvP,IAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KACH,OAAAyE,GAAAC,EAAqBtF,EAAAL,QAAc8Q,SAASkJ,SAA5CpW,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAsD,IAA3C/E,GAA2CkF,EAAAvF,KAC9CoV,KAAW/U,GACXA,EAAOkV,QAAQ2G,cAAcuD,YAAY9K,EAAS,MAHvD,MAAA7Q,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,aAAAsB,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,OAeXrB,GAAI,SAACU,EAAWtE,EAAQoU,GAMpB,GALiB3T,SAAb2T,IACAA,EAAWpU,EACXA,EAASS,QAGEA,SAAXT,EAAsB,CAEtB,GAAIA,EAAOuU,MAAQR,EAAAvU,QAAOoV,QAAQL,IAAO,MAEzC,IAAMc,GAAeP,EAAuB9U,EAAOuU,KAAOO,EAAuB9U,EAAOuU,QAExFc,GAAY/Q,GAAa+Q,EAAY/Q,IAAc,GAAImR,KACvDJ,EAAY/Q,GAAWga,IAAIlK,OAG3BS,GAAiBvQ,GAAauQ,EAAiBvQ,IAAc,GAAImR,KACjEZ,EAAiBvQ,GAAWga,IAAIlK,IAUxCvP,IAAK,SAACP,EAAWtE,EAAQoU,GAMrB,GALiB3T,SAAb2T,IACAA,EAAWpU,EACXA,EAASS,QAGEA,SAAXT,EAAsB,CAEtB,GAAMqV,GAAeP,EAAuB9U,EAAOuU,KAAOO,EAAuB9U,EAAOuU,QAExFc,GAAY/Q,GAAa+Q,EAAY/Q,IAAc,GAAImR,KACvDJ,EAAY/Q,GAAWkR,OAAOpB,OAE9BS,GAAiBvQ,GAAauQ,EAAiBvQ,IAAc,GAAImR,KACjEZ,EAAiBvQ,GAAWkR,OAAOpB,QAOnD1D,EAAAlR,QAAU2H,UvB6/JJ,SAAS5I,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASyI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCwB1oKjH,QAASmX,KAEL,GAAIC,GAAKte,UAAUI,UACfme,EAAID,EAAGE,MAAM,oEACbC,QAEJ,IAAI,WAAWve,KAAKqe,EAAE,IAElB,MADAE,GAAM,kBAAkBC,KAAKJ,QACpB9e,KAAM,KAAMF,QAAUmf,EAAI,IAAM,GAE7C,IAAa,WAATF,EAAE,GAAiB,CAEnB,GADAE,EAAMH,EAAGE,MAAM,gBACH,OAARC,EAAgB,OAASjf,KAAM,QAASF,QAASmf,EAAI,GAEzD,IADAA,EAAMH,EAAGE,MAAM,kBACH,OAARC,EAAgB,OAASjf,KAAM,OAAQF,QAASmf,EAAI,IAI5D,MAFAF,GAAIA,EAAE,IAAMA,EAAE,GAAIA,EAAE,KAAOve,UAAU2e,QAAS3e,UAAU4e,WAAY,MACxB,QAAvCH,EAAMH,EAAGE,MAAM,qBAAgCD,EAAEla,OAAO,EAAG,EAAGoa,EAAI,KAEnEjf,KAAM+e,EAAE,GACRjf,QAASif,EAAE,IxBwmKlB9f,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIwI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrG,GAAI,EAAGA,EAAIqG,EAAM1F,OAAQX,IAAK,CAAE,GAAIsG,GAAaD,EAAMrG,EAAIsG,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjJ,OAAOC,eAAe2I,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYtE,UAAWiF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MwBnoKjiBrI,EAAAhB,EAAA,GxBuoKKiB,EAAWR,EAAuBO,GwBtoKvCK,EAAArB,EAAA,GA0BIihB,EAAUR,GAEdxf,GAAAL,QAAce,QAAQC,KAAOqf,EAAQrf,KACrCX,EAAAL,QAAce,QAAQD,QAAUuf,EAAQvf,QACxCT,EAAAL,QAAce,QAAQG,WAAY,EAClCb,EAAAL,QAAce,QAAQQ,OAAUf,OAAOuc,SAAWvc,MAElD,KACIA,OAAOuc,OAAOO,SAChB,MAAOgD,GAGLjgB,EAAAL,QAAce,QAAQQ,QAAS,EAG/BlB,EAAAL,QAAce,QAAQQ,QAAQ,WAE9B,GAAIgf,GAAa,IAGXC,EALwB,WAM1B,QAAAA,KAAcjY,EAAArJ,KAAAshB,GACVthB,KAAKuhB,KAAOxgB,OAAOwW,OAAO,MAPJ,MAAA9N,GAAA6X,IAAArX,IAAA,SAAAhJ,MAAA,QAAA6Z,KAatB,IAAK,GAFDA,GAAS/Z,OAAOsc,KAAKrd,KAAKuhB,MAErB7a,EAAQ,EAAGA,EAAQoU,EAAO5W,OAAQwC,GAAS,EAChDoU,EAAOpU,GAAS1G,KAAKuhB,KAAKzG,EAAOpU,GAGrC,OAAOoU,MAjBe7Q,IAAA,MAAAhJ,MAAA,SAoBtBgJ,EAAKhJ,GACLjB,KAAKuhB,KAAKtX,GAAOhJ,KArBKgJ,IAAA,MAAAhJ,MAAA,SAwBtBgJ,GACA,MAAOjK,MAAKuhB,KAAKtX,MAzBKA,IAAA,SAAAhJ,MAAA,SA4BnBgJ,SACIjK,MAAKuhB,KAAKtX,OA7BKqX,IAiC9BngB,GAAAL,QAAc0gB,UAAYlgB,OAC1BH,EAAAL,QAAcsc,aAAe,GAAA7b,GAAAI,aAAiBZ,OAAOsc,KAAKlc,EAAAL,QAAcqD,kBACxEhD,EAAAL,QAAc8Q,SAAW,GAAI0P,GAE7BngB,EAAAL,QAAc2gB,eAAiB,WAE3B,MADAJ,IAAc,OAKlBlgB,EAAAL,QAAc0gB,UAAYlgB,OAAOuc,OAAOxc,cAAcmgB,WAAalgB,OAAOuc,OAC1E1c,EAAAL,QAAcsc,aAAe9b,OAAOuc,OAAOxc,cAAc+b,aACzDjc,EAAAL,QAAc8Q,SAAWtQ,OAAOuc,OAAOxc,cAAcuQ,SACrDzQ,EAAAL,QAAc2gB,eAAiBngB,OAAOuc,OAAOxc,cAAcogB,gBAI/DtgB,EAAAL,QAAcsc,aAAajV,QAA3BhH,EAAAL,SxBmqKClB,EAAQkB,QAAUK,EAASL,QAC3BjB,EAAOD,QAAUA,EAAiB,SAI7B,SAASC,EAAQD,EAASM,GAE/B,YAgBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASyI,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASyN,GAA2BC,EAAM3W,GAAQ,IAAK2W,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAO5W,GAAyB,gBAATA,IAAqC,kBAATA,GAA8B2W,EAAP3W,EAElO,QAAS6W,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI9N,WAAU,iEAAoE8N,GAAeD,GAASpS,UAAYlE,OAAOwW,OAAOD,GAAcA,EAAWrS,WAAaY,aAAe5E,MAAOoW,EAAUvN,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAeuN,IAAYvW,OAAOyW,eAAiBzW,OAAOyW,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,GApBjevW,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,GAGX,IAAIwI,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIrG,GAAI,EAAGA,EAAIqG,EAAM1F,OAAQX,IAAK,CAAE,GAAIsG,GAAaD,EAAMrG,EAAIsG,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjJ,OAAOC,eAAe2I,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUN,EAAaW,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBH,EAAYtE,UAAWiF,GAAiBC,GAAaT,EAAiBH,EAAaY,GAAqBZ,MyB5wKjiBrI,EAAAhB,EAAA,IzBgxKKiB,EAAWR,EAAuBO,GyB/wKvCK,EAAArB,EAAA,GACAsB,EAAAtB,EAAA,GAEM8X,GACF7L,MAAO,IACPC,OAAQ,IACR6L,OAAO,EACPC,WAAW,EACX2G,iBAAiB,EACjBC,UAAU,EACV1G,KAAMoB,SAASC,KAAO,cACtB5B,IAAK,IACL6J,SAAU,IACVC,UAAW,IACXC,SAAUC,IACVC,UAAWD,KAETrJ,KAEAxU,GACF,QACA,aAAc,cAAe,YAC7B,cACA,OAAQ,cACR,gBAAiB,QAAS,YACxB+d,GAAsB,gBAAiB,iBAAkB,eAC3D,oBAAqB,aAYnB/L,EzBoxKQ,SAAU9S,GyB/wKpB,QAAA8S,GAAYyC,GAAQpP,EAAArJ,KAAAgW,EAAA,IAAAzD,GAAA0E,EAAAjX,MAAAgW,EAAAyB,WAAA1W,OAAAkY,eAAAjD,IAAAzV,KAAAP,KAEVgE,GAENyU,GAASA,KACT,IAAMS,KAAgBT,YAAkBnX,QAAO0U,OAe/C,IAZAzD,EAAKR,QAAS,EAEdQ,EAAKyG,WAAY,EACjBzG,EAAKyM,WAAY,EACjBzM,EAAK0M,cAAe,EACpB1M,EAAK2M,cAAe,EACpB3M,EAAKC,cAAeD,GACpBA,EAAK4M,aACL5M,EAAK6M,QAAUrd,OACfwQ,EAAKgM,OAASxc,OACdwQ,EAAKsD,KAAM,EAAAtU,EAAAuB,uBAEPoW,EAAa,CACb,IAAK,GAAMC,KAAQV,GACXA,EAAOW,eAAeD,IAA6BpX,SAApByW,EAAUW,KACzCV,EAAOD,EAAUW,IAASV,EAAOU,SAC1BV,GAAOU,GAGtB,KAAK,GAAMA,KAAQnB,GACXA,EAAcoB,eAAeD,KAC7BV,EAAOU,GAAQV,EAAOU,IAASnB,EAAcmB,GAGrD5G,GAAKgM,OAAyB,MAAhB9F,EAAOa,MAAgB/G,EAAKsD,IAAM4C,EAAOa,MAEnDb,EAAOoF,SACPpF,EAAOoF,OAAOsB,UAAUnZ,KAAxBuM,GACAA,EAAK6M,QAAU3G,EAAOoF,aAEfpF,GAAOoF,QAGlBtL,EAAKyP,SAAW,GAAAxgB,GAAAwH,YAAgByP,EAAOiJ,SAAUjJ,EAAOkJ,WACxDpP,EAAK0P,SAAW,GAAAzgB,GAAAwH,YAAgByP,EAAOmJ,SAAUnJ,EAAOqJ,UAExD,IAAII,GAAY/gB,EAAAL,QAAc0gB,UAAUpD,SAASC,cAAc,SAE/D6D,GAAUC,IAAM1J,EAAOZ,IACvBqK,EAAUE,MAAMC,SAAW,WACtB/X,OAAOgY,SAAS7J,EAAOrO,QACxBqO,EAAOrO,MAAQjJ,EAAAL,QAAc0gB,UAAUe,WAAa9J,EAAOtM,OAAS,GAExE+V,EAAUE,MAAMhY,KAAOqO,EAAOrO,KAAO,KAChCE,OAAOgY,SAAS7J,EAAOpO,OACxBoO,EAAOpO,KAAOlJ,EAAAL,QAAc0gB,UAAUgB,YAAc/J,EAAOrM,QAAU,GAEzE8V,EAAUE,MAAM/X,IAAMoO,EAAOpO,IAAM,KACnC6X,EAAUE,MAAMjW,MAAQsM,EAAOtM,MAAQ,KACvC+V,EAAUE,MAAMhW,OAASqM,EAAOrM,OAAS,KACzC8V,EAAUE,MAAMV,SAAWnP,EAAKyP,SAAS5X,KAAO,KAChD8X,EAAUE,MAAMT,UAAYpP,EAAKyP,SAAS3X,IAAM,KAChD6X,EAAUE,MAAMR,SAAWrP,EAAK0P,SAAS7X,KAAO,KAChD8X,EAAUE,MAAMN,UAAYvP,EAAK0P,SAAS5X,IAAM,KAChD6X,EAAUE,MAAMK,OAAS,EACzBP,EAAUE,MAAMM,QAAU,EAC1BR,EAAUE,MAAMO,OAAS,EACzBT,EAAUE,MAAMQ,OAAS,OACzBV,EAAUE,MAAMS,SAAW,OAC3B1hB,EAAAL,QAAc0gB,UAAUpD,SAAS0E,KAAKrE,YAAYyD,GAElD3P,EAAKiE,QAAU0L,EACf/gB,EAAAL,QAAc8Q,SAASgF,IAAIrE,EAAKsD,IAAhCtD,GACAA,EAAKR,QAAS,EACdQ,EAAKrL,KAAK,SACV/F,EAAAL,QAAcsc,aAAalW,KAAK,gBAAhCqL,GACAA,EAAKmN,eACLnN,EAAKkI,YAELlI,GAAKyP,SAAW,GAAAxgB,GAAAwH,YAAgBgP,EAAc0J,SAAU1J,EAAc2J,WACtEpP,EAAK0P,SAAW,GAAAzgB,GAAAwH,YAAgBgP,EAAc4J,SAAU5J,EAAc8J,WACtEvP,EAAKiE,QAAUiC,EAAO2F,SAAS0E,KAC/B3hB,EAAAL,QAAc8Q,SAASgF,IAAIrE,EAAKsD,IAAhCtD,GACAA,EAAKR,QAAS,CAjFF,OAAAQ,GzB2kNnB,MA3zCA6E,GAAUpB,EAAQ9S,GAqGlBuG,EAAauM,IACT/L,IAAK,UACLhJ,MAAO,WyB7xKR,MAAOjB,MAAK+R,UzBuyKX9H,IAAK,UACLhJ,MAAO,SyBjyKJoH,GACJ,GAAIrI,KAAK+Z,WAAc,KAAM,IAAIjU,OAAM,6CACvC,OAAI9F,MAAK6Q,UAAoBxI,EAAS9H,KAAKP,UAE3CA,MAAKiG,KAAK,QAASoC,MzB8yKlB4B,IAAK,WACLhJ,MAAO,WyBvyKR,MAAOjB,MAAKgZ,azBizKX/O,IAAK,cACLhJ,MAAO,WyB1yKR,MAAO,IAAAO,GAAA0H,SAAalJ,KAAKwW,QAAQuM,4BzB8yKhC9Y,IAAK,cACLhJ,MAAO,WyB3yKR,MAAOjB,MAAKgiB,SAAS5X;IzBqzKpBH,IAAK,WACLhJ,MAAO,WyB9yKR,MAAOjB,MAAKwW,QAAQuM,wBAAwB5W,SzBkzK3ClC,IAAK,cACLhJ,MAAO,WyB/yKR,MAAOjB,MAAKiiB,SAAS7X,QzBmzKpBH,IAAK,eACLhJ,MAAO,WyBhzKR,MAAOjB,MAAKgiB,SAAS3X,OzB0zKpBJ,IAAK,YACLhJ,MAAO,WyBnzKR,MAAOjB,MAAKwW,QAAQuM,wBAAwB3W,UzBuzK3CnC,IAAK,eACLhJ,MAAO,WyBpzKR,MAAOjB,MAAKiiB,SAAS5X,OzBwzKpBJ,IAAK,aACLhJ,MAAO,WyBrzKR,MAAOjB,MAAKgiB,SAAS/T,WzB+zKpBhE,IAAK,UACLhJ,MAAO,WyBxzKR,GAAI6M,GAAM9N,KAAKwW,QAAQuM,uBAEvB,OAAO,IAAAvhB,GAAA2H,KAAS2E,EAAI3B,MAAO2B,EAAI1B,WzB4zK9BnC,IAAK,aACLhJ,MAAO,WyBzzKR,MAAOjB,MAAKiiB,SAAShU,WzBm0KpBhE,IAAK,YACLhJ,MAAO,WyB5zKR,MAAO,IAAAO,GAAAwH,YAAgBhJ,KAAKwW,QAAQuM,4BzBg0KnC9Y,IAAK,YACLhJ,MAAO,WyB7zKR,MAAOjB,MAAKof,WzBi0KXnV,IAAK,YACLhJ,MAAO,SyB/zKF4c,GAEN,GAAIA,IAAW7d,KAAKof,QAApB,CAEA,GAAIpf,KAAKof,QAAS,CACd,GAAM1Y,GAAQ1G,KAAKof,QAAQD,UAAUpZ,QAAQ/F,KAEzC0G,IAAS,GAAK1G,KAAKof,QAAQD,UAAUxY,OAAOD,EAAO,GAIvDmX,IACA7d,KAAKof,QAAUvB,EACf7d,KAAKof,QAAQD,UAAUnZ,KAAKhG,WzBw0K/BiK,IAAK,cACLhJ,MAAO,WyBn0KR,MAAOjB,MAAKmf,UAAUK,WzBu0KrBvV,IAAK,WACLhJ,MAAO,SyBr0KH+c,GACLA,EAAMC,UAAUje,SzB80KfiK,IAAK,WACLhJ,MAAO,WyBv0KR,MAAOjB,MAAKue,UzBi1KXtU,IAAK,WACLhJ,MAAO,SyB30KHqY,GACL,IAAKA,EAAS,KAAM,IAAIxT,OAAM,gDAC9B9F,MAAKue,OAASjF,KzBs1KbrP,IAAK,WACLhJ,MAAO,WyB/0KR,MAAOjB,MAAKgf,azBy1KX/U,IAAK,UACLhJ,MAAO,WyBl1KR,OAAQjB,KAAKgf,azB41KZ/U,IAAK,cACLhJ,MAAO,WyBr1KR,MAAOjB,MAAKif,gBzB+1KXhV,IAAK,cACLhJ,MAAO,WyBx1KR,MAAOjB,MAAKkf,gBzBk2KXjV,IAAK,aACLhJ,MAAO,WyB31KR,MAAOjB,MAAKma,YAAcna,KAAKqa,gBAAkBra,KAAKsa,iBzBq2KrDrQ,IAAK,QACLhJ,MAAO,SyB/1KNoH,GACF,GAAIrI,KAAK+Z,WAAc,MAAO1R,IAAYA,GAE1CrI,MAAKwW,QAAQwM,cAAcC,YAAYjjB,KAAKwW,SAC5CrV,EAAAL,QAAc8Q,SAASkF,OAAO9W,KAAK6V,KAGnC7V,KAAKyS,QAGL,IAAMoL,GAAS7d,KAAK8d,YAVRzZ,GAAA,EAAAC,GAAA,EAAAC,EAAAxC,MAAA,KAYZ,OAAAyC,GAAAC,EAAoBzE,KAAK+d,cAAzBrZ,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwC,IAA7B2Z,GAA6BxZ,EAAAvD,KAGpC+c,GAAMC,UAAUJ,IAfR,MAAA9Y,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAiBZvE,KAAKie,UAAUlc,QAEf/B,KAAKgZ,WAAY,EACb3Q,GAAYA,IAChBrI,KAAKkH,KAAK,SACV/F,EAAAL,QAAcsc,aAAalW,KAAK,eAAgBlH,SzBk4K/CiK,IAAK,WACLhJ,MAAO,SyB53KHoH,GACL,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDADrB,IAAAP,IAAA,EAAAC,GAAA,EAAAC,EAAA1D,MAAA,KAIf,OAAA2D,GAAAC,EAAmB3F,KAAKwS,aAAxB9N,OAAAC,cAAAY,GAAAG,EAAAC,EAAAf,QAAAC,MAAAU,GAAA,EAAsC,IAA7BjE,GAA6BoE,EAAAzE,KAClCK,GAAO2d,cAAe,EACtB3d,EAAO4F,KAAK,aAND,MAAAnC,GAAAS,GAAA,EAAAC,EAAAV,EAAA,aAAAQ,GAAAI,EAAAX,QAAAW,EAAAX,SAAA,WAAAQ,EAAA,KAAAC,QzBm6KdwE,IAAK,WACLhJ,MAAO,SyBt5KHoH,GACL,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDAEpC9F,MAAKkjB,eAAiBljB,KAAK6S,YAC3B7S,KAAKwW,QAAQ4L,MAAMhY,KAAO,EAC1BpK,KAAKwW,QAAQ4L,MAAM/X,IAAM,EACzBrK,KAAKwW,QAAQ4L,MAAMjW,MAAQ,OAC3BnM,KAAKwW,QAAQ4L,MAAMhW,OAAS,OAC5BpM,KAAKkf,cAAe,EAChB7W,GAAYA,OzBm6Kf4B,IAAK,OACLhJ,MAAO,SyB75KPoH,GACD,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,4CADzB,IAAAO,IAAA,EAAAC,GAAA,EAAAC,EAAAxE,MAAA,KAGX,OAAAyE,GAAAC,EAAmBzG,KAAKwS,aAAxB9N,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAAsC,IAA7B/E,GAA6BkF,EAAAvF,KAClCK,GAAOkV,QAAQ4L,MAAMe,QAAU,GAC/B7hB,EAAO0d,WAAY,GALZ,MAAAja,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,aAAAsB,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAOP8B,GAAYA,OzBg8Kf4B,IAAK,OACLhJ,MAAO,SyB17KPoH,GACD,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,4CADzB,IAAAe,IAAA,EAAAC,GAAA,EAAAC,EAAAhF,MAAA,KAGX,OAAAiF,GAAAC,EAAmBjH,KAAKwS,aAAxB9N,OAAAC,cAAAkC,GAAAG,EAAAC,EAAArC,QAAAC,MAAAgC,GAAA,EAAsC,IAA7BvF,GAA6B0F,EAAA/F,KAClCK,GAAOkV,QAAQ4L,MAAMe,QAAU,OAC/B7hB,EAAO0d,WAAY,GALZ,MAAAja,GAAA+B,GAAA,EAAAC,EAAAhC,EAAA,aAAA8B,GAAAI,EAAAjC,QAAAiC,EAAAjC,SAAA,WAAA8B,EAAA,KAAAC,IAOPsB,GAAYA,OzB69Kf4B,IAAK,UACLhJ,MAAO,SyBv9KJoH,GACJ,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,+CADtB,IAAA0B,IAAA,EAAAC,GAAA,EAAAC,EAAA3F,MAAA,KAGd,OAAA4F,GAAAC,EAAmB5H,KAAKwS,aAAxB9N,OAAAC,cAAA6C,GAAAG,EAAAC,EAAAhD,QAAAC,MAAA2C,GAAA,EAAsC,IAA7BlG,GAA6BqG,EAAA1G,KAC9BK,GAAO4d,eACP5d,EAAOkV,QAAQ4L,MAAMhY,KAAO9I,EAAO4hB,eAAe9Y,KAAO,KACzD9I,EAAOkV,QAAQ4L,MAAM/X,IAAM/I,EAAO4hB,eAAe7Y,IAAM,KACvD/I,EAAOkV,QAAQ4L,MAAMjW,MAAQ7K,EAAO4hB,eAAexX,WAAa,KAChEpK,EAAOkV,QAAQ4L,MAAMhW,OAAS9K,EAAO4hB,eAAevX,YAAc,KAClErK,EAAO0d,WAAY,EACnB1d,EAAO2d,cAAe,EACtB3d,EAAO4d,cAAe,IAXhB,MAAAna,GAAA0C,GAAA,EAAAC,EAAA3C,EAAA,aAAAyC,GAAAI,EAAA5C,QAAA4C,EAAA5C,SAAA,WAAAyC,EAAA,KAAAC,IAcVW,GAAYA,OzB0/Kf4B,IAAK,eACLhJ,MAAO,SyBp/KCoH,GACT,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,oDADjB,IAAA+B,IAAA,EAAAC,GAAA,EAAAC,EAAAhG,MAAA,KAGnB,OAAAiG,GAAAC,EAAmBjI,KAAKwS,aAAxB9N,OAAAC,cAAAkD,GAAAG,EAAAC,EAAArD,QAAAC,MAAAgD,GAAA,EAAsC,IAA7BvG,GAA6B0G,EAAA/G,KAC9BK,KAAWtB,OACXsB,EAAOkV,QAAQ4L,MAAM,WAAajhB,EAAAL,QAAc2gB,mBALrC,MAAA1c,GAAA+C,GAAA,EAAAC,EAAAhD,EAAA,aAAA8C,GAAAI,EAAAjD,QAAAiD,EAAAjD,SAAA,WAAA8C,EAAA,KAAAC,IAQnB/H,KAAKwW,QAAQ4L,MAAM,WAAajhB,EAAAL,QAAc2gB,iBAC1CpZ,GAAYA,OzBuhLf4B,IAAK,QACLhJ,MAAO,SyBjhLNoH,GACF,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,6CADxB,IAAA2I,IAAA,EAAAC,GAAA,EAAAC,EAAA5M,MAAA,KAGZ,OAAA6M,GAAAC,EAAmB7O,KAAKwS,aAAxB9N,OAAAC,cAAA8J,GAAAG,EAAAC,EAAAjK,QAAAC,MAAA4J,GAAA,EAAsC,IAA7BnN,GAA6BsN,EAAA3N,KAC9BK,KAAWtB,MAAQsB,EAAOkV,QAAQ2G,cAAc1C,SAJ5C,MAAA1V,GAAA2J,GAAA,EAAAC,EAAA5J,EAAA,aAAA0J,GAAAI,EAAA7J,QAAA6J,EAAA7J,SAAA,WAAA0J,EAAA,KAAAC,IAMZ3O,KAAKwW,QAAQ2G,cAAc1C,QACvBpS,GAAYA,OzBwjLf4B,IAAK,WACLhJ,MAAO,SyBhjLHkL,EAAOC,EAAQ/D,GACpB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDACpC,IAAK9F,KAAKkH,KAAK,iBAAf,CACA,GAAI8S,GAAO,GAAAxY,GAAA0H,SAAaiD,EAAOC,EAE/BpM,MAAKyS,SACLzS,KAAKwW,QAAQrK,MAAQ6N,EAAK5P,KAAO,KACjCpK,KAAKwW,QAAQpK,OAAS4N,EAAK3P,IAAM,KAC7BhC,GAAYA,QzBikLf4B,IAAK,SACLhJ,MAAO,SyBzjLLmJ,EAAMC,EAAKhC,GACd,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,8CACpC,IAAK9F,KAAKkH,KAAK,eAAf,CACA,GAAIyT,GAAY,GAAAnZ,GAAA0H,SAAakB,EAAMC,GAAMO,SAAS5K,KAAK6L,eAH/BiD,GAAA,EAAAC,GAAA,EAAAC,EAAAjN,MAAA,KAKxB,OAAAkN,GAAAC,EAAmBlP,KAAKwS,aAAxB9N,OAAAC,cAAAmK,GAAAG,EAAAC,EAAAtK,QAAAC,MAAAiK,GAAA,EAAsC,IAA7BxN,GAA6B2N,EAAAhO,MAC9B+S,EAAM1S,EAAOuK,cAAc+T,IAAIjF,EAEnCrZ,GAAOkV,QAAQ4L,MAAMhY,KAAO4J,EAAI5J,KAAO,KACvC9I,EAAOkV,QAAQ4L,MAAM/X,IAAM2J,EAAI3J,IAAM,MATjB,MAAAtF,GAAAgK,GAAA,EAAAC,EAAAjK,EAAA,aAAA+J,GAAAI,EAAAlK,QAAAkK,EAAAlK,SAAA,WAAA+J,EAAA,KAAAC,IAWpB3G,GAAYA,QzBgmLf4B,IAAK,SACLhJ,MAAO,SyBxlLL+J,EAAWC,EAAU5C,GACxB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,8CACpC,IAAK9F,KAAKkH,KAAK,eAAf,CACA,GAAIyT,GAAW,GAAAnZ,GAAA0H,SAAa8B,EAAWC,GAHLmE,GAAA,EAAAC,GAAA,EAAAC,EAAAvN,MAAA,KAKlC,OAAAwN,GAAAC,EAAmBxP,KAAKwS,aAAxB9N,OAAAC,cAAAyK,GAAAG,EAAAC,EAAA5K,QAAAC,MAAAuK,GAAA,EAAsC,IAA7B9N,GAA6BiO,EAAAtO,MAC9B+S,EAAM1S,EAAOuK,cAAc+T,IAAIjF,EAEnCrZ,GAAOkV,QAAQ4L,MAAMhY,KAAO4J,EAAI5J,KAAO,KACvC9I,EAAOkV,QAAQ4L,MAAM/X,IAAM2J,EAAI3J,IAAM,MATP,MAAAtF,GAAAsK,GAAA,EAAAC,EAAAvK,EAAA,aAAAqK,GAAAI,EAAAxK,QAAAwK,EAAAxK,SAAA,WAAAqK,EAAA,KAAAC,IAW9BjH,GAAYA,GAXkB,IAAAoH,IAAA,EAAAC,GAAA,EAAAC,EAAA5N,MAAA,KAYlC,OAAA6N,GAAAC,EAAmB7P,KAAKwS,aAAxB9N,OAAAC,cAAA8K,GAAAG,EAAAC,EAAAjL,QAAAC,MAAA4K,GAAA,EAAsC,IAA7BnO,GAA6BsO,EAAA3O,KAClCK,GAAO4F,KAAK,SAbkB,MAAAnC,GAAA2K,GAAA,EAAAC,EAAA5K,EAAA,aAAA0K,GAAAI,EAAA7K,QAAA6K,EAAA7K,SAAA,WAAA0K,EAAA,KAAAC,SzB0pLjC1F,IAAK,aACLhJ,MAAO,SyB1oLDkL,EAAOC,EAAQ/D,GACtB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,kDACpC,IAAMkU,GAAO,GAAAxY,GAAA2H,KAASgD,EAAOC,EAE7BpM,MAAKyS,SACLzS,KAAKgiB,SAAS5X,KAAO4P,EAAK5P,KAC1BpK,KAAKgiB,SAAS3X,IAAM2P,EAAK3P,IACzBrK,KAAKwW,QAAQ4L,MAAMV,SAAW1hB,KAAKgiB,SAAS5X,KAAO,KACnDpK,KAAKwW,QAAQ4L,MAAMT,UAAY3hB,KAAKgiB,SAAS3X,IAAM,KAC/CrK,KAAK0L,WAAasO,EAAK5P,MAAQpK,KAAK2L,YAAcqO,EAAK3P,KAGvDrK,KAAKwW,QAAQ4L,MAAMjW,MAAQzI,KAAKoI,IAAI9L,KAAK0L,WAAYsO,EAAK5P,MAAQ,KAClEpK,KAAKwW,QAAQ4L,MAAMhW,OAAS1I,KAAKoI,IAAI9L,KAAK2L,YAAaqO,EAAK3P,KAAO,KAC/DhC,GAAYA,IAChBrI,KAAKkH,KAAK,WAENmB,GAAYA,OzBopLnB4B,IAAK,UACLhJ,MAAO,SyBjpLJkL,EAAOC,EAAQ/D,GACnB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,kDACpC,IAAMkU,GAAO,GAAAxY,GAAA2H,KAASgD,EAAOC,EAE7BpM,MAAKyS,SACLzS,KAAKwW,QAAQ4L,MAAMjW,MAAQzI,KAAK0H,IAAIpL,KAAKiiB,SAAS7X,KAAM1G,KAAKoI,IAAI9L,KAAKgiB,SAAS5X,KAAM4P,EAAK5P,OAAS,KACnGpK,KAAKwW,QAAQ4L,MAAMhW,OAAS1I,KAAK0H,IAAIpL,KAAKiiB,SAAS5X,IAAK3G,KAAKoI,IAAI9L,KAAKgiB,SAAS3X,IAAK2P,EAAK3P,MAAQ,IANpE,IAAAyF,IAAA,EAAAC,GAAA,EAAAC,EAAAjO,MAAA,KAQ7B,OAAAkO,GAAAC,EAA8B6R,EAA9Brd,OAAAC,cAAAmL,GAAAG,EAAAC,EAAAtL,QAAAC,MAAAiL,GAAA,EAAkD,IAAzCsT,GAAyCnT,EAAAhP,KAC9CjB,MAAKwW,QAAQ4L,MAAMgB,GAAqB,IATf,MAAAre,GAAAgL,GAAA,EAAAC,EAAAjL,EAAA,aAAA+K,GAAAI,EAAAlL,QAAAkL,EAAAlL,SAAA,WAAA+K,EAAA,KAAAC,IAWzB3H,GAAYA,IAChBrI,KAAKkH,KAAK,azB8qLT+C,IAAK,kBACLhJ,MAAO,SyB5qLIkL,EAAOC,EAAQ/D,GAC3B,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,kDACpC,IAAMkU,GAAO,GAAAxY,GAAA2H,KAASzF,KAAK0H,IAAIpL,KAAKiiB,SAAS7X,KAAM1G,KAAKoI,IAAI9L,KAAKgiB,SAAS5X,KAAM+B,IAC5DzI,KAAK0H,IAAIpL,KAAKiiB,SAAS5X,IAAK3G,KAAKoI,IAAI9L,KAAKgiB,SAAS3X,IAAK+B,IAE5EpM,MAAKyS,SACLzS,KAAKwW,QAAQ4L,MAAMjW,MAAQ6N,EAAK5P,KAAO,KACvCpK,KAAKwW,QAAQ4L,MAAMhW,OAAS4N,EAAK3P,IAAM,IAEvC,IAAIgZ,GAAY3f,KAAK0H,IAAIe,EAAQ6N,EAAK5P,KAAMgC,EAAS4N,EAAK3P,KATrBkK,GAAA,EAAAC,GAAA,EAAAC,EAAA1S,MAAA,KAWrC,OAAA2S,GAAAC,EAA8BoN,EAA9Brd,OAAAC,cAAA4P,GAAAG,EAAAC,EAAA/P,QAAAC,MAAA0P,GAAA,EAAkD,IAAzC6O,GAAyC1O,EAAAzT,KAC9CjB,MAAKwW,QAAQ4L,MAAMgB,GAAqB,SAAWC,EAAY,KAZ9B,MAAAte,GAAAyP,GAAA,EAAAC,EAAA1P,EAAA,aAAAwP,GAAAI,EAAA3P,QAAA2P,EAAA3P,SAAA,WAAAwP,EAAA,KAAAC,IAcjCpM,GAAYA,IAChBrI,KAAKkH,KAAK,azBwsLT+C,IAAK,aACLhJ,MAAO,SyBtsLDkL,EAAOC,EAAQ/D,GACtB,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,kDACpC,IAAMkU,GAAO,GAAAxY,GAAA2H,KAASgD,EAAOC,EAO7B,IALApM,KAAKyS,SACLzS,KAAKiiB,SAAS7X,KAAO4P,EAAK5P,KAC1BpK,KAAKiiB,SAAS5X,IAAM2P,EAAK3P,IACzBrK,KAAKwW,QAAQ4L,MAAMR,SAAW5hB,KAAKiiB,SAAS7X,KAAO,KACnDpK,KAAKwW,QAAQ4L,MAAMN,UAAY9hB,KAAKiiB,SAAS5X,IAAM,KAC/CrK,KAAK0L,WAAasO,EAAK5P,MAAQpK,KAAK2L,YAAcqO,EAAK3P,IAAK,CAG5DrK,KAAKwW,QAAQ4L,MAAMjW,MAAQzI,KAAK0H,IAAIpL,KAAK0L,WAAYsO,EAAK5P,MAAQ,KAClEpK,KAAKwW,QAAQ4L,MAAMhW,OAAS1I,KAAK0H,IAAIpL,KAAK2L,YAAaqO,EAAK3P,KAAO,IAJP,IAAAyK,IAAA,EAAAC,GAAA,EAAAC,EAAAjT,MAAA,KAM5D,OAAAkT,GAAAC,EAA8B6M,EAA9Brd,OAAAC,cAAAmQ,GAAAG,EAAAC,EAAAtQ,QAAAC,MAAAiQ,GAAA,EAAkD,IAAzCsO,GAAyCnO,EAAAhU,KAC9CjB,MAAKwW,QAAQ4L,MAAMgB,GAAqB,IAPgB,MAAAre,GAAAgQ,GAAA,EAAAC,EAAAjQ,EAAA,aAAA+P,GAAAI,EAAAlQ,QAAAkQ,EAAAlQ,SAAA,WAAA+P,EAAA,KAAAC,IASxD3M,GAAYA,IAChBrI,KAAKkH,KAAK,cAENmB,IAAYA,OzBgvLnB4B,IAAK,YACLhJ,MAAO,SyBruLFmJ,EAAMC,EAAKmB,EAAOC,EAAQpD,GAChC,IAAKrI,KAAK+R,OAAU,KAAM,IAAIjM,OAAM,gDACpC,IAAI0N,GAAS,GAAAhS,GAAAwH,YAAgBoB,EAAMC,EAAKmB,EAAOC,EAE/CzL,MAAKyS,SACLzS,KAAKwW,QAAQ4L,MAAMhY,KAAOoJ,EAAOpJ,KAAO,KACxCpK,KAAKwW,QAAQ4L,MAAM/X,IAAMmJ,EAAOnJ,IAAM,KAEtCrK,KAAKwW,QAAQ4L,MAAMjW,MAAQzI,KAAK0H,IAAIpL,KAAKiiB,SAAS7X,KAAM1G,KAAKoI,IAAI9L,KAAKgiB,SAAS5X,KAAMoJ,EAAO9H,aAAe,KAC3G1L,KAAKwW,QAAQ4L,MAAMhW,OAAS1I,KAAK0H,IAAIpL,KAAKiiB,SAAS5X,IAAK3G,KAAKoI,IAAI9L,KAAKgiB,SAAS3X,IAAKmJ,EAAO7H,cAAgB,IATjE,IAAAkU,IAAA,EAAAC,GAAA,EAAAC,EAAAhe,MAAA,KAW1C,OAAAie,GAAAC,EAA8B8B,EAA9Brd,OAAAC,cAAAkb,GAAAG,EAAAC,EAAArb,QAAAC,MAAAgb,GAAA,EAAkD,IAAzCuD,GAAyCpD,EAAA/e,KAC9CjB,MAAKwW,QAAQ4L,MAAMgB,GAAqB,IAZF,MAAAre,GAAA+a,GAAA,EAAAC,EAAAhb,EAAA,aAAA8a,GAAAI,EAAAjb,QAAAib,EAAAjb,SAAA,WAAA8a,EAAA,KAAAC,IAetC1X,GAAYA,OzBywLf4B,IAAK,OACLhJ,MAAO,SyBlwLPyJ,GAED,GAAK1K,KAAKkH,KAAK,gBACDnF,SAAV2I,KAGA1K,KAAKwS,aAAazM,QAAQ2E,IAAU,GAAxC,CANQ,GAAAwV,IAAA,EAAAC,GAAA,EAAAC,EAAAre,MAAA,KASR,OAAAse,GAAAC,EAAqB5V,EAAM8H,aAA3B9N,OAAAC,cAAAub,GAAAG,EAAAC,EAAA1b,QAAAC,MAAAqb,GAAA,EAAyC,IAAhChN,GAAgCmN,EAAApf,KACrCjB,MAAKwS,aAAaxM,KAAKkN,GAEvBA,EAASV,aAAeU,EAASV,cAZ7B,MAAAzN,GAAAob,GAAA,EAAAC,EAAArb,EAAA,aAAAmb,GAAAI,EAAAtb,QAAAsb,EAAAtb,SAAA,WAAAmb,EAAA,KAAAC,SzBqzLPnW,IAAK,SACLhJ,MAAO,SyBhyLLyJ,GAE8B,IAA7B1K,KAAKwS,aAAatO,SAGtBlE,KAAKwS,aAAa7L,OAAO3G,KAAKwS,aAAazM,QAAQ/F,MAAO,GAC1DA,KAAKwS,cAAgBxS,UzBuyLpBiK,IAAK,aACLhJ,MAAO,WyBlyLR,GAAKjB,KAAKkH,KAAK,cAAf,CACAlH,KAAK2S,SAFI,IAAA2Q,IAAA,EAAAC,GAAA,EAAAC,EAAAzhB,MAAA,KAGT,OAAA0hB,GAAAC,EAAmB1jB,KAAKwS,aAAxB9N,OAAAC,cAAA2e,GAAAG,EAAAC,EAAA9e,QAAAC,MAAAye,GAAA,EAAsC,IAA7BhiB,GAA6BmiB,EAAAxiB,KAClCK,GAAOgS,cAAgBhS,EAAOuK,eAJzB,MAAA9G,GAAAwe,GAAA,EAAAC,EAAAze,EAAA,aAAAue,GAAAI,EAAA1e,QAAA0e,EAAA1e,SAAA,WAAAue,EAAA,KAAAC,SzBk0LRvZ,IAAK,UACLhJ,MAAO,SyB3zLJ+J,EAAWC,GACf,GAAKjL,KAAKkH,KAAK,eAAf,CAEA,GAAM0M,GAAa5T,KAAK6S,YAAYgB,OAAO7T,KAAKsT,cAAclJ,KAAOY,EACzBhL,KAAKsT,cAAcjJ,IAAMY,GACjEqC,EAAY,GAAA9L,GAAA4H,OAAWmE,IAAKA,KALPoW,GAAA,EAAAC,GAAA,EAAAC,EAAA9hB,MAAA,KAOzB,OAAA+hB,GAAAC,EAAoB5iB,EAAAL,QAAc8Q,SAASkJ,SAA3CpW,OAAAC,cAAAgf,GAAAG,EAAAC,EAAAnf,QAAAC,MAAA8e,GAAA,EAAqD,IAA1CjZ,GAA0CoZ,EAAA7iB,KAC7CyJ,GAAM8H,eAAiBxS,KAAKwS,cAC5BlF,EAAUwG,OAAOF,EAAWG,aAAarJ,EAAMmI,eAT9B,MAAA9N,GAAA6e,GAAA,EAAAC,EAAA9e,EAAA,aAAA4e,GAAAI,EAAA/e,QAAA+e,EAAA/e,SAAA,WAAA4e,EAAA,KAAAC,IAYzB7Y,GAAasC,EAAUlD,MAAQ,EAC/Ba,GAAYqC,EAAUjD,KAAO,CAbJ,IAAA2Z,IAAA,EAAAC,GAAA,EAAAC,EAAAniB,MAAA,KAezB,OAAAoiB,GAAAC,EAAkBpkB,KAAKwS,aAAvB9N,OAAAC,cAAAqf,GAAAG,EAAAC,EAAAxf,QAAAC,MAAAmf,GAAA,EAAqC,IAA5BtZ,GAA4ByZ,EAAAljB,MAC7B+S,EAAMtJ,EAAM4I,aAGJvR,UAARiS,IACAA,EAAMtJ,EAAM4I,cAAgB5I,EAAMmB,cAClCmI,EAAI5J,MAAQY,EACZgJ,EAAI3J,KAAOY,GAGfP,EAAM8L,QAAQ4L,MAAMhY,KAAQ4J,EAAI5J,KAAOY,EAAa,KACpDN,EAAM8L,QAAQ4L,MAAM/X,IAAO2J,EAAI3J,IAAMY,EAAY,KACjDP,EAAMxD,KAAK,SA3BU,MAAAnC,GAAAkf,GAAA,EAAAC,EAAAnf,EAAA,aAAAif,GAAAI,EAAApf,QAAAof,EAAApf,SAAA,WAAAif,EAAA,KAAAC,SzBs4LxBja,IAAK,YACLhJ,MAAO,WyBt2LR,GAAM2S,GAAa5T,KAAK6S,YAFhBwR,GAAA,EAAAC,GAAA,EAAAC,EAAAxiB,MAAA,KAIR,OAAAyiB,GAAAC,EAAoBtjB,EAAAL,QAAc8Q,SAASkJ,SAA3CpW,OAAAC,cAAA0f,GAAAG,EAAAC,EAAA7f,QAAAC,MAAAwf,GAAA,EAAqD,IAA1C3Z,GAA0C8Z,EAAAvjB,KAC7C2S,GAAWlG,WAAWhD,EAAMmI,cAC5B7S,KAAK+S,KAAKrI,IANV,MAAA3F,GAAAuf,GAAA,EAAAC,EAAAxf,EAAA,aAAAsf,GAAAI,EAAAzf,QAAAyf,EAAAzf,SAAA,WAAAsf,EAAA,KAAAC,IAAA,GAAAG,IAAA,EAAAC,GAAA,EAAAC,EAAA7iB,MAAA,KAUR,OAAA8iB,GAAAC,EAAmB9kB,KAAKwS,aAAxB9N,OAAAC,cAAA+f,GAAAG,EAAAC,EAAAlgB,QAAAC,MAAA6f,GAAA,EAAsC,IAA7BpjB,GAA6BujB,EAAA5jB,YAC3BK,GAAOgS,eAXV,MAAAvO,GAAA4f,GAAA,EAAAC,EAAA7f,EAAA,aAAA2f,GAAAI,EAAA9f,QAAA8f,EAAA9f,SAAA,WAAA2f,EAAA,KAAAC,IAcR5kB,KAAKkH,KAAK,kBzB25LT+C,IAAK,SACLhJ,MAAO,WyBp5LR,MAAOoG,OAAMwT,KAAK1Z,EAAAL,QAAc8Q,SAASkJ,azB+5LxC7Q,IAAK,UACLhJ,MAAO,SyBx5LGZ,GACX,MAAOc,GAAAL,QAAc8Q,SAASoF,IAAI3W,MzBi6LjC4J,IAAK,aACLhJ,MAAO,WyB15LR,MAAO+U,GAAOE,YzB+5LVF,GACTzU,EAAOI,ayB35LNR,GAAAL,QAAce,QAAQQ,QACtBf,OAAO8c,SAAS0E,KAAK3F,cAAgB7b,OACrC0U,EAAOE,QAAU,GAAIF,GAAO1U,SAI5B0U,EAAOE,QAAW,WAAY,GAAA6O,IAAA,EAAAC,GAAA,EAAAC,EAAAljB,MAAA,KAC1B,OAAAmjB,GAAAC,EAAgBhkB,EAAAL,QAAc8Q,SAASkJ,SAAvCpW,OAAAC,cAAAogB,GAAAG,EAAAC,EAAAvgB,QAAAC,MAAAkgB,GAAA,EAAiD,IAAxCtE,GAAwCyE,EAAAjkB,KAC7C,IAAIwf,EAAIjK,QAAQ2G,gBAAkB7b,OAAU,MAAOmf,IAF7B,MAAA1b,GAAAigB,GAAA,EAAAC,EAAAlgB,EAAA,aAAAggB,GAAAI,EAAAngB,QAAAmgB,EAAAngB,SAAA,WAAAggB,EAAA,KAAAC,QAO7B9jB,EAAAL,QAAce,QAAQQ,SAAQ,WAE/B,GAAI6Y,GAAK,EACLC,EAAK,EACLH,GAAW,CAEf1Z,QAAOwY,iBAAiB,QAAS,WAC7B9D,EAAOE,QAAQwJ,iBAGnBpe,OAAOwY,iBAAiB,YAAa,SAAqBxD,GAClDA,EAAM3M,OAAOyR,WAAa9E,EAAM3M,OAAOyR,UAAUC,SAAS,iBAC1D/E,EAAM2E,iBACND,GAAW,EACXE,EAAK5E,EAAMgF,QACXH,EAAK7E,EAAMiF,QACXvF,EAAOE,QAAQ7C,gBAIvB/R,OAAOwY,iBAAiB,aAAc,SAAUxD,GACxCA,EAAM3M,OAAOyR,WAAa9E,EAAM3M,OAAOyR,UAAUC,SAAS,iBAC1D/E,EAAM2E,iBACND,GAAW,EACXE,EAAK5E,EAAMkF,QAAQ,GAAGF,QACtBH,EAAK7E,EAAMkF,QAAQ,GAAGD,QACtBvF,EAAOE,QAAQ7C,gBAIvB/R,OAAOwY,iBAAiB,YAAa,SAAUxD,GACvC0E,IACA1E,EAAM2E,iBACNjF,EAAOE,QAAQvC,QAAQ2C,EAAMgF,QAAUJ,EAAI5E,EAAMiF,QAAUJ,MAInE7Z,OAAOwY,iBAAiB,YAAa,SAAUxD,GACvC0E,IACA1E,EAAM2E,iBACNjF,EAAOE,QAAQvC,QAAQ2C,EAAMkF,QAAQ,GAAGF,QAAUJ,EAAI5E,EAAMkF,QAAQ,GAAGD,QAAUJ,KAIzF,IAAMJ,GAAY,WACVC,IACA1E,MAAM2E,iBACND,GAAW,EACXhF,EAAOE,QAAQhC,aAIvB5S,QAAOwY,iBAAiB,UAAWiB,GACnCzZ,OAAOwY,iBAAiB,WAAYiB,MAGxC5Z,EAAAL,QAAckV,OAASA,EzB07LtBpW,EAAQkB,QyBz7LMkV,EzB07LdnW,EAAOD,QAAUA,EAAiB","file":"windowmanager.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"windowmanager\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"windowmanager\"] = factory();\n\telse\n\t\troot[\"windowmanager\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"windowmanager\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"windowmanager\"] = factory();\n\telse\n\t\troot[\"windowmanager\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\t__webpack_require__(9);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Make windowmanager global:\n\tif (typeof global !== 'undefined' && global) {\n\t  global.windowmanager = _global2.default;\n\t}\n\tif (typeof window !== 'undefined' && window) {\n\t  window.windowmanager = _global2.default;\n\t}\n\t\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tvar _index3 = _interopRequireDefault(_index2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* global VERSION */\n\tvar windowmanagerEventNames = ['window-create', 'window-close'];\n\t\n\t/**\r\n\t * A global variable exposed on windows to access the windowmanager-related API.\r\n\t * @namespace\r\n\t * @extends EventHandler\r\n\t * @property {String} version - version of windowmanager\r\n\t * @property {Object} runtime - contains runtime-specific info\r\n\t * @property {String} runtime.name - name of runtime (ie. Chrome, IE, OpenFin, Electron, ect)\r\n\t * @property {String} runtime.version\r\n\t * @property {Boolean} runtime.isBrowser - is this running in a browser\r\n\t * @property {Boolean} runtime.isElectron - is this running in Electron\r\n\t * @property {Boolean} runtime.isOpenFin - is this running in OpenFin\r\n\t * @property {Boolean} runtime.isDesktop - is this a desktop OS\r\n\t * @property {Boolean} runtime.isMobile - is this a mobile OS\r\n\t * @property {Boolean} runtime.isMain - is this the main/startup window (Electron doesn't have one atm)\r\n\t * @property {Window} Window\r\n\t * @property {geometry} geometry\r\n\t * @property {messagebus} messagebus - message bus for application\r\n\t */\n\tvar windowmanager = new _index.EventHandler(windowmanagerEventNames);\n\t\n\twindowmanager.version = (\"0.11.0\");\n\t// runtime is set in the respective runtime\n\twindowmanager.runtime = {\n\t    name: undefined,\n\t    version: undefined,\n\t    isBrowser: false,\n\t    isElectron: false,\n\t    isOpenFin: false,\n\t    isDesktop: false,\n\t    isMobile: false,\n\t    isMain: false\n\t};\n\t\n\t// Credit: http://stackoverflow.com/a/11381730\n\tif (typeof navigator !== 'undefined') {\n\t    /* eslint-disable max-len */\n\t    windowmanager.runtime.isMobile = function (a) {\n\t        return (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))\n\t        );\n\t    }(navigator.userAgent || navigator.vendor || window.opera);\n\t    /* eslint-enable max-len */\n\t    windowmanager.runtime.isDesktop = !windowmanager.isMobile;\n\t}\n\t\n\t// Add geometry to global:\n\twindowmanager.geometry = _index3.default;\n\t\n\t// messagebus is set in the respective runtime\n\t\n\texports.default = windowmanager;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _EventHandler = __webpack_require__(3);\n\t\n\tvar _EventHandler2 = _interopRequireDefault(_EventHandler);\n\t\n\tvar _SyncCallback = __webpack_require__(4);\n\t\n\tvar _SyncCallback2 = _interopRequireDefault(_SyncCallback);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar genUIDE7 = function () {\n\t    var lut = [];\n\t\n\t    for (var i = 0; i < 256; i += 1) {\n\t        lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t    }\n\t\n\t    return function () {\n\t        var d0 = Math.random() * 0xffffffff | 0;\n\t        var d1 = Math.random() * 0xffffffff | 0;\n\t        var d2 = Math.random() * 0xffffffff | 0;\n\t        var d3 = Math.random() * 0xffffffff | 0;\n\t\n\t        return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\n\t    };\n\t}();\n\t\n\tfunction getUniqueWindowName() {\n\t    return 'window' + genUIDE7() + new Date().getTime();\n\t};\n\t\n\texports.default = {\n\t    getUniqueWindowName: getUniqueWindowName,\n\t    EventHandler: _EventHandler2.default,\n\t    SyncCallback: _SyncCallback2.default\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// TODO: Use class, rather than prototype.\n\t\n\t/**\r\n\t * An EventHandler\r\n\t * @constructor\r\n\t * @alias EventHandler\r\n\t * @param {String[]} [acceptedEventHandlers=[]] - String of allowed events.\r\n\t */\n\tfunction EventHandler() {\n\t    var acceptedEventHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    this._eventListeners = {};\n\t    this._eventPipes = [];\n\t    // TODO: Look into making these special properties that can't be deleted?\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = acceptedEventHandlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var acceptedEventHandler = _step.value;\n\t\n\t            this._eventListeners[acceptedEventHandler] = [];\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t/**\r\n\t * @method\r\n\t * @param {String}\r\n\t * @param {callback}\r\n\t */\n\tEventHandler.prototype.on = function (eventNames, eventListener) {\n\t    eventNames = eventNames.toLowerCase().split(' ');\n\t\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\t\n\t    try {\n\t        for (var _iterator2 = eventNames[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var eventName = _step2.value;\n\t\n\t            // Check if this event can be subscribed to via this function:\n\t            if (this._eventListeners[eventName] === undefined) {\n\t                continue;\n\t            }\n\t\n\t            // Check if eventListener is a function:\n\t            if (!eventListener || typeof eventListener.constructor !== 'function') {\n\t                throw new Error('on requires argument \\'eventListener\\' of type Function');\n\t            }\n\t\n\t            // Check if eventListener is already added:\n\t            if (this._eventListeners[eventName].indexOf(eventListener) >= 0) {\n\t                continue;\n\t            }\n\t\n\t            // Add event listener:\n\t            this._eventListeners[eventName].push(eventListener);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                _iterator2.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {String}\r\n\t * @param {callback}\r\n\t */\n\tEventHandler.prototype.once = function (eventName, eventListener) {\n\t    function onceListener() {\n\t        this.off(eventName, onceListener);\n\t        eventListener.apply(this, arguments);\n\t    }\n\t    this.on(eventName, onceListener);\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {String}\r\n\t * @param {callback}\r\n\t */\n\tEventHandler.prototype.off = function (eventNames, eventListener) {\n\t    eventNames = eventNames.toLowerCase().split(' ');\n\t\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\t\n\t    try {\n\t        for (var _iterator3 = eventNames[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            var eventName = _step3.value;\n\t\n\t            // If event listeners don't exist, bail:\n\t            if (this._eventListeners[eventName] === undefined) {\n\t                return;\n\t            }\n\t\n\t            // Check if eventListener is a function:\n\t            if (!eventListener || typeof eventListener.constructor !== 'function') {\n\t                throw new Error('off requires argument \\'eventListener\\' of type Function');\n\t            }\n\t\n\t            // Remove event listener, if exists:\n\t            var index = this._eventListeners[eventName].indexOf(eventListener);\n\t\n\t            if (index >= 0) {\n\t                this._eventListeners[eventName].splice(index, 1);\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                _iterator3.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {String}\r\n\t */\n\tEventHandler.prototype.clearEvent = function (eventNames) {\n\t    eventNames = eventNames.toLowerCase();\n\t\n\t    var _iteratorNormalCompletion4 = true;\n\t    var _didIteratorError4 = false;\n\t    var _iteratorError4 = undefined;\n\t\n\t    try {\n\t        for (var _iterator4 = eventNames[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t            var eventName = _step4.value;\n\t\n\t            // If event listeners don't exist, bail:\n\t            if (this._eventListeners[eventName] === undefined) {\n\t                return;\n\t            }\n\t\n\t            this._eventListeners[eventName] = [];\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                _iterator4.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError4) {\n\t                throw _iteratorError4;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {String}\r\n\t * @param {...*} args - Arguments to pass to listeners\r\n\t * @returns {Boolean} true if all handlers return true, else false\r\n\t */\n\tEventHandler.prototype.emit = function (eventName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    eventName = eventName.toLowerCase();\n\t\n\t    // If event listeners don't exist, bail:\n\t    if (this._eventListeners[eventName] === undefined) {\n\t        return false;\n\t    }\n\t\n\t    var returnVal = true;\n\t\n\t    var _iteratorNormalCompletion5 = true;\n\t    var _didIteratorError5 = false;\n\t    var _iteratorError5 = undefined;\n\t\n\t    try {\n\t        for (var _iterator5 = this._eventListeners[eventName][Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t            var eventListener = _step5.value;\n\t\n\t            // Call listener with the 'this' context as the current window:\n\t            returnVal = returnVal && eventListener.apply(this, args) !== false;\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                _iterator5.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError5) {\n\t                throw _iteratorError5;\n\t            }\n\t        }\n\t    }\n\t\n\t    var _iteratorNormalCompletion6 = true;\n\t    var _didIteratorError6 = false;\n\t    var _iteratorError6 = undefined;\n\t\n\t    try {\n\t        for (var _iterator6 = this._eventPipes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t            var eventHandler = _step6.value;\n\t\n\t            // Call handler with the 'this' context as the current window:\n\t            returnVal = returnVal && eventHandler.emit.apply(eventHandler, arguments) !== false;\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                _iterator6.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError6) {\n\t                throw _iteratorError6;\n\t            }\n\t        }\n\t    }\n\t\n\t    return returnVal;\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {EventHandler}\r\n\t */\n\tEventHandler.prototype.addPipe = function (eventHandler) {\n\t    // Check if eventHandler is a EventHandler:\n\t    if (!eventHandler || !eventHandler.emit) {\n\t        throw new Error('addPipe requires argument \\'eventHandler\\' of type EventHandler');\n\t    }\n\t\n\t    // Check if eventHandler is already added:\n\t    if (this._eventPipes.indexOf(eventHandler) >= 0) {\n\t        return;\n\t    }\n\t\n\t    // Add event handler:\n\t    this._eventPipes.push(eventHandler);\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {EventHandler}\r\n\t */\n\tEventHandler.prototype.removePipe = function (eventHandler) {\n\t    // Check if eventHandler is a EventHandler:\n\t    if (!eventHandler || !eventHandler.emit) {\n\t        throw new Error('removePipe requires argument \\'eventHandler\\' of type EventHandler');\n\t    }\n\t\n\t    // Check if eventHandler is already added:\n\t    if (this._eventPipes.indexOf(eventHandler) >= 0) {\n\t        return;\n\t    }\n\t\n\t    // Remove eventHandler, if exists:\n\t    var index = this._eventPipes.indexOf(eventHandler);\n\t\n\t    if (index >= 0) {\n\t        this._eventPipes.splice(index, 1);\n\t    }\n\t};\n\t\n\texports.default = EventHandler;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tfunction SyncCallback(callback) {\n\t    if (!(this instanceof SyncCallback)) {\n\t        return new SyncCallback(callback);\n\t    }\n\t\n\t    this.callback = callback;\n\t    this.count = 0;\n\t}\n\t\n\tSyncCallback.prototype.ref = function (callback) {\n\t    var thisRef = this;\n\t\n\t    this.count += 1;\n\t    return function () {\n\t        if (callback) {\n\t            callback.apply(undefined, arguments);\n\t        }\n\t        thisRef._deref();\n\t    };\n\t};\n\t\n\tSyncCallback.prototype._deref = function () {\n\t    this.count -= 1;\n\t    if (this.count <= 0) {\n\t        this.callback();\n\t    }\n\t};\n\t\n\texports.default = SyncCallback;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Vector = __webpack_require__(6);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _BoundingBox = __webpack_require__(7);\n\t\n\tvar _BoundingBox2 = _interopRequireDefault(_BoundingBox);\n\t\n\tvar _CollisionMesh = __webpack_require__(8);\n\t\n\tvar _CollisionMesh2 = _interopRequireDefault(_CollisionMesh);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * A library to handler geometry calculations.\r\n\t * @namespace\r\n\t * @alias geometry\r\n\t * @property {BoundingBox}\r\n\t * @property {CollisionMesh}\r\n\t * @property {Position}\r\n\t * @property {Size}\r\n\t * @property {Vector}\r\n\t */\n\texports.default = {\n\t  BoundingBox: _BoundingBox2.default,\n\t  CollisionMesh: _CollisionMesh2.default,\n\t  /**\r\n\t   * A Position object. Alias of {@link Vector}.\r\n\t   * @class\r\n\t   * @alias Position\r\n\t   * @see {@link Vector} for further information.\r\n\t   */\n\t  Position: _Vector2.default,\n\t  /**\r\n\t   * A Size object. Alias of {@link Vector}.\r\n\t   * @class\r\n\t   * @alias Size\r\n\t   * @see {@link Vector} for further information.\r\n\t   */\n\t  Size: _Vector2.default,\n\t  Vector: _Vector2.default\n\t}; // TODO: Rewrite in class form, so can make use of get/set, and private.\n\t// TODO: Add asVector, asBoundingBox, asCollisionMesh to all classes (as a get),\n\t//       to easily coerce types!\n\t// TODO: Rewrite the classes to have more simplified functions (don't have complex\n\t//       functions that have very specific purposes).\n\t// TODO: Add proper argument checking! Not all methods have checks!\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _BoundingBox = __webpack_require__(7);\n\t\n\tvar _BoundingBox2 = _interopRequireDefault(_BoundingBox);\n\t\n\tvar _CollisionMesh = __webpack_require__(8);\n\t\n\tvar _CollisionMesh2 = _interopRequireDefault(_CollisionMesh);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * A Vector class.\r\n\t */\n\tvar Vector = function () {\n\t    /**\r\n\t     * @param {Number} left - The position of the vector's x-axis.\r\n\t     * @param {Number} top - The position of the vector's y-axis.\r\n\t     * @returns {Vector} An instance of Vector\r\n\t     */\n\t    function Vector(left, top) {\n\t        _classCallCheck(this, Vector);\n\t\n\t        var obj = left;\n\t\n\t        if (obj && obj.constructor !== Number) {\n\t            // new Vector(obj)\n\t            this.left = obj.left;\n\t            this.top = obj.top;\n\t        } else {\n\t            // new Vector(left, top)\n\t            this.left = left;\n\t            this.top = top;\n\t        }\n\t    }\n\t\n\t    /**\r\n\t     * Clone the current vector to a new object.\r\n\t     * @returns {Vector} A clone of this instance\r\n\t     */\n\t\n\t\n\t    _createClass(Vector, [{\n\t        key: 'clone',\n\t        value: function clone() {\n\t            return new Vector(this);\n\t        }\n\t\n\t        /**\r\n\t         * Checks if any property on `this` is NaN.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isNaN',\n\t        value: function (_isNaN) {\n\t            function isNaN() {\n\t                return _isNaN.apply(this, arguments);\n\t            }\n\t\n\t            isNaN.toString = function () {\n\t                return _isNaN.toString();\n\t            };\n\t\n\t            return isNaN;\n\t        }(function () {\n\t            return isNaN(this.left) || isNaN(this.top);\n\t        })\n\t\n\t        /**\r\n\t         * Resolve this object down to a {@link Vector} instance.\r\n\t         * Since this instance is already a vector, it returns itself.\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getVector',\n\t        value: function getVector() {\n\t            // We have this method, so any prototype in this script will return their position,\n\t            // and if they are one it will return itself.\n\t            // This simplifies code, and prevents having to do a ton of checks.\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Returns a BoundingBox instance version of this vector similar to:<br>\r\n\t         * ```javascript\r\n\t         * new BoundingBox(Vector.left, Vector.top, Vector.left, Vector.top)\r\n\t         * ```\r\n\t         * @returns {BoundingBox}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getBoundingBox',\n\t        value: function getBoundingBox() {\n\t            // We have this method, so any prototype in this script will return their position,\n\t            // and if they are one it will return itself.\n\t            // This simplifies code, and prevents having to do a ton of checks.\n\t            return new _BoundingBox2.default(this.left, this.top, this.left, this.top);\n\t        }\n\t\n\t        /**\r\n\t         * Returns a {@link CollisionMesh} instance version of this vector similar to:<br>\r\n\t         * ```javascript\r\n\t         * new CollisionMesh(Vector.getBoundingBox())\r\n\t         * ```\r\n\t         * @returns {CollisionMesh}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCollisionMesh',\n\t        value: function getCollisionMesh() {\n\t            return new _CollisionMesh2.default(this.getBoundingBox());\n\t        }\n\t\n\t        /**\r\n\t         * Returns the squared distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'distanceSquared',\n\t        value: function distanceSquared(other) {\n\t            var diff = other.subtract(this);\n\t\n\t            return diff.left * diff.left + diff.top * diff.top;\n\t        }\n\t\n\t        /**\r\n\t         * Returns the distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'distance',\n\t        value: function distance(other) {\n\t            return Math.sqrt(this.distanceSquared(other));\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this.left` to `other.left`, and sets `this.top` to `other.top`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'set',\n\t        value: function set(other) {\n\t            if (!other) {\n\t                throw new Error(\"set requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            this.left = other.left;\n\t            this.top = other.top;\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` to position at `left` and/or `top`.\r\n\t         * @param {Number} [left=null]\r\n\t         * @param {Number} [top=null]\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top) {\n\t            if (left && left.constructor === Number) {\n\t                this.left = left;\n\t            }\n\t            if (top && top.constructor === Number) {\n\t                this.top = top;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n\t         * @param {Number} [deltaLeft=null]\r\n\t         * @param {Number} [deltaTop=null]\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop) {\n\t            if (deltaLeft && deltaLeft.constructor === Number) {\n\t                this.left = deltaLeft;\n\t            }\n\t            if (deltaTop && deltaTop.constructor === Number) {\n\t                this.top = deltaTop;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this`'s properties if `other`'s is smaller.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setMin',\n\t        value: function setMin(other) {\n\t            if (!other) {\n\t                throw new Error(\"setMin requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            if (Math.abs(other.left) < Math.abs(this.left) || isNaN(this.left)) {\n\t                this.left = other.left;\n\t            }\n\t            if (Math.abs(other.top) < Math.abs(this.top) || isNaN(this.top)) {\n\t                this.top = other.top;\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this`'s properties if `other`'s is larger.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setMax',\n\t        value: function setMax(other) {\n\t            if (!other) {\n\t                throw new Error(\"setMax requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            if (Math.abs(other.left) > Math.abs(this.left) || isNaN(this.left)) {\n\t                this.left = other.left;\n\t            }\n\t            if (Math.abs(other.top) > Math.abs(this.top) || isNaN(this.top)) {\n\t                this.top = other.top;\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Add `other` to `this`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'add',\n\t        value: function add(other) {\n\t            if (!other) {\n\t                throw new Error(\"add requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            this.left += other.left;\n\t            this.top += other.top;\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'subtract',\n\t\n\t\n\t        /**\r\n\t         * Subtract `other` from `this`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t        value: function subtract(other) {\n\t            if (!other) {\n\t                throw new Error(\"subtract requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            this.left -= other.left;\n\t            this.top -= other.top;\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Vector;\n\t}();\n\t\n\texports.default = Vector;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // TODO: Utilize ES6 features (like for loops)\n\t\n\t\n\tvar _Vector = __webpack_require__(6);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _CollisionMesh = __webpack_require__(8);\n\t\n\tvar _CollisionMesh2 = _interopRequireDefault(_CollisionMesh);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Utility functions:\n\tfunction minAbs(min) {\n\t    var minAbs = Math.abs(min);\n\t\n\t    for (var _len = arguments.length, vals = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        vals[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = vals[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var val = _step.value;\n\t\n\t            var argAbs = Math.abs(val);\n\t\n\t            if (argAbs < minAbs) {\n\t                min = val;\n\t                minAbs = argAbs;\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    return {\n\t        min: min,\n\t        abs: minAbs\n\t    };\n\t}\n\t\n\t/**\r\n\t * A BoundingBox class.\r\n\t */\n\t\n\tvar BoundingBox = function () {\n\t    /**\r\n\t     * @param {Number} left - The left position of x-axis.\r\n\t     * @param {Number} top - The top position of y-axis.\r\n\t     * @param {Number} right - The right position of x-axis.\r\n\t     * @param {Number} bottom - The bottom position of y-axis.\r\n\t     */\n\t    function BoundingBox(left, top, right, bottom) {\n\t        _classCallCheck(this, BoundingBox);\n\t\n\t        var obj = left;\n\t\n\t        if (obj && obj.constructor !== Number) {\n\t            if (obj.getBoundingBox) {\n\t                obj = obj.getBoundingBox();\n\t            }\n\t            // new BoundingBox(obj)\n\t            this.left = obj.left;\n\t            this.top = obj.top;\n\t            this.right = obj.right;\n\t            this.bottom = obj.bottom;\n\t        } else {\n\t            // new BoundingBox(left, top, right, bottom)\n\t            this.left = left;\n\t            this.top = top;\n\t            this.right = right;\n\t            this.bottom = bottom;\n\t        }\n\t    }\n\t\n\t    /**\r\n\t     * Clone the current boundingbox to a new object.\r\n\t     * @returns {BoundingBox} A clone of this instance\r\n\t     */\n\t\n\t\n\t    _createClass(BoundingBox, [{\n\t        key: 'clone',\n\t        value: function clone() {\n\t            return new BoundingBox(this);\n\t        }\n\t\n\t        /**\r\n\t         * Checks if any property on `this` is NaN.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isNaN',\n\t        value: function (_isNaN) {\n\t            function isNaN() {\n\t                return _isNaN.apply(this, arguments);\n\t            }\n\t\n\t            isNaN.toString = function () {\n\t                return _isNaN.toString();\n\t            };\n\t\n\t            return isNaN;\n\t        }(function () {\n\t            return isNaN(this.left) || isNaN(this.top) || isNaN(this.right) || isNaN(this.bottom);\n\t        })\n\t\n\t        /**\r\n\t         * Returns the width of `this`.\r\n\t         * @returns {Number} width\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            return Math.abs(this.right - this.left);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the height of `this`.\r\n\t         * @returns {Number} height\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            return Math.abs(this.bottom - this.top);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the size of `this`.\r\n\t         * @returns {Vector} size\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            return new _Vector2.default(this.getWidth(), this.getHeight());\n\t        }\n\t\n\t        /**\r\n\t         * Returns the area of `this`.\r\n\t         * @returns {Number} area\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getArea',\n\t        value: function getArea() {\n\t            return this.getWidth() * this.getHeight();\n\t        }\n\t\n\t        /**\r\n\t         * Returns the position of `this`.\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            return new _Vector2.default(this.left, this.top);\n\t        }\n\t\n\t        /**\r\n\t         * Resolve this object down to a {@link BoundingBox} instance.\r\n\t         * Since this instance is already a boundingbox, it returns itself.\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getBoundingBox',\n\t        value: function getBoundingBox() {\n\t            // We have this method, so any prototype in this script will return their bounding box,\n\t            // and if they are one it will return itself.\n\t            // This simplifies code, and prevents having to do a ton of checks.\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Returns a {@link CollisionMesh} instance version of this boundingbox similar to:<br>\r\n\t         * ```javascript\r\n\t         * new CollisionMesh(BoundingBox)\r\n\t         * ```\r\n\t         * @returns {CollisionMesh}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCollisionMesh',\n\t        value: function getCollisionMesh() {\n\t            return new _CollisionMesh2.default(this);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the center position of `this`.\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCenterPosition',\n\t        value: function getCenterPosition() {\n\t            return new _Vector2.default(this.left + this.getWidth() / 2, this.top + this.getHeight() / 2);\n\t        }\n\t\n\t        /**\r\n\t         * Returns `this` subtract `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'difference',\n\t        value: function difference(other) {\n\t            if (!other) {\n\t                throw new Error(\"difference requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return new BoundingBox(this.left - other.left, this.top - other.top, this.right - other.right, this.bottom - other.bottom);\n\t        }\n\t\n\t        /**\r\n\t         * Returns a position, which if `this` is set to, `this` will be centered on `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCenteredOnPosition',\n\t        value: function getCenteredOnPosition(other) {\n\t            if (!other) {\n\t                throw new Error(\"getCenteredOnPosition requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return other.getCenterPosition().subtract(this.getCenterPosition().subtract(this.getPosition()));\n\t        }\n\t\n\t        /**\r\n\t         * Returns the intersection between `this` and `other`.\r\n\t         * This will return a {@link Vector} if they only intersect at a point.\r\n\t         * This will return a {@link BoundingBox} if they intersect over an area or line.\r\n\t         * This will return a undefined if they do not intersect.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Vector|BoundingBox|undefined} intersection object\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getIntersection',\n\t        value: function getIntersection(other) {\n\t            if (!other) {\n\t                throw new Error(\"getIntersection requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            var left = Math.max(this.left, other.left),\n\t                top = Math.max(this.top, other.top),\n\t                right = Math.min(this.right, other.right),\n\t                bottom = Math.min(this.bottom, other.bottom);\n\t\n\t            if (left === right && top === bottom) {\n\t                return new _Vector2.default(left, top);\n\t            } else if (left <= right && top <= bottom) {\n\t                return new BoundingBox(left, top, right, bottom);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Returns the squared distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number} squared distance\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getDistanceSquaredToPoint',\n\t        value: function getDistanceSquaredToPoint(other) {\n\t            other = other.getVector();\n\t            var cLeft = other.left <= this.left ? this.left : other.left >= this.right ? this.right : other.left;\n\t            var cTop = other.top <= this.top ? this.top : other.top >= this.bottom ? this.bottom : other.top;\n\t            var cPos = new _Vector2.default(cLeft, cTop);\n\t\n\t            return cPos.distanceSquared(other);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number} distance\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getDistanceToPoint',\n\t        value: function getDistanceToPoint(other) {\n\t            return Math.sqrt(this.getDistanceSquaredToPoint(other));\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this`'s properties to `other`'s properties.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'set',\n\t        value: function set(other) {\n\t            if (!other) {\n\t                throw new Error(\"set requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            this.left = other.left;\n\t            this.top = other.top;\n\t            this.right = other.right;\n\t            this.bottom = other.bottom;\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` to position at `left` and/or `top`.\r\n\t         * @param {Number} [left=null]\r\n\t         * @param {Number} [top=null]\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top) {\n\t            if (left && left.constructor === Number) {\n\t                this.right = left + (this.right - this.left);\n\t                this.left = left;\n\t            }\n\t            if (top && top.constructor === Number) {\n\t                this.bottom = top + (this.bottom - this.top);\n\t                this.top = top;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n\t         * @param {Number} [deltaLeft=null]\r\n\t         * @param {Number} [deltaTop=null]\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop) {\n\t            if (deltaLeft && deltaLeft.constructor === Number) {\n\t                this.left += deltaLeft;\n\t                this.right += deltaLeft;\n\t            }\n\t            if (deltaTop && deltaTop.constructor === Number) {\n\t                this.top += deltaTop;\n\t                this.bottom += deltaTop;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Resize `this` to size `width` and/or `height`, anchored at `anchor`.\r\n\t         * @param {Number} [width=null]\r\n\t         * @param {Number} [height=null]\r\n\t         * @param {String} [anchor='top-left'] supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\"\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, anchor) {\n\t            // NOTE: anchor supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\". By default it is \"top-left\".\n\t            // NOTE: anchor also supports being passed as a position. Allowing the resize anchor to be anywhere other than\n\t            //       the predefined strings.\n\t            var curSize = this.getSize();\n\t            var newSize = new _Vector2.default(width || curSize.left, height || curSize.top);\n\t\n\t            anchor = anchor || 'top-left';\n\t            if (typeof anchor === 'string' || anchor instanceof String) {\n\t                var anchorStr = anchor;\n\t\n\t                anchor = this.getPosition();\n\t                if (anchorStr.indexOf('right') >= 0) {\n\t                    anchor.left += curSize.left;\n\t                }\n\t                if (anchorStr.indexOf('bottom') >= 0) {\n\t                    anchor.top += curSize.top;\n\t                }\n\t            }\n\t\n\t            this.left += (anchor.left - this.left) * (curSize.left - newSize.left) / curSize.left;\n\t            this.right += (anchor.left - this.right) * (curSize.left - newSize.left) / curSize.left;\n\t            this.top += (anchor.top - this.top) * (curSize.top - newSize.top) / curSize.top;\n\t            this.bottom += (anchor.top - this.bottom) * (curSize.top - newSize.top) / curSize.top;\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` encapsulates `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isContains',\n\t        value: function isContains(other) {\n\t            if (!other) {\n\t                throw new Error(\"isContains requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return other.left >= this.left && other.right <= this.right && other.top >= this.top && other.bottom <= this.bottom;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` encapsulates at least one of `others`.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someContains',\n\t        value: function someContains(others) {\n\t            if (!others) {\n\t                throw new Error(\"someContains requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"someContains requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isContains(others[index])) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` touches an edge of `other`, but does not intersect area.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isTouching',\n\t        value: function isTouching(other) {\n\t            if (!other) {\n\t                throw new Error(\"isTouching requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return this.top <= other.bottom && this.bottom >= other.top && (this.left === other.right || this.right === other.left) || this.left <= other.right && this.right >= other.left && (this.top === other.bottom || this.bottom === other.top);\n\t        }\n\t\n\t        /**\r\n\t         * If `this` touches one of `others`, but does not intersect area, then this returns the `this` edge name.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {String|undefined} edge name\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getEdgeTouching',\n\t        value: function getEdgeTouching(others) {\n\t            if (!others) {\n\t                throw new Error(\"getEdgeTouching requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                others = [others];\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                var other = others[index].getBoundingBox();\n\t\n\t                if (this.top <= other.bottom && this.bottom >= other.top) {\n\t                    if (this.left === other.right) {\n\t                        return 'left';\n\t                    }\n\t                    if (this.right === other.left) {\n\t                        return 'right';\n\t                    }\n\t                }\n\t                if (this.left <= other.right && this.right >= other.left) {\n\t                    if (this.top === other.bottom) {\n\t                        return 'top';\n\t                    }\n\t                    if (this.bottom === other.top) {\n\t                        return 'bottom';\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * If `this` touches one of `others`, but does not intersect area, then this returns the `other` edge name.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {String|undefined} edge name\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getOtherEdgeTouching',\n\t        value: function getOtherEdgeTouching(others) {\n\t            if (!others) {\n\t                throw new Error(\"getOtherEdgeTouching requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                others = [others];\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                var other = others[index].getBoundingBox();\n\t\n\t                if (this.top <= other.bottom && this.bottom >= other.top) {\n\t                    if (this.left === other.right) {\n\t                        return 'right';\n\t                    }\n\t                    if (this.right === other.left) {\n\t                        return 'left';\n\t                    }\n\t                }\n\t                if (this.left <= other.right && this.right >= other.left) {\n\t                    if (this.top === other.bottom) {\n\t                        return 'bottom';\n\t                    }\n\t                    if (this.bottom === other.top) {\n\t                        return 'top';\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Determines which edges of `this` is closest to `other`, returns all edges in sorted order by distance.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {String[]} edge names sorted from closest to furthest\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getEdgeClosestOrder',\n\t        value: function getEdgeClosestOrder(other) {\n\t            if (!other) {\n\t                throw new Error(\"getEdgeClosest requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t            var centerPos = this.getCenterPosition();\n\t            var dis = [];\n\t\n\t            dis.push({\n\t                'edge': 'left',\n\t                dis: other.getDistanceSquaredToPoint(this.left, centerPos.top)\n\t            });\n\t            dis.push({\n\t                'edge': 'top',\n\t                dis: other.getDistanceSquaredToPoint(centerPos.left, this.top)\n\t            });\n\t            dis.push({\n\t                'edge': 'right',\n\t                dis: other.getDistanceSquaredToPoint(this.right, centerPos.top)\n\t            });\n\t            dis.push({\n\t                'edge': 'bottom',\n\t                dis: other.getDistanceSquaredToPoint(centerPos.left, this.bottom)\n\t            });\n\t            dis.sort(function (a, b) {\n\t                return a.dis - b.dis;\n\t            });\n\t\n\t            return dis.map(function (dis) {\n\t                return dis.edge;\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Determines which `this` edge is closest to `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {String} edge name\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getEdgeClosest',\n\t        value: function getEdgeClosest(other) {\n\t            var edges = this.getEdgeClosestOrder(other);\n\t\n\t            return edges[0];\n\t        }\n\t\n\t        /**\r\n\t         * Returns a vector representing the delta position to add to `this` to snap to `other`.<br>\r\n\t         * Note: `snapDelta` may contain `NaN` for `left` or `right`\r\n\t         * @param {BoundingBox}\r\n\t         * @param {Number} [snapDistance=5] max distance to move `this`\r\n\t         * @returns {Vector} snapDelta\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getSnapDelta',\n\t        value: function getSnapDelta(other, snapDistance) {\n\t            if (!other) {\n\t                throw new Error(\"getSnapDelta requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t            snapDistance = snapDistance || 5;\n\t\n\t            var snapDelta = new _Vector2.default(NaN, NaN);\n\t\n\t            if (this.top <= other.bottom && this.bottom >= other.top) {\n\t                // Handle x-snap:\n\t                var leftRightDis = minAbs(other.left - this.right, other.right - this.left);\n\t\n\t                if (leftRightDis.abs <= snapDistance) {\n\t                    // this.LeftRightSnapTo(other)\n\t                    snapDelta.left = leftRightDis.min;\n\t\n\t                    // Handle y-subsnap:\n\t                    var topBottomDis = minAbs(other.top - this.top, other.bottom - this.bottom);\n\t\n\t                    if (topBottomDis.abs <= snapDistance) {\n\t                        // this.TopBottomSubSnapTo(other)\n\t                        snapDelta.top = topBottomDis.min;\n\t                    }\n\t                }\n\t            } else if (this.left <= other.right && this.right >= other.left) {\n\t                // Handle y-snap:\n\t                var _topBottomDis = minAbs(other.top - this.bottom, other.bottom - this.top);\n\t\n\t                if (_topBottomDis.abs <= snapDistance) {\n\t                    // this.TopBottomSnapTo(other)\n\t                    snapDelta.top = _topBottomDis.min;\n\t\n\t                    // Handle x-subsnap:\n\t                    var _leftRightDis = minAbs(other.left - this.left, other.right - this.right);\n\t\n\t                    if (_leftRightDis.abs <= snapDistance) {\n\t                        // this.LeftRightSubSnapTo(other)\n\t                        snapDelta.left = _leftRightDis.min;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return snapDelta;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` touches an edge of one of `others`, but does not intersect area.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someTouching',\n\t        value: function someTouching(others) {\n\t            if (!others) {\n\t                throw new Error(\"someTouching requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"someTouching requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isTouching(others[index])) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` intersects an area of `others`, not an edge.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isColliding',\n\t        value: function isColliding(other) {\n\t            if (!other) {\n\t                throw new Error(\"isColliding requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` intersects an area of one of `others`, not an edge.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someColliding',\n\t        value: function someColliding(others) {\n\t            if (!others) {\n\t                throw new Error(\"someColliding requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"someColliding requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isColliding(others[index])) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Returns which of `other` that `this` intersects an area of, not an edge.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {BoundingBox|undefined}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getColliding',\n\t        value: function getColliding(others) {\n\t            if (!others) {\n\t                throw new Error(\"getColliding requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"getColliding requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isColliding(others[index])) {\n\t                    return others[index];\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return BoundingBox;\n\t}();\n\t\n\texports.default = BoundingBox;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Vector = __webpack_require__(6);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _BoundingBox = __webpack_require__(7);\n\t\n\tvar _BoundingBox2 = _interopRequireDefault(_BoundingBox);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * A CollisionMesh class.\r\n\t */\n\tvar CollisionMesh = function () {\n\t    /**\r\n\t     * @param {BoundingBox[]} boxes - An array of objects thatg resolve to BoundingBox.\r\n\t     */\n\t    function CollisionMesh(boxes) {\n\t        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t        _classCallCheck(this, CollisionMesh);\n\t\n\t        if (!boxes) {\n\t            throw new Error('CollisionMesh constructor requires argument \\'boxes\\'');\n\t        }\n\t        if (boxes.constructor !== Array) {\n\t            boxes = [boxes];\n\t        }\n\t        this.boxes = [];\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = boxes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var box = _step.value;\n\t\n\t                if (box.constructor === _BoundingBox2.default) {\n\t                    this.boxes.push(box);\n\t                } else if (box.constructor === CollisionMesh) {\n\t                    this.boxes = this.boxes.concat(box.boxes);\n\t                } else {\n\t                    this.boxes = this.boxes.concat(box.getCollisionMesh(opts).boxes);\n\t                }\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\r\n\t     * Clone the current collisionmesh to a new object.\r\n\t     * @returns {CollisionMesh} A clone of this instance\r\n\t     */\n\t\n\t\n\t    _createClass(CollisionMesh, [{\n\t        key: 'clone',\n\t        value: function clone() {\n\t            var boxes = new Array(this.boxes.length);\n\t\n\t            for (var index = 0; index < this.boxes.length; index += 1) {\n\t                boxes[index] = this.boxes[index].clone();\n\t            }\n\t\n\t            return new CollisionMesh(boxes);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the width of `this`.\r\n\t         * @returns {Number} width\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            if (this.boxes.length === 0) {\n\t                return 0;\n\t            }\n\t            var left = this.boxes[0].left;\n\t            var right = this.boxes[0].right;\n\t\n\t            for (var index = 1; index < this.boxes.length; index += 1) {\n\t                // This assumes left is least, and right is most in terms of value:\n\t                left = Math.min(left, this.boxes[index].left);\n\t                right = Math.max(right, this.boxes[index].right);\n\t            }\n\t\n\t            return right - left;\n\t        }\n\t\n\t        /**\r\n\t         * Returns the height of `this`.\r\n\t         * @returns {Number} height\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            if (this.boxes.length === 0) {\n\t                return 0;\n\t            }\n\t\n\t            var top = this.boxes[0].top;\n\t            var bottom = this.boxes[0].bottom;\n\t\n\t            for (var index = 1; index < this.boxes.length; index += 1) {\n\t                // This assumes top is least, and bottom is most in terms of value:\n\t                top = Math.min(top, this.boxes[index].top);\n\t                bottom = Math.max(bottom, this.boxes[index].bottom);\n\t            }\n\t\n\t            return bottom - top;\n\t        }\n\t\n\t        /**\r\n\t         * Returns the size of `this`.\r\n\t         * @returns {Vector} size\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            return this.getBoundingBox().getSize();\n\t        }\n\t\n\t        /**\r\n\t         * Returns the position of `this`.\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            return this.getBoundingBox().getPosition();\n\t        }\n\t\n\t        /**\r\n\t         * Returns a BoundingBox instance version of this collisionmesh, which encapsulates all of it's internal boxes.\r\n\t         * @returns {BoundingBox}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getBoundingBox',\n\t        value: function getBoundingBox() {\n\t            if (this.boxes.length === 0) {\n\t                return new _BoundingBox2.default(NaN, NaN, NaN, NaN);\n\t            }\n\t\n\t            var box = this.boxes[0].clone();\n\t\n\t            for (var index = 1; index < this.boxes.length; index += 1) {\n\t                box.left = Math.min(box.left, this.boxes[index].left);\n\t                box.top = Math.min(box.top, this.boxes[index].top);\n\t                box.right = Math.max(box.right, this.boxes[index].right);\n\t                box.bottom = Math.max(box.bottom, this.boxes[index].bottom);\n\t            }\n\t\n\t            return box;\n\t        }\n\t\n\t        /**\r\n\t         * Resolve this object down to a {@link CollisionMesh} instance.\r\n\t         * Since this instance is already a collisionmesh, it returns itself.\r\n\t         * @returns {CollisionMesh} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCollisionMesh',\n\t        value: function getCollisionMesh() {\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` to position at `left` and/or `top`.\r\n\t         * @param {Number} [left=null]\r\n\t         * @param {Number} [top=null]\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top) {\n\t            var newPosition = new _Vector2.default(left, top);\n\t\n\t            this.moveBy(newPosition.subtract(this.getPosition()));\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n\t         * @param {Number} [deltaLeft=null]\r\n\t         * @param {Number} [deltaTop=null]\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(left, top) {\n\t            var newPosition = new _Vector2.default(left || 0, top || 0);\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.boxes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var box = _step2.value;\n\t\n\t                    box.moveBy(newPosition);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` encapsulates all of `other`.\r\n\t         * @param {CollisionMesh|BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isContains',\n\t        value: function isContains(other) {\n\t            if (!other) {\n\t                throw new Error('isContains requires argument \\'other\\'');\n\t            }\n\t            other = other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh();\n\t\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = other.boxes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var otherBox = _step3.value;\n\t\n\t                    var contained = false;\n\t\n\t                    var _iteratorNormalCompletion4 = true;\n\t                    var _didIteratorError4 = false;\n\t                    var _iteratorError4 = undefined;\n\t\n\t                    try {\n\t                        for (var _iterator4 = this.boxes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                            var thisBox = _step4.value;\n\t\n\t                            contained |= thisBox.isContains(otherBox);\n\t                        }\n\t                    } catch (err) {\n\t                        _didIteratorError4 = true;\n\t                        _iteratorError4 = err;\n\t                    } finally {\n\t                        try {\n\t                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                                _iterator4.return();\n\t                            }\n\t                        } finally {\n\t                            if (_didIteratorError4) {\n\t                                throw _iteratorError4;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    if (!contained) {\n\t                        return false;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return true;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` encapsulates at least one of `other`.\r\n\t         * @param {CollisionMesh|BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someContains',\n\t        value: function someContains(other) {\n\t            if (!other) {\n\t                throw new Error('someContains requires argument \\'other\\'');\n\t            }\n\t            other = other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh();\n\t\n\t            var _iteratorNormalCompletion5 = true;\n\t            var _didIteratorError5 = false;\n\t            var _iteratorError5 = undefined;\n\t\n\t            try {\n\t                for (var _iterator5 = this.boxes[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                    var box = _step5.value;\n\t\n\t                    if (box.someContains(other.boxes)) {\n\t                        return true;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError5 = true;\n\t                _iteratorError5 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                        _iterator5.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError5) {\n\t                        throw _iteratorError5;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` touches an edge of `other`, but does not intersect area.\r\n\t         * @param {CollisionMesh|BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isTouching',\n\t        value: function isTouching(other) {\n\t            if (!other) {\n\t                throw new Error('isTouching requires argument \\'other\\'');\n\t            }\n\t            other = other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh();\n\t\n\t            var _iteratorNormalCompletion6 = true;\n\t            var _didIteratorError6 = false;\n\t            var _iteratorError6 = undefined;\n\t\n\t            try {\n\t                for (var _iterator6 = this.boxes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t                    var box = _step6.value;\n\t\n\t                    if (box.someTouching(other.boxes)) {\n\t                        return true;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError6 = true;\n\t                _iteratorError6 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                        _iterator6.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError6) {\n\t                        throw _iteratorError6;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` touches an edge of one of `others`, but does not intersect area.\r\n\t         * @param {CollisionMesh[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someTouching',\n\t        value: function someTouching(others) {\n\t            if (!others) {\n\t                throw new Error('someTouching requires argument \\'others\\'');\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error('someTouching requires argument \\'others\\' to resolve to type Array');\n\t            }\n\t\n\t            var _iteratorNormalCompletion7 = true;\n\t            var _didIteratorError7 = false;\n\t            var _iteratorError7 = undefined;\n\t\n\t            try {\n\t                for (var _iterator7 = others[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t                    var other = _step7.value;\n\t\n\t                    if (this.isTouching(other)) {\n\t                        return true;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError7 = true;\n\t                _iteratorError7 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                        _iterator7.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError7) {\n\t                        throw _iteratorError7;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` intersects an area of `other`, not an edge.\r\n\t         * @param {CollisionMesh|BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isColliding',\n\t        value: function isColliding(other) {\n\t            if (!other) {\n\t                throw new Error('isColliding requires argument \\'other\\'');\n\t            }\n\t            other = other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh();\n\t\n\t            var _iteratorNormalCompletion8 = true;\n\t            var _didIteratorError8 = false;\n\t            var _iteratorError8 = undefined;\n\t\n\t            try {\n\t                for (var _iterator8 = this.boxes[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t                    var box = _step8.value;\n\t\n\t                    if (box.someColliding(other.boxes)) {\n\t                        return true;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError8 = true;\n\t                _iteratorError8 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t                        _iterator8.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError8) {\n\t                        throw _iteratorError8;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` intersects an area of one of `others`, not an edge.\r\n\t         * @param {CollisionMesh[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someColliding',\n\t        value: function someColliding(others) {\n\t            if (!others) {\n\t                throw new Error('someColliding requires argument \\'others\\'');\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error('someColliding requires argument \\'others\\' to resolve to type Array');\n\t            }\n\t\n\t            var _iteratorNormalCompletion9 = true;\n\t            var _didIteratorError9 = false;\n\t            var _iteratorError9 = undefined;\n\t\n\t            try {\n\t                for (var _iterator9 = others[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t                    var other = _step9.value;\n\t                    var _iteratorNormalCompletion10 = true;\n\t                    var _didIteratorError10 = false;\n\t                    var _iteratorError10 = undefined;\n\t\n\t                    try {\n\t                        for (var _iterator10 = this.boxes[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t                            var box = _step10.value;\n\t\n\t                            if (box.isColliding(other)) {\n\t                                return true;\n\t                            }\n\t                        }\n\t                    } catch (err) {\n\t                        _didIteratorError10 = true;\n\t                        _iteratorError10 = err;\n\t                    } finally {\n\t                        try {\n\t                            if (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t                                _iterator10.return();\n\t                            }\n\t                        } finally {\n\t                            if (_didIteratorError10) {\n\t                                throw _iteratorError10;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError9 = true;\n\t                _iteratorError9 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t                        _iterator9.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError9) {\n\t                        throw _iteratorError9;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Returns which box of `other` that `this` intersects an area of, not an edge.\r\n\t         * @param {CollisionMesh|BoundingBox[]}\r\n\t         * @returns {BoundingBox|undefined}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getColliding',\n\t        value: function getColliding(other) {\n\t            if (!other) {\n\t                throw new Error('getColliding requires argument \\'other\\'');\n\t            }\n\t            other = other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh();\n\t\n\t            var _iteratorNormalCompletion11 = true;\n\t            var _didIteratorError11 = false;\n\t            var _iteratorError11 = undefined;\n\t\n\t            try {\n\t                for (var _iterator11 = this.boxes[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t                    var box = _step11.value;\n\t\n\t                    var collided = box.getColliding(other.boxes);\n\t\n\t                    if (collided) {\n\t                        return collided;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError11 = true;\n\t                _iteratorError11 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t                        _iterator11.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError11) {\n\t                        throw _iteratorError11;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return CollisionMesh;\n\t}();\n\t\n\texports.default = CollisionMesh;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t__webpack_require__(10);\n\t\n\t// TODO: Add runtime checks here for OpenFin and Electron\n\tvar runtime = void 0; /* global fin */\n\t\n\t\n\tif (typeof process !== 'undefined' && process && process.versions && process.versions.electron || typeof window !== 'undefined' && window && window.nodeRequire && window.nodeRequire.runtime) {\n\t    // We are running in an Electron Runtime:\n\t    runtime = __webpack_require__(11);\n\t} else if (typeof fin !== 'undefined' && fin && fin.desktop && fin.desktop.main) {\n\t    // We are running in an OpenFin Runtime:\n\t    runtime = __webpack_require__(18);\n\t} else {\n\t    // We are running in an Browser Runtime:\n\t    runtime = __webpack_require__(21);\n\t}\n\t\n\texports.default = runtime;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar callbacks = [];\n\tvar isReady = false;\n\t\n\t/**\r\n\t * Executes callback when windowmanager is ready.\r\n\t * @memberof windowmanager\r\n\t * @method\r\n\t * @param {callback}\r\n\t */\n\t_global2.default.onReady = function (callback) {\n\t    // Check if callback is not a function:\n\t    if (!(callback && callback.constructor && callback.call && callback.apply)) {\n\t        throw new Error('onReady expects a function passed as the callback argument!');\n\t    }\n\t\n\t    // Check if already ready:\n\t    if (isReady) {\n\t        callback();\n\t    }\n\t\n\t    // Check to see if callback is already in callbacks:\n\t    if (callbacks.indexOf(callback) >= 0) {\n\t        return;\n\t    }\n\t\n\t    callbacks.push(callback);\n\t};\n\t\n\t/**\r\n\t * Returns if windowmanager is ready.\r\n\t * @memberof windowmanager\r\n\t * @method\r\n\t * @returns {Boolean}\r\n\t */\n\t_global2.default.isReady = function () {\n\t    return isReady;\n\t};\n\t\n\texports.default = new _index.SyncCallback(function () {\n\t    isReady = true;\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = callbacks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var callback = _step.value;\n\t            callback();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    callbacks = [];\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Setup windowmanager runtime variables for Electron\n\t// TODO: Determine if renderer should be setup using the startup script, and have renderer be a NOOP\n\t\n\tif (_global2.default._isNode) {\n\t    // We are running in an Electron's main script:\n\t    __webpack_require__(14);\n\t} else if (_global2.default._isRenderer) {\n\t    // We are running in an Electron renderer:\n\t    __webpack_require__(16);\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _require2 = __webpack_require__(13);\n\t\n\tvar _require3 = _interopRequireDefault(_require2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_global2.default._isNode = false;\n\t_global2.default._isStartup = false;\n\t_global2.default._isRenderer = false;\n\t_global2.default.runtime.name = 'Electron';\n\t_global2.default.runtime.version = undefined;\n\t_global2.default.runtime.isElectron = true;\n\t\n\t// Determine if this is node or renderer:\n\t// TODO: Clean up the following code to clearly identify the three potential states: node, startup, renderer\n\tif (typeof global !== 'undefined' && global) {\n\t    // We are running in an Electron Window Backend's Runtime:\n\t    var _nodeRequire = (0, _require3.default)('electron'),\n\t        BrowserWindow = _nodeRequire.BrowserWindow;\n\t\n\t    // The following check works because BrowserWindow is not exposed to the window scripts:\n\t\n\t\n\t    _global2.default._isNode = BrowserWindow != null;\n\t    _global2.default._isStartup = !_global2.default._isNode;\n\t    _global2.default.runtime.version = global.process.versions.electron;\n\t\n\t    // If is a window startup script:\n\t    if (_global2.default._isStartup) {\n\t        (function () {\n\t            var _require = _require3.default;\n\t\n\t            _require.runtime = _global2.default.runtime;\n\t            _require.workingDir = _require('path').dirname(_require.main.filename);\n\t            _require.windowmanagerPath = __filename; // Used so new windows know where to load windowmanager from.\n\t            global.nodeRequire = _require; // Used so windowmanager in a window can access electron.\n\t            // TODO: Determine if window can be set directly here.\n\t\n\t            process.once('loaded', function () {\n\t                // TODO: Is this needed?\n\t                global.nodeRequire = _require;\n\t            });\n\t        })();\n\t    }\n\t} else if (typeof window !== 'undefined' && window) {\n\t    _global2.default._isRenderer = true;\n\t\n\t    if (window.nodeRequire != null) {\n\t        // We are running in an Electron Window's Runtime:\n\t        _global2.default.runtime = window.nodeRequire.runtime;\n\t        _global2.default._windows = new Map();\n\t    }\n\t}\n\t\n\t// This is used to store info across windows:\n\t// Everything on here gets exported as windowmanager.\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// Exposes node require\n\texports.default = eval('typeof require !== \\'undefined\\' && require'); // eslint-disable-line no-eval\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\t__webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Setup window backend\n\t\n\t// TODO: Make scalejs.windowmanager the main.js script for Electron. Load the config.json\n\t\n\t_ready2.default._deref();\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _require = __webpack_require__(13);\n\t\n\tvar _require2 = _interopRequireDefault(_require);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _nodeRequire = (0, _require2.default)('electron'),\n\t    BrowserWindow = _nodeRequire.BrowserWindow;\n\t\n\t// TODO: Give the node backend access to windowmanager Window-like functionality\n\t// This is Electron's main process:\n\t\n\t\n\tvar _windowmanager$geomet = _global2.default.geometry,\n\t    Vector = _windowmanager$geomet.Vector,\n\t    BoundingBox = _windowmanager$geomet.BoundingBox;\n\t\n\t// TODO: Solve event syncing between windows\n\t\n\tBrowserWindow.prototype._notifyReady = function () {\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = BrowserWindow.getAllWindows()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var other = _step.value;\n\t\n\t            other.webContents.send('window-create', this.id);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._ensureDockSystem = function () {\n\t    var _this = this;\n\t\n\t    // Make sure docked group exists:\n\t    if (this._dockedGroup === undefined) {\n\t        (function () {\n\t            _this._dockedGroup = [_this];\n\t\n\t            _this.on('closed', function () {\n\t                // Clean up the dock system when this window closes:\n\t                this.undock();\n\t            });\n\t\n\t            _this.on('maximize', function () {\n\t                this.undock(); // TODO: Support changing size when docked.\n\t            });\n\t\n\t            _this.on('minimize', function () {\n\t                this._dockMinimize();\n\t            });\n\t\n\t            _this.on('restore', function () {\n\t                var _iteratorNormalCompletion2 = true;\n\t                var _didIteratorError2 = false;\n\t                var _iteratorError2 = undefined;\n\t\n\t                try {\n\t                    for (var _iterator2 = this._dockedGroup[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                        var other = _step2.value;\n\t\n\t                        if (other !== this) {\n\t                            other.restore();\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError2 = true;\n\t                    _iteratorError2 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                            _iterator2.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError2) {\n\t                            throw _iteratorError2;\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t\n\t            var lastBounds = _this.getBounds();\n\t\n\t            _this.on('move', function () {\n\t                var newBounds = this.getBounds();\n\t\n\t                // this._dockMoveTo(newBounds.x, newBounds.y, [lastBounds.x, lastBounds.y]);\n\t                lastBounds = newBounds;\n\t            });\n\t\n\t            _this.on('resize', function () {\n\t                var newBounds = this.getBounds();\n\t\n\t                if (newBounds.width !== lastBounds.width || newBounds.height !== lastBounds.height) {\n\t                    this.undock(); // TODO: Support changing size when docked.\n\t                }\n\t                // TODO: Handle resize positions of other docked windows\n\t                //       This requires reworking how windows are docked/connected\n\t                //       (they must be docked to edges of windows, not the windows themselves)\n\t                /* for (let index = 0; index < this._dockedGroup.length; index += 1) {\r\n\t                    const other = this._dockedGroup[index];\r\n\t                      if (other !== this) {\r\n\t                        other.setPosition()\r\n\t                    }\r\n\t                }*/\n\t\n\t                lastBounds = newBounds;\n\t            });\n\t        })();\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype.dock = function (otherID) {\n\t    this._ensureDockSystem();\n\t\n\t    // Resolve otherID, and fail if otherID doesn't exist.\n\t    var other = BrowserWindow.fromId(otherID);\n\t\n\t    if (other === undefined) {\n\t        return;\n\t    } // Failed to find other. TODO: Return error\n\t\n\t    // If other is already in the group, return:\n\t    if (this._dockedGroup.indexOf(other) >= 0) {\n\t        return;\n\t    }\n\t\n\t    // Make sure docked group exists:\n\t    other._ensureDockSystem();\n\t\n\t    // Loop through all windows in otherGroup and add them to this's group:\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\t\n\t    try {\n\t        for (var _iterator3 = other._dockedGroup[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            var otherWin = _step3.value;\n\t\n\t            this._dockedGroup.push(otherWin);\n\t            // Sharing the array between window objects makes it easier to manage:\n\t            otherWin._dockedGroup = this._dockedGroup;\n\t        }\n\t\n\t        // TODO: Check if otherGroup is touching\n\t    } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                _iterator3.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype.undock = function () {\n\t    this._ensureDockSystem();\n\t\n\t    // Check to see if window is already undocked:\n\t    if (this._dockedGroup.length === 1) {\n\t        return;\n\t    }\n\t\n\t    // Undock this:\n\t    this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n\t    this._dockedGroup = [this];\n\t\n\t    // TODO: Redock those still touching, EXCEPT 'this'.\n\t};\n\t\n\tBrowserWindow.prototype._dockFocus = function () {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion4 = true;\n\t    var _didIteratorError4 = false;\n\t    var _iteratorError4 = undefined;\n\t\n\t    try {\n\t        for (var _iterator4 = this._dockedGroup[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t            var window = _step4.value;\n\t\n\t            if (window !== this) {\n\t                window.setAlwaysOnTop(true);\n\t                window.setAlwaysOnTop(false);\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                _iterator4.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError4) {\n\t                throw _iteratorError4;\n\t            }\n\t        }\n\t    }\n\t\n\t    this.setAlwaysOnTop(true);\n\t    this.setAlwaysOnTop(false);\n\t};\n\t\n\tBrowserWindow.prototype._dragStart = function () {\n\t    // if (!this.emit('drag-start')) { return; } // Allow preventing drag\n\t    this._ensureDockSystem();\n\t\n\t    this.restore();\n\t\n\t    var _iteratorNormalCompletion5 = true;\n\t    var _didIteratorError5 = false;\n\t    var _iteratorError5 = undefined;\n\t\n\t    try {\n\t        for (var _iterator5 = this._dockedGroup[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t            var window = _step5.value;\n\t\n\t            window._dragStartPos = window.getPosition();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                _iterator5.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError5) {\n\t                throw _iteratorError5;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._getBounds = function () {\n\t    var bounds = this.getBounds();\n\t\n\t    return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\n\t};\n\t\n\tBrowserWindow.prototype._dragBy = function (deltaLeft, deltaTop) {\n\t    this._ensureDockSystem();\n\t\n\t    // Perform Snap:\n\t    var thisBounds = this._getBounds().moveTo(this._dragStartPos[0] + deltaLeft, this._dragStartPos[1] + deltaTop);\n\t    var snapDelta = new Vector(NaN, NaN);\n\t\n\t    var _iteratorNormalCompletion6 = true;\n\t    var _didIteratorError6 = false;\n\t    var _iteratorError6 = undefined;\n\t\n\t    try {\n\t        for (var _iterator6 = BrowserWindow.getAllWindows()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t            var other = _step6.value;\n\t\n\t            if (other._dockedGroup !== this._dockedGroup) {\n\t                snapDelta.setMin(thisBounds.getSnapDelta(other._getBounds()));\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                _iterator6.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError6) {\n\t                throw _iteratorError6;\n\t            }\n\t        }\n\t    }\n\t\n\t    deltaLeft += snapDelta.left || 0;\n\t    deltaTop += snapDelta.top || 0;\n\t\n\t    var _iteratorNormalCompletion7 = true;\n\t    var _didIteratorError7 = false;\n\t    var _iteratorError7 = undefined;\n\t\n\t    try {\n\t        for (var _iterator7 = this._dockedGroup[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t            var _other = _step7.value;\n\t\n\t            var pos = _other._dragStartPos;\n\t\n\t            // If other doesn't have a drag position, start it:\n\t            if (pos === undefined) {\n\t                pos = _other._dragStartPos = _other.getPosition();\n\t                pos[0] -= deltaLeft;\n\t                pos[1] -= deltaTop;\n\t            }\n\t\n\t            _other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError7 = true;\n\t        _iteratorError7 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                _iterator7.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError7) {\n\t                throw _iteratorError7;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dragStop = function () {\n\t    this._ensureDockSystem();\n\t\n\t    // Dock to those it snapped to:\n\t    var thisBounds = this._getBounds();\n\t\n\t    var _iteratorNormalCompletion8 = true;\n\t    var _didIteratorError8 = false;\n\t    var _iteratorError8 = undefined;\n\t\n\t    try {\n\t        for (var _iterator8 = BrowserWindow.getAllWindows()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t            var other = _step8.value;\n\t\n\t            if (thisBounds.isTouching(other._getBounds())) {\n\t                this.dock(other.id);\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError8 = true;\n\t        _iteratorError8 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t                _iterator8.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError8) {\n\t                throw _iteratorError8;\n\t            }\n\t        }\n\t    }\n\t\n\t    var _iteratorNormalCompletion9 = true;\n\t    var _didIteratorError9 = false;\n\t    var _iteratorError9 = undefined;\n\t\n\t    try {\n\t        for (var _iterator9 = this._dockedGroup[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t            var window = _step9.value;\n\t\n\t            delete window._dragStartPos;\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError9 = true;\n\t        _iteratorError9 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t                _iterator9.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError9) {\n\t                throw _iteratorError9;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockMoveTo = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var oldPos = this.getPosition();\n\t    var deltaLeft = left - oldPos[0];\n\t    var deltaTop = top - oldPos[1];\n\t\n\t    var _iteratorNormalCompletion10 = true;\n\t    var _didIteratorError10 = false;\n\t    var _iteratorError10 = undefined;\n\t\n\t    try {\n\t        for (var _iterator10 = this._dockedGroup[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t            var other = _step10.value;\n\t\n\t            var pos = other.getPosition();\n\t\n\t            other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError10 = true;\n\t        _iteratorError10 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t                _iterator10.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError10) {\n\t                throw _iteratorError10;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockMinimize = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion11 = true;\n\t    var _didIteratorError11 = false;\n\t    var _iteratorError11 = undefined;\n\t\n\t    try {\n\t        for (var _iterator11 = this._dockedGroup[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t            var window = _step11.value;\n\t\n\t            window.minimize();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError11 = true;\n\t        _iteratorError11 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t                _iterator11.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError11) {\n\t                throw _iteratorError11;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockHide = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion12 = true;\n\t    var _didIteratorError12 = false;\n\t    var _iteratorError12 = undefined;\n\t\n\t    try {\n\t        for (var _iterator12 = this._dockedGroup[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t            var window = _step12.value;\n\t\n\t            window.hide();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError12 = true;\n\t        _iteratorError12 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t                _iterator12.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError12) {\n\t                throw _iteratorError12;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockShow = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion13 = true;\n\t    var _didIteratorError13 = false;\n\t    var _iteratorError13 = undefined;\n\t\n\t    try {\n\t        for (var _iterator13 = this._dockedGroup[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t            var window = _step13.value;\n\t\n\t            window.show();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError13 = true;\n\t        _iteratorError13 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t                _iterator13.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError13) {\n\t                throw _iteratorError13;\n\t            }\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _Window = __webpack_require__(17);\n\t\n\tvar _Window2 = _interopRequireDefault(_Window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _window$nodeRequire = window.nodeRequire('electron'),\n\t    ipcRenderer = _window$nodeRequire.ipcRenderer;\n\t\n\t_global2.default.messagebus = function () {\n\t    // TODO: Optimize Electron's messagebus by keeping track of listeners\n\t    //       in the main process for early termination.\n\t    // TODO: Listener cleanup on this window, or other window close.\n\t    // TODO: Use a custom eventName, so to not collide with current ones.\n\t    var wrappedListeners = {};\n\t    var windowWrappedListeners = {};\n\t\n\t    function wrapListener(window, listener) {\n\t        return function (_, message) {\n\t            // If listener only listens from a specific window, check that this message is from that window:\n\t            if (window && window._id !== message.winID) {\n\t                return;\n\t            }\n\t\n\t            var fromWindow = _global2.default.Window.getByID(message.winID);\n\t\n\t            // Don't execute listeners when the sender is the same as the listener:\n\t            if (fromWindow._id === _global2.default.Window.current._id) {\n\t                return;\n\t            }\n\t\n\t            listener.apply(fromWindow, message.args);\n\t            // TODO: Send response if response is expected\n\t        };\n\t    }\n\t\n\t    return {\n\t        send: function send(eventName) {\n\t            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                args[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            var curWin = _global2.default.Window.current;\n\t            var message = {\n\t                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n\t                winID: curWin._id,\n\t                event: eventName,\n\t                args: args // If the first arg is a window, it gets removed later.\n\t            };\n\t\n\t            if (args.length > 0 && args[0] instanceof _Window2.default) {\n\t                // Remove window from args in message:\n\t                var _window = args.shift(); // args is by reference in message currently\n\t\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (_window._id === curWin._id) {\n\t                    return;\n\t                }\n\t\n\t                _window._window.webContents.send(eventName, message);\n\t            } else {\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = _global2.default.Window.getAll()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var _window2 = _step.value;\n\t\n\t                        if (_window2 !== curWin) {\n\t                            _window2._window.webContents.send(eventName, message);\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        on: function on(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            var onMessage = wrapListener(window, listener);\n\t\n\t            if (window !== undefined) {\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === _global2.default.Window.current._id) {\n\t                    return;\n\t                }\n\t\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                winLisGroup[eventName].set(listener, onMessage);\n\t                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\n\t                wrappedListeners[eventName].set(listener, onMessage);\n\t            }\n\t            ipcRenderer.on(eventName, onMessage);\n\t        },\n\t        off: function off(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                ipcRenderer.removeListener(eventName, winLisGroup[eventName].delete(listener));\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                ipcRenderer.removeListener(eventName, wrappedListeners[eventName].get(listener));\n\t            }\n\t        }\n\t    };\n\t}();\n\t\n\t_ready2.default._deref();\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _window$nodeRequire = window.nodeRequire('electron'),\n\t    ipcRenderer = _window$nodeRequire.ipcRenderer,\n\t    remote = _window$nodeRequire.remote;\n\t\n\tvar url = window.nodeRequire('url');\n\tvar BrowserWindow = remote.BrowserWindow;\n\t\n\tvar currentWin = remote.getCurrentWindow();\n\tvar defaultConfig = {\n\t    width: 600,\n\t    height: 600,\n\t    frame: false,\n\t    resizable: true,\n\t    hasShadow: false,\n\t    icon: 'favicon.ico',\n\t    webPreferences: {\n\t        nodeIntegration: false,\n\t        preload: window.nodeRequire.windowmanagerPath\n\t    }\n\t};\n\tvar configMap = {\n\t    left: 'x',\n\t    top: 'y'\n\t};\n\tvar acceptedEventHandlers = ['ready', 'drag-start', 'drag-before', 'drag-stop', 'dock-before', 'move', 'move-before', 'resize-before', 'close', 'minimize'];\n\t\n\tvar Window = function (_EventHandler) {\n\t    _inherits(Window, _EventHandler);\n\t\n\t    function Window(config) {\n\t        _classCallCheck(this, Window);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Window.__proto__ || Object.getPrototypeOf(Window)).call(this, acceptedEventHandlers));\n\t        // Call the parent constructor:\n\t\n\t\n\t        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n\t        var isArgConfig = config.webContents === undefined; // TODO: Improve checking of arguments.\n\t\n\t        if (isArgConfig) {\n\t            for (var prop in config) {\n\t                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n\t                    config[configMap[prop]] = config[prop];\n\t                    delete config[prop];\n\t                }\n\t            }\n\t            for (var _prop in defaultConfig) {\n\t                if (defaultConfig.hasOwnProperty(_prop)) {\n\t                    config[_prop] = config[_prop] || defaultConfig[_prop];\n\t                }\n\t            }\n\t            var _url = config.url;\n\t\n\t            delete config.url;\n\t\n\t            _this._window = new BrowserWindow(config);\n\t            _this._id = _this._window.id;\n\t            config.title = config.title == null ? _this._id : config.title;\n\t            // The following logic works like (in logical if-order):\n\t            //       1. If url has 'http' or 'file' at start, then use url, no modification.\n\t            //       2. If url has no '/', take location.href and remove all stuff up till last /, then append url.\n\t            //       3. If url has '/':\n\t            //          a. If location.href has 'http', extract the root url (domain) and append url.\n\t            //          b. If location.href has 'file', take remote.getGlobal('workingDir'), and then append url.\n\t            // Resolve url:\n\t            if (!/^(file|http)/i.test(_url)) {\n\t                if (_url[0] !== '/') {\n\t                    _url = url.resolve(location.href, _url); // TODO: Is this unsafe with '..'?\n\t                } else if (/^http/i.test(location.href)) {\n\t                    _url = location.origin + _url; // TODO: Safe?\n\t                } else if (/^file/i.test(location.href)) {\n\t                    _url = remote.getGlobal('workingDir') + _url; // TODO: Safe?\n\t                }\n\t                // If can\\'t determine url to load, then attempt to just load the url.\n\t            }\n\t            _this._window.loadURL(_url);\n\t            _this._window.setTitle(config.title);\n\t        } else {\n\t            _this._window = config;\n\t            _this._id = _this._window.id;\n\t        }\n\t        _global2.default._windows.set(_this._id, _this);\n\t        _this._window._ensureDockSystem();\n\t\n\t        // Setup _window event listeners:\n\t        // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\n\t        var thisWindow = _this;\n\t\n\t        function _onmove() {\n\t            thisWindow.emit('move'); // TODO: Pass what position it is at.\n\t        }\n\t        _this._window.on('move', _onmove);\n\t\n\t        function _onminimize() {\n\t            thisWindow.emit('minimize'); // TODO: Pass what position it is at.\n\t        }\n\t        _this._window.on('minimize', _onminimize);\n\t\n\t        function _onclose() {\n\t            window.removeEventListener('beforeunload', _oncurrclose); // eslint-disable-line no-use-before-define\n\t            _global2.default._windows.delete(thisWindow._id);\n\t            thisWindow._isClosed = true;\n\t            thisWindow.emit('close');\n\t            thisWindow._window = undefined;\n\t            // TODO: Clean up ALL listeners\n\t        }\n\t\n\t        function _oncurrclose() {\n\t            _global2.default._windows.delete(thisWindow._id);\n\t            thisWindow._window.removeListener('move', _onmove);\n\t            thisWindow._window.removeListener('close', _onclose);\n\t            thisWindow._window.removeListener('minimize', _onminimize);\n\t        }\n\t\n\t        // Register _oncurrclose when page changes or window closes to clean up listeners:\n\t        window.addEventListener('beforeunload', _oncurrclose);\n\t\n\t        // If window isn't currentWin, execute local event listeners:\n\t        if (_this._window !== currentWin) {\n\t            _this._window.on('close', _onclose);\n\t        }\n\t\n\t        _this._isClosed = false;\n\t        _this._ready = true;\n\t        if (isArgConfig) {\n\t            _this._window._notifyReady();\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Window, [{\n\t        key: 'isReady',\n\t        value: function isReady() {\n\t            return this._window !== undefined && !this._isClosed();\n\t        }\n\t    }, {\n\t        key: 'onReady',\n\t        value: function onReady(callback) {\n\t            if (this.isClosed()) {\n\t                throw new Error('onReady can\\'t be called on a closed window');\n\t            }\n\t            if (this.isReady()) {\n\t                return callback.call(this);\n\t            }\n\t\n\t            this.once('ready', callback);\n\t        }\n\t    }, {\n\t        key: 'isClosed',\n\t        value: function isClosed() {\n\t            return this._isClosed;\n\t        }\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            var pos = this._window.getPosition();\n\t\n\t            return new _index2.Position(pos[0], pos[1]);\n\t        }\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            var size = this._window.getSize();\n\t\n\t            return size[0];\n\t        }\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            var size = this._window.getSize();\n\t\n\t            return size[1];\n\t        }\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            var size = this._window.getSize();\n\t\n\t            return new _index2.Position(size[0], size[1]);\n\t        }\n\t    }, {\n\t        key: 'getBounds',\n\t        value: function getBounds() {\n\t            var bounds = this._window.getBounds();\n\t\n\t            return new _index2.BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\n\t        }\n\t    }, {\n\t        key: 'getTitle',\n\t        value: function getTitle() {\n\t            return this._window.getTitle();\n\t        }\n\t    }, {\n\t        key: 'setTitle',\n\t        value: function setTitle(newTitle) {\n\t            if (!newTitle) {\n\t                throw new Error('setTitle requires one argument of type String');\n\t            }\n\t            this._window.setTitle(newTitle);\n\t        }\n\t    }, {\n\t        key: 'isHidden',\n\t        value: function isHidden() {\n\t            return !this.isShown();\n\t        }\n\t    }, {\n\t        key: 'isShown',\n\t        value: function isShown() {\n\t            return this._window.isVisible();\n\t        }\n\t    }, {\n\t        key: 'isMinimized',\n\t        value: function isMinimized() {\n\t            return this._window.isMinimized();\n\t        }\n\t    }, {\n\t        key: 'isMaximized',\n\t        value: function isMaximized() {\n\t            return this._window.isMaximized();\n\t        }\n\t    }, {\n\t        key: 'isRestored',\n\t        value: function isRestored() {\n\t            return this.isShown() && !this.isMinimized() && !this.isMaximized();\n\t        }\n\t    }, {\n\t        key: 'close',\n\t        value: function close(callback) {\n\t            if (this.isClosed()) {\n\t                return callback && callback();\n\t            }\n\t\n\t            this._window.close();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'minimize',\n\t        value: function minimize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('minimize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window._dockMinimize();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'maximize',\n\t        value: function maximize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('maximize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.maximize();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'show',\n\t        value: function show(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('show can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window._dockShow();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hide',\n\t        value: function hide(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('hide can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window._dockHide();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('restore can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.restore();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'bringToFront',\n\t        value: function bringToFront(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('bringToFront can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.setAlwaysOnTop(true);\n\t            this._window.setAlwaysOnTop(false);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'focus',\n\t        value: function focus(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('focus can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.focus();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Position(width, height);\n\t\n\t            this._window.setSize(size.left, size.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveTo can\\'t be called on an unready window');\n\t            }\n\t            var pos = new _index2.Position(left, top);\n\t\n\t            this._window._dockMoveTo(pos.left, pos.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveBy can\\'t be called on an unready window');\n\t            }\n\t            var bounds = this.getBounds();\n\t            var deltaPos = new _index2.Position(deltaLeft, deltaTop);\n\t\n\t            this._window._dockMoveTo(bounds.left + deltaPos.left, bounds.top + deltaPos.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setSize',\n\t        value: function setSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this._window.setSize(size.left, size.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setBounds',\n\t        value: function setBounds(left, top, right, bottom, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var bounds = new _index2.BoundingBox(left, top, right, bottom);\n\t\n\t            this._window.setBounds({\n\t                x: bounds.left,\n\t                y: bounds.top,\n\t                width: bounds.getWidth(),\n\t                height: bounds.getHeight()\n\t            });\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dock',\n\t        value: function dock(other) {\n\t            this._window.dock(other._window.id);\n\t        }\n\t    }, {\n\t        key: 'undock',\n\t        value: function undock() {\n\t            this._window.undock();\n\t        }\n\t    }], [{\n\t        key: 'getAll',\n\t        value: function getAll() {\n\t            return Array.from(_global2.default._windows.values());\n\t        }\n\t    }, {\n\t        key: 'getByID',\n\t        value: function getByID(id) {\n\t            return _global2.default._windows.get(id);\n\t        }\n\t    }, {\n\t        key: 'getCurrent',\n\t        value: function getCurrent() {\n\t            return Window.current;\n\t        }\n\t    }]);\n\t\n\t    return Window;\n\t}(_index.EventHandler);\n\t\n\t// Handle current window in this context:\n\t\n\t\n\tWindow.current = new Window(currentWin);\n\t\n\t(function () {\n\t    // Setup handlers on this window:\n\t    var wX = 0;\n\t    var wY = 0;\n\t    var dragging = false;\n\t\n\t    window.addEventListener('focus', function () {\n\t        Window.current._window._dockFocus();\n\t    });\n\t\n\t    window.addEventListener('mousedown', function onDragStart(event) {\n\t        if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t            event.preventDefault();\n\t            dragging = true;\n\t            wX = event.screenX;\n\t            wY = event.screenY;\n\t            Window.current._window._dragStart();\n\t        }\n\t    });\n\t\n\t    window.addEventListener('touchstart', function (event) {\n\t        if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t            event.preventDefault();\n\t            dragging = true;\n\t            wX = event.touches[0].screenX;\n\t            wY = event.touches[0].screenY;\n\t            Window.current._window._dragStart();\n\t        }\n\t    });\n\t\n\t    window.addEventListener('mousemove', function (event) {\n\t        if (dragging) {\n\t            event.preventDefault();\n\t            Window.current._window._dragBy(event.screenX - wX, event.screenY - wY);\n\t        }\n\t    });\n\t\n\t    window.addEventListener('touchmove', function (event) {\n\t        if (dragging) {\n\t            event.preventDefault();\n\t            Window.current._window._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\n\t        }\n\t    });\n\t\n\t    function onDragEnd() {\n\t        if (dragging) {\n\t            event.preventDefault();\n\t            dragging = false;\n\t            Window.current._window._dragStop();\n\t        }\n\t    }\n\t    window.addEventListener('mouseup', onDragEnd);\n\t    window.addEventListener('touchend', onDragEnd);\n\t\n\t    // Add context menu:\n\t    var Menu = remote.Menu;\n\t    var MenuItem = remote.MenuItem;\n\t    var rightClickPosition = null;\n\t    var menu = new Menu();\n\t\n\t    menu.append(new MenuItem({\n\t        label: 'Reload',\n\t        accelerator: 'CmdOrCtrl+R',\n\t        click: function click() {\n\t            Window.current._window.reload();\n\t        }\n\t    }));\n\t    menu.append(new MenuItem({\n\t        label: 'Reload app and restart children',\n\t        click: function click() {\n\t            // Close ALL windows:\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = _global2.default._windows.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var _window = _step.value;\n\t\n\t                    _window.close();\n\t                }\n\t                // Relaunch app:\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            remote.app.relaunch();\n\t            remote.app.exit(0);\n\t        }\n\t    }));\n\t    menu.append(new MenuItem({ type: 'separator' }));\n\t    menu.append(new MenuItem({\n\t        label: 'Inspect Element',\n\t        accelerator: 'CmdOrCtrl+Shift+I',\n\t        click: function click() {\n\t            Window.current._window.inspectElement(rightClickPosition.x, rightClickPosition.y);\n\t        }\n\t    }));\n\t\n\t    window.addEventListener('contextmenu', function (event) {\n\t        event.preventDefault();\n\t        rightClickPosition = { x: event.x, y: event.y };\n\t        menu.popup(Window.current._window);\n\t    }, false);\n\t})();\n\t\n\tfunction resolveWindowWithID(id) {\n\t    var window = _global2.default._windows.get(id);\n\t\n\t    if (window) return window;\n\t\n\t    // Window isn't registered yet in windowmanager, so do so:\n\t    var electronWin = BrowserWindow.fromId(id);\n\t\n\t    if (electronWin !== null) {\n\t        return new Window(electronWin);\n\t    }\n\t}\n\t\n\t// Add other browser windows to global windows:\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\t\n\ttry {\n\t    for (var _iterator2 = BrowserWindow.getAllWindows()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var other = _step2.value;\n\t\n\t        resolveWindowWithID(other.id);\n\t    }\n\t} catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t} finally {\n\t    try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t        }\n\t    } finally {\n\t        if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t        }\n\t    }\n\t}\n\t\n\tipcRenderer.on('window-create', function (event, otherID) {\n\t    _global2.default.emit('window-create', resolveWindowWithID(otherID));\n\t});\n\t\n\t_global2.default.Window = Window;\n\texports.default = Window;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(19);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _Window = __webpack_require__(20);\n\t\n\tvar _Window2 = _interopRequireDefault(_Window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* global fin */\n\tvar APP_UUID = 'app_uuid';\n\t\n\t_global2.default.messagebus = function () {\n\t    var wrappedListeners = {};\n\t    var windowWrappedListeners = {};\n\t\n\t    function wrapListener(listener) {\n\t        return function (message) {\n\t            var window = _Window2.default.getByID(message.winID);\n\t\n\t            // Don't execute listeners when the sender is the same as the listener:\n\t            if (window._id === _Window2.default.current._id) {\n\t                return;\n\t            }\n\t\n\t            listener.apply(window, message.args);\n\t            // TODO: Send response if response is expected\n\t        };\n\t    }\n\t\n\t    return {\n\t        send: function send(eventName) {\n\t            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                args[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            // TODO: Check if ready? Dunno if needed\n\t            var curWin = _Window2.default.current;\n\t            var message = {\n\t                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n\t                winID: curWin._id,\n\t                event: eventName,\n\t                args: args // If the first arg is a window, it gets removed later.\n\t            };\n\t\n\t            if (args.length > 0 && args[0] instanceof _Window2.default) {\n\t                // Remove window from args in message:\n\t                var window = args.shift(); // args is by reference in message currently\n\t\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === curWin._id) {\n\t                    return;\n\t                }\n\t\n\t                fin.desktop.InterApplicationBus.send(_Window2.default.current._window[APP_UUID], window._id, eventName, message);\n\t            } else {\n\t                // TODO: Possibly switch the below out for a loop through all windows?\n\t                fin.desktop.InterApplicationBus.send(_Window2.default.current._window[APP_UUID], eventName, message);\n\t            }\n\t        },\n\t        on: function on(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            var onMessage = wrapListener(listener);\n\t\n\t            if (window !== undefined) {\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === _Window2.default.current._id) {\n\t                    return;\n\t                }\n\t\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                winLisGroup[eventName].set(listener, onMessage);\n\t                fin.desktop.InterApplicationBus.subscribe(_Window2.default.current._window[APP_UUID], window._id, eventName, onMessage);\n\t                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\n\t                wrappedListeners[eventName].set(listener, onMessage);\n\t                fin.desktop.InterApplicationBus.subscribe(_Window2.default.current._window[APP_UUID], eventName, onMessage);\n\t            }\n\t        },\n\t        off: function off(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                fin.desktop.InterApplicationBus.unsubscribe(_Window2.default.current._window[APP_UUID], window._window._id, eventName, winLisGroup[eventName].delete(listener));\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                fin.desktop.InterApplicationBus.unsubscribe(_Window2.default.current._window[APP_UUID], eventName, wrappedListeners[eventName].delete(listener));\n\t            }\n\t        }\n\t    };\n\t}();\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_global2.default.runtime.name = 'OpenFin'; /* global fin */\n\t\n\t_global2.default.runtime.version = undefined;\n\t_global2.default.runtime.isOpenFin = true;\n\t\n\tvar setVersion = _ready2.default.ref(function (version) {\n\t    _global2.default.runtime.version = version;\n\t});\n\t\n\tfin.desktop.main(_ready2.default.ref(function () {\n\t    fin.desktop.System.getVersion(setVersion); // TODO: Handle errorCallback\n\t\n\t    var app = fin.desktop.Application.getCurrent();\n\t    var mainWindow = app.getWindow().contentWindow;\n\t\n\t    if (mainWindow === window) {\n\t        _global2.default.runtime.isMain = true;\n\t        _global2.default._internalBus = new _index.EventHandler(Object.keys(_global2.default._eventListeners));\n\t        _global2.default._windows = new Map();\n\t    } // children get the above in the constructor of the Window.\n\t\n\t    // Wire the internal bus to emit events on windowmanager:\n\t    _global2.default._internalBus.addPipe(_global2.default);\n\t}));\n\t\n\t// This is used to store info across windows:\n\t// Everything on here gets exported as windowmanager.\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(19);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global fin */\n\t\n\t\n\tvar defaultConfig = {\n\t    defaultWidth: 600,\n\t    defaultHeight: 600,\n\t    frame: false,\n\t    resizable: true,\n\t    saveWindowState: false,\n\t    autoShow: true,\n\t    icon: location.href + 'favicon.ico'\n\t};\n\tvar configMap = {\n\t    title: 'name',\n\t    left: 'defaultLeft',\n\t    top: 'defaultTop',\n\t    width: 'defaultWidth',\n\t    height: 'defaultHeight'\n\t};\n\tvar acceptedEventHandlers = ['ready', 'drag-start', 'drag-before', 'drag-stop', 'dock-before', 'move', 'move-before', 'resize-before', 'close', 'minimize'];\n\tvar currentWin = void 0;\n\t\n\tfunction _setupDOM() {\n\t    var thisWindow = this;\n\t\n\t    // TODO: Rewrite to remove setTimeout for the following:\n\t    function setWindows() {\n\t        if (thisWindow._window.contentWindow.windowmanager) {\n\t            thisWindow._window.contentWindow.windowmanager._windows = _global2.default._windows;\n\t            thisWindow._window.contentWindow.windowmanager._internalBus = _global2.default._internalBus;\n\t        } else {\n\t            setTimeout(setWindows, 5);\n\t        }\n\t    }\n\t    setWindows();\n\t\n\t    this._window.getBounds(function (bounds) {\n\t        bounds.right = bounds.left + bounds.width;\n\t        bounds.bottom = bounds.top + bounds.height;\n\t        thisWindow._bounds.set(new _index2.BoundingBox(bounds));\n\t    });\n\t\n\t    // Setup _window event listeners:\n\t    // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\n\t    function onBoundsChange(event) {\n\t        event.right = event.left + event.width;\n\t        event.bottom = event.top + event.height;\n\t        thisWindow._bounds.set(new _index2.BoundingBox(event));\n\t\n\t        if (event.changeType !== 0) {\n\t            thisWindow.undock(); // Undock on resize. TODO: Allow resize with docking\n\t        }\n\t        if (event.changeType !== 1) {\n\t            thisWindow.emit('move'); // TODO: Pass what position it is at.\n\t        }\n\t    }\n\t    this._window.addEventListener('bounds-changing', onBoundsChange);\n\t    this._window.addEventListener('bounds-changed', onBoundsChange);\n\t\n\t    function onClose() {\n\t        // TODO: Is it possible that onClose might not be called when the window is closed?\n\t        //       What if this event is set up on a window that has closed already, and then this window closes?\n\t        thisWindow._isClosed = true;\n\t        _global2.default._windows.delete(thisWindow._id);\n\t\n\t        // Undock:\n\t        thisWindow.undock();\n\t\n\t        // Move children to parent:\n\t        var parent = thisWindow.getParent();\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = thisWindow.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var child = _step.value;\n\t\n\t                // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\n\t                // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\n\t                child.setParent(parent);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t\n\t        thisWindow.setParent(undefined); // Remove from parent\n\t\n\t        thisWindow.emit('close');\n\t        _global2.default._internalBus.emit('window-close', thisWindow);\n\t        thisWindow._window = undefined;\n\t        // TODO: Clean up ALL listeners\n\t    }\n\t    this._window.addEventListener('closed', onClose);\n\t\n\t    function onMinimized() {\n\t        thisWindow.emit('minimize');\n\t    }\n\t    this._window.addEventListener('minimized', onMinimized);\n\t\n\t    // Setup title element:\n\t    this._titleEl = this._window.contentWindow.document.createElement('title');\n\t    this._titleEl.innerText = this._title;\n\t    this._window.contentWindow.document.head.appendChild(this._titleEl);\n\t\n\t    this._ready = true;\n\t    this.emit('ready');\n\t    _global2.default._internalBus.emit('window-create', this);\n\t};\n\t\n\tvar Window = function (_EventHandler) {\n\t    _inherits(Window, _EventHandler);\n\t\n\t    function Window(config) {\n\t        _classCallCheck(this, Window);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Window.__proto__ || Object.getPrototypeOf(Window)).call(this, acceptedEventHandlers));\n\t        // Call the parent constructor:\n\t\n\t\n\t        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n\t        var isArgConfig = config.app_uuid === undefined;\n\t\n\t        // Setup private variables:\n\t        _this._bounds = new _index2.BoundingBox();\n\t        _this._ready = false;\n\t        // TODO: Identify current states.\n\t        _this._isClosed = false;\n\t        _this._isHidden = false;\n\t        _this._isMinimized = false;\n\t        _this._isMaximized = false;\n\t        _this._dockedGroup = [_this];\n\t        _this._children = [];\n\t        _this._parent = undefined;\n\t        _this._title = undefined;\n\t\n\t        if (isArgConfig) {\n\t            for (var prop in config) {\n\t                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n\t                    config[configMap[prop]] = config[prop];\n\t                    delete config[prop];\n\t                }\n\t            }\n\t            for (var _prop in defaultConfig) {\n\t                if (defaultConfig.hasOwnProperty(_prop)) {\n\t                    config[_prop] = config[_prop] || defaultConfig[_prop];\n\t                }\n\t            }\n\t            _this._id = (0, _index.getUniqueWindowName)();\n\t            _this._title = config.name == null ? _this._id : config.name;\n\t            config.name = _this._id; // Need name to be unique\n\t\n\t            if (config.parent) {\n\t                config.parent._children.push(_this);\n\t                _this._parent = config.parent;\n\t                // TODO: Emit event 'child-added' on parent\n\t                delete config.parent;\n\t            }\n\t\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _this._window = new fin.desktop.Window(config, _setupDOM.bind(_this), function (err) {\n\t                console.error(err, config);\n\t            });\n\t        } else {\n\t            _this._id = config._id || config.name;\n\t            _this._title = _this._id;\n\t            _this._window = config;\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _setupDOM.call(_this);\n\t        }\n\t\n\t        // TODO: Ensure docking system\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Window, [{\n\t        key: 'isReady',\n\t        value: function isReady() {\n\t            return this._ready;\n\t        }\n\t    }, {\n\t        key: 'onReady',\n\t        value: function onReady(callback) {\n\t            if (this.isClosed()) {\n\t                throw new Error('onReady can\\'t be called on a closed window');\n\t            }\n\t            if (this.isReady()) {\n\t                return callback.call(this);\n\t            }\n\t\n\t            this.once('ready', callback);\n\t        }\n\t    }, {\n\t        key: 'isClosed',\n\t        value: function isClosed() {\n\t            return this._isClosed;\n\t        }\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            return this._bounds.getPosition();\n\t        }\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            return this._bounds.getWidth();\n\t        }\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            return this._bounds.getHeight();\n\t        }\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            return this._bounds.getSize();\n\t        }\n\t    }, {\n\t        key: 'getBounds',\n\t        value: function getBounds() {\n\t            return this._bounds.clone();\n\t        }\n\t    }, {\n\t        key: 'getParent',\n\t        value: function getParent() {\n\t            return this._parent;\n\t        }\n\t    }, {\n\t        key: 'setParent',\n\t        value: function setParent(parent) {\n\t            // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\n\t\n\t            if (parent === this._parent) {\n\t                return;\n\t            }\n\t\n\t            if (this._parent) {\n\t                var index = this._parent._children.indexOf(this);\n\t\n\t                if (index >= 0) {\n\t                    this._parent._children.splice(index, 1);\n\t                }\n\t                // TODO: Emit event 'child-removed' on current parent.\n\t            }\n\t\n\t            if (parent) {\n\t                this._parent = parent;\n\t                this._parent._children.push(this);\n\t                // TODO: Emit event 'child-added on parent'.\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getChildren',\n\t        value: function getChildren() {\n\t            return this._children.slice();\n\t        }\n\t    }, {\n\t        key: 'addChild',\n\t        value: function addChild(child) {\n\t            child.setParent(this);\n\t        }\n\t    }, {\n\t        key: 'getTitle',\n\t        value: function getTitle() {\n\t            return this._title;\n\t        }\n\t    }, {\n\t        key: 'setTitle',\n\t        value: function setTitle(newTitle) {\n\t            if (!newTitle) {\n\t                throw new Error('setTitle requires one argument of type String');\n\t            }\n\t            this._titleEl.innerText = this._title = newTitle;\n\t        }\n\t    }, {\n\t        key: 'isHidden',\n\t        value: function isHidden() {\n\t            return this._isHidden;\n\t        }\n\t    }, {\n\t        key: 'isShown',\n\t        value: function isShown() {\n\t            return !this._isHidden;\n\t        }\n\t    }, {\n\t        key: 'isMinimized',\n\t        value: function isMinimized() {\n\t            return this._isMinimized;\n\t        }\n\t    }, {\n\t        key: 'isMaximized',\n\t        value: function isMaximized() {\n\t            return this._isMaximized;\n\t        }\n\t    }, {\n\t        key: 'isRestored',\n\t        value: function isRestored() {\n\t            return this.isShown() && !this.isMinimized() && !this.isMaximized();\n\t        }\n\t    }, {\n\t        key: 'close',\n\t        value: function close(callback) {\n\t            if (this.isClosed()) {\n\t                return callback && callback();\n\t            }\n\t            this._window.close(callback);\n\t        }\n\t    }, {\n\t        key: 'minimize',\n\t        value: function minimize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('minimize can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this._dockedGroup[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _window = _step2.value;\n\t\n\t                    _window._isMinimized = true;\n\t                    _window._window.minimize(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'maximize',\n\t        value: function maximize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('maximize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._isMaximized = true;\n\t            this._window.maximize(callback);\n\t        }\n\t    }, {\n\t        key: 'show',\n\t        value: function show(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('show can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this._dockedGroup[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var _window2 = _step3.value;\n\t\n\t                    _window2._isHidden = false;\n\t                    _window2._window.show(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hide',\n\t        value: function hide(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('hide can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = this._dockedGroup[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var _window3 = _step4.value;\n\t\n\t                    _window3._isHidden = true;\n\t                    _window3._window.hide(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('restore can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion5 = true;\n\t            var _didIteratorError5 = false;\n\t            var _iteratorError5 = undefined;\n\t\n\t            try {\n\t                for (var _iterator5 = this._dockedGroup[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                    var _window4 = _step5.value;\n\t\n\t                    _window4._isHidden = false;\n\t                    _window4._isMinimized = false;\n\t                    _window4._isMaximized = false;\n\t                    _window4._window.restore(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError5 = true;\n\t                _iteratorError5 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                        _iterator5.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError5) {\n\t                        throw _iteratorError5;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'bringToFront',\n\t        value: function bringToFront(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('bringToFront can\\'t be called on an unready window');\n\t            }\n\t            var thisWindow = this;\n\t\n\t            var beforeCallback = new _index.SyncCallback(function () {\n\t                thisWindow._window.bringToFront(callback);\n\t            });\n\t\n\t            var _iteratorNormalCompletion6 = true;\n\t            var _didIteratorError6 = false;\n\t            var _iteratorError6 = undefined;\n\t\n\t            try {\n\t                for (var _iterator6 = this._dockedGroup[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t                    var _window5 = _step6.value;\n\t\n\t                    if (_window5 !== this) {\n\t                        _window5._window.bringToFront(beforeCallback.ref());\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError6 = true;\n\t                _iteratorError6 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                        _iterator6.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError6) {\n\t                        throw _iteratorError6;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'focus',\n\t        value: function focus(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('focus can\\'t be called on an unready window');\n\t            }\n\t            var thisWindow = this;\n\t\n\t            var beforeCallback = new _index.SyncCallback(function () {\n\t                thisWindow._window.focus(callback);\n\t            });\n\t\n\t            var _iteratorNormalCompletion7 = true;\n\t            var _didIteratorError7 = false;\n\t            var _iteratorError7 = undefined;\n\t\n\t            try {\n\t                for (var _iterator7 = this._dockedGroup[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t                    var _window6 = _step7.value;\n\t\n\t                    if (_window6 !== this) {\n\t                        _window6._window.focus(beforeCallback.ref());\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError7 = true;\n\t                _iteratorError7 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                        _iterator7.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError7) {\n\t                        throw _iteratorError7;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('resize-before')) {\n\t                return;\n\t            } // Allow preventing resize\n\t            var size = new _index2.Position(width, height);\n\t\n\t            this._window.resizeTo(size.left, size.top, 'top-left', callback);\n\t        }\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(left, top).subtract(this.getPosition());\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion8 = true;\n\t            var _didIteratorError8 = false;\n\t            var _iteratorError8 = undefined;\n\t\n\t            try {\n\t                for (var _iterator8 = this._dockedGroup[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t                    var _window7 = _step8.value;\n\t\n\t                    var pos = _window7.getPosition().add(deltaPos);\n\t\n\t                    _window7._bounds.moveTo(pos);\n\t                    _window7._window.moveTo(pos.left, pos.top, callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError8 = true;\n\t                _iteratorError8 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t                        _iterator8.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError8) {\n\t                        throw _iteratorError8;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveBy can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(deltaLeft, deltaTop);\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion9 = true;\n\t            var _didIteratorError9 = false;\n\t            var _iteratorError9 = undefined;\n\t\n\t            try {\n\t                for (var _iterator9 = this._dockedGroup[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t                    var _window8 = _step9.value;\n\t\n\t                    var pos = _window8.getPosition().add(deltaPos);\n\t\n\t                    _window8._bounds.moveTo(pos);\n\t                    _window8._window.moveTo(pos.left, pos.top, callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError9 = true;\n\t                _iteratorError9 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t                        _iterator9.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError9) {\n\t                        throw _iteratorError9;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setSize',\n\t        value: function setSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this._window.resizeTo(size.left, size.top, 'top-left', callback);\n\t        }\n\t    }, {\n\t        key: 'setBounds',\n\t        value: function setBounds(left, top, right, bottom, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var bounds = new _index2.BoundingBox(left, top, right, bottom);\n\t\n\t            this._window.setBounds(bounds.left, bounds.top, bounds.right, bounds.bottom, callback);\n\t        }\n\t    }, {\n\t        key: 'dock',\n\t        value: function dock(other) {\n\t            if (!this.emit('dock-before')) {\n\t                return;\n\t            } // Allow preventing dock\n\t            if (other === undefined) {\n\t                return;\n\t            } // Failed to find other. TODO: Return error\n\t\n\t            // If other is already in the group, return:\n\t            if (this._dockedGroup.indexOf(other) >= 0) {\n\t                return;\n\t            }\n\t\n\t            // Loop through all windows in otherGroup and add them to this's group:\n\t            var _iteratorNormalCompletion10 = true;\n\t            var _didIteratorError10 = false;\n\t            var _iteratorError10 = undefined;\n\t\n\t            try {\n\t                for (var _iterator10 = other._dockedGroup[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t                    var otherWin = _step10.value;\n\t\n\t                    this._dockedGroup.push(otherWin);\n\t                    // Sharing the array between window objects makes it easier to manage:\n\t                    otherWin._dockedGroup = this._dockedGroup;\n\t                }\n\t\n\t                // TODO: Check if otherGroup is touching\n\t            } catch (err) {\n\t                _didIteratorError10 = true;\n\t                _iteratorError10 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t                        _iterator10.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError10) {\n\t                        throw _iteratorError10;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'undock',\n\t        value: function undock(other) {\n\t            // Check to see if window is already undocked:\n\t            if (this._dockedGroup.length === 1) {\n\t                return;\n\t            }\n\t\n\t            // Undock this:\n\t            this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n\t            this._dockedGroup = [this];\n\t\n\t            // TODO: Redock those still touching, EXCEPT 'this'.\n\t        }\n\t    }, {\n\t        key: '_dragStart',\n\t        value: function _dragStart() {\n\t            if (!this.emit('drag-start')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            var _iteratorNormalCompletion11 = true;\n\t            var _didIteratorError11 = false;\n\t            var _iteratorError11 = undefined;\n\t\n\t            try {\n\t                for (var _iterator11 = this._dockedGroup[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t                    var _window9 = _step11.value;\n\t\n\t                    _window9._dragStartPos = _window9.getPosition();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError11 = true;\n\t                _iteratorError11 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t                        _iterator11.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError11) {\n\t                        throw _iteratorError11;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragBy',\n\t        value: function _dragBy(deltaLeft, deltaTop) {\n\t            if (!this.emit('drag-before')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            // Perform Snap:\n\t            var thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft, this._dragStartPos.top + deltaTop);\n\t            var snapDelta = new _index2.Vector(NaN, NaN);\n\t\n\t            var _iteratorNormalCompletion12 = true;\n\t            var _didIteratorError12 = false;\n\t            var _iteratorError12 = undefined;\n\t\n\t            try {\n\t                for (var _iterator12 = _global2.default._windows.values()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t                    var other = _step12.value;\n\t\n\t                    if (other._dockedGroup !== this._dockedGroup) {\n\t                        snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError12 = true;\n\t                _iteratorError12 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t                        _iterator12.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError12) {\n\t                        throw _iteratorError12;\n\t                    }\n\t                }\n\t            }\n\t\n\t            deltaLeft += snapDelta.left || 0;\n\t            deltaTop += snapDelta.top || 0;\n\t\n\t            var _iteratorNormalCompletion13 = true;\n\t            var _didIteratorError13 = false;\n\t            var _iteratorError13 = undefined;\n\t\n\t            try {\n\t                for (var _iterator13 = this._dockedGroup[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t                    var _other = _step13.value;\n\t\n\t                    var pos = _other._dragStartPos;\n\t\n\t                    // If other doesn't have a drag position, start it:\n\t                    if (pos === undefined) {\n\t                        pos = _other._dragStartPos = _other.getPosition();\n\t                        pos.left -= deltaLeft;\n\t                        pos.top -= deltaTop;\n\t                    }\n\t\n\t                    _other._window.moveTo(pos.left + deltaLeft, pos.top + deltaTop);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError13 = true;\n\t                _iteratorError13 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t                        _iterator13.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError13) {\n\t                        throw _iteratorError13;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragStop',\n\t        value: function _dragStop() {\n\t            // Dock to those it snapped to:\n\t            var thisBounds = this.getBounds();\n\t\n\t            var _iteratorNormalCompletion14 = true;\n\t            var _didIteratorError14 = false;\n\t            var _iteratorError14 = undefined;\n\t\n\t            try {\n\t                for (var _iterator14 = _global2.default._windows.values()[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n\t                    var other = _step14.value;\n\t\n\t                    if (thisBounds.isTouching(other.getBounds())) {\n\t                        this.dock(other);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError14 = true;\n\t                _iteratorError14 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion14 && _iterator14.return) {\n\t                        _iterator14.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError14) {\n\t                        throw _iteratorError14;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion15 = true;\n\t            var _didIteratorError15 = false;\n\t            var _iteratorError15 = undefined;\n\t\n\t            try {\n\t                for (var _iterator15 = this._dockedGroup[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n\t                    var _window10 = _step15.value;\n\t\n\t                    delete _window10._dragStartPos;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError15 = true;\n\t                _iteratorError15 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion15 && _iterator15.return) {\n\t                        _iterator15.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError15) {\n\t                        throw _iteratorError15;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.emit('drag-stop');\n\t        }\n\t    }], [{\n\t        key: 'getAll',\n\t        value: function getAll() {\n\t            return Array.from(_global2.default._windows.values());\n\t        }\n\t    }, {\n\t        key: 'getByID',\n\t        value: function getByID(id) {\n\t            return _global2.default._windows.get(id);\n\t        }\n\t    }, {\n\t        key: 'getCurrent',\n\t        value: function getCurrent() {\n\t            return Window.current;\n\t        }\n\t    }]);\n\t\n\t    return Window;\n\t}(_index.EventHandler);\n\t\n\tfunction setupCurrentWindow() {\n\t    Window.current = _global2.default._windows.get(currentWin.name) || new Window(currentWin);\n\t\n\t    // Setup handlers on this window:\n\t    var wX = 0;\n\t    var wY = 0;\n\t    var dragging = false;\n\t\n\t    window.addEventListener('mousedown', function onDragStart(event) {\n\t        if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t            event.preventDefault();\n\t            dragging = true;\n\t            wX = event.screenX;\n\t            wY = event.screenY;\n\t            Window.current._dragStart();\n\t        }\n\t    });\n\t\n\t    window.addEventListener('touchstart', function (event) {\n\t        if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t            event.preventDefault();\n\t            dragging = true;\n\t            wX = event.touches[0].screenX;\n\t            wY = event.touches[0].screenY;\n\t            Window.current._dragStart();\n\t        }\n\t    });\n\t\n\t    window.addEventListener('mousemove', function (event) {\n\t        if (dragging) {\n\t            event.preventDefault();\n\t            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\n\t        }\n\t    });\n\t\n\t    window.addEventListener('touchmove', function (event) {\n\t        if (dragging) {\n\t            event.preventDefault();\n\t            Window.current._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\n\t        }\n\t    });\n\t\n\t    function onDragEnd() {\n\t        if (dragging) {\n\t            event.preventDefault();\n\t            dragging = false;\n\t            Window.current._dragStop();\n\t        }\n\t    }\n\t    window.addEventListener('mouseup', onDragEnd);\n\t    window.addEventListener('touchend', onDragEnd);\n\t}\n\t\n\t// Handle current window in this context:\n\t// TODO: Rewrite to remove setTimeout for the following:\n\tfin.desktop.main(_ready2.default.ref(function () {\n\t    currentWin = fin.desktop.Window.getCurrent();\n\t    var currentReady = _ready2.default.ref(setupCurrentWindow);\n\t\n\t    function getCurrent() {\n\t        if (_global2.default._windows) {\n\t            currentReady();\n\t        } else {\n\t            setTimeout(getCurrent, 5);\n\t        }\n\t    }\n\t    getCurrent();\n\t}));\n\t\n\t_global2.default.Window = Window;\n\texports.default = Window;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(22);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _Window = __webpack_require__(23);\n\t\n\tvar _Window2 = _interopRequireDefault(_Window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * Message bus for application.\r\n\t * @namespace\r\n\t * @alias messagebus\r\n\t */\n\t_global2.default.messagebus = function () {\n\t    // TODO: Utilize iframe communication? Or use messagebus that is currently shared in setup.js?\n\t    var wrappedListeners = {};\n\t    var windowWrappedListeners = {};\n\t\n\t    window.addEventListener('message', function (event) {\n\t        var message = event.data;\n\t        var win = _Window2.default.getByID(message.winID);\n\t\n\t        // Don't execute listeners when the sender is the same as the listener:\n\t        if (win._id === _Window2.default.current._id) {\n\t            return;\n\t        }\n\t\n\t        if (windowWrappedListeners[message.event] != null) {\n\t            // Check to see if the called window is being listened to directly:\n\t            if (windowWrappedListeners[message.event][message.winID] != null) {\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = windowWrappedListeners[message.event][message.winID][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var listener = _step.value;\n\t\n\t                        listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (wrappedListeners[message.event] != null) {\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = wrappedListeners[message.event][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _listener = _step2.value;\n\t\n\t                    _listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, false);\n\t\n\t    return {\n\t        /**\r\n\t         * @method\r\n\t         * @alias messagebus.send\r\n\t         * @param {String} eventName - the event to send to\r\n\t         * @param {Window} [window=undefined] - the target window to send to (if not specified, sends to all windows)\r\n\t         * @param {...*} args Arguments to send to listeners\r\n\t         */\n\t        send: function send(eventName) {\n\t            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                args[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            // TODO: Check if ready? Dunno if needed\n\t            // TODO: Do we need to add a way to identify if a return is needed?\n\t            var curWin = _Window2.default.current;\n\t            var message = {\n\t                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n\t                winID: curWin._id,\n\t                event: eventName,\n\t                args: args // If the first arg is a window, it gets removed later.\n\t            };\n\t\n\t            if (args.length > 0 && args[0] instanceof _Window2.default) {\n\t                // Remove window from args in message:\n\t                var _window = args.shift(); // args is by reference in message currently\n\t\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (_window._id === curWin._id) {\n\t                    return;\n\t                }\n\t                // TODO: Save the id of message so we can get the response\n\t                _window._window.contentWindow.postMessage(message, '*');\n\t            } else {\n\t                var _iteratorNormalCompletion3 = true;\n\t                var _didIteratorError3 = false;\n\t                var _iteratorError3 = undefined;\n\t\n\t                try {\n\t                    for (var _iterator3 = _global2.default._windows.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                        var _window2 = _step3.value;\n\t\n\t                        if (curWin !== _window2) {\n\t                            // Don't send to current window\n\t                            _window2._window.contentWindow.postMessage(message, '*');\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError3 = true;\n\t                    _iteratorError3 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                            _iterator3.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError3) {\n\t                            throw _iteratorError3;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        /**\r\n\t         * @method\r\n\t         * @alias messagebus.on\r\n\t         * @param {String} eventName - the event to listen to\r\n\t         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n\t         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n\t         */\n\t        on: function on(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === _Window2.default.current._id) {\n\t                    return;\n\t                }\n\t                // Replace window.name with some way to identify the unique window\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\n\t                winLisGroup[eventName].add(listener);\n\t                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                wrappedListeners[eventName].add(listener);\n\t            }\n\t        },\n\t        /**\r\n\t         * @method\r\n\t         * @alias messagebus.off\r\n\t         * @param {String} eventName - the event to remove listener from\r\n\t         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n\t         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n\t         */\n\t        off: function off(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                // Replace window.name with some way to identify the unique window\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\n\t                winLisGroup[eventName].delete(listener);\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                wrappedListeners[eventName].delete(listener);\n\t            }\n\t        }\n\t    };\n\t}();\n\t\n\t// Notify everyone that windowmanager is setup for this window:\n\t_ready2.default._deref();\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction getBrowserInfo() {\n\t    // Credit: http://www.gregoryvarghese.com/how-to-get-browser-name-and-version-via-javascript/\n\t    var ua = navigator.userAgent;\n\t    var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\t    var tem = void 0;\n\t\n\t    if (/trident/i.test(M[1])) {\n\t        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\t        return { name: 'IE', version: tem[1] || '' };\n\t    }\n\t    if (M[1] === 'Chrome') {\n\t        tem = ua.match(/\\bOPR\\/(\\d+)/);\n\t        if (tem !== null) {\n\t            return { name: 'Opera', version: tem[1] };\n\t        }\n\t        tem = ua.match(/\\bedge\\/(\\d+)/i);\n\t        if (tem !== null) {\n\t            return { name: 'Edge', version: tem[1] };\n\t        }\n\t    }\n\t    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n\t    if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) {\n\t        M.splice(1, 1, tem[1]);\n\t    }\n\t    return {\n\t        name: M[0],\n\t        version: M[1]\n\t    };\n\t}\n\t\n\tvar browser = getBrowserInfo();\n\t\n\t_global2.default.runtime.name = browser.name;\n\t_global2.default.runtime.version = browser.version;\n\t_global2.default.runtime.isBrowser = true;\n\t_global2.default.runtime.isMain = window.parent === window;\n\t\n\ttry {\n\t    window.parent.document;\n\t} catch (e) {\n\t    // If the above access errors out, it's due to CORS violation.\n\t    // So assume this JavaScript window is the top-level window:\n\t    _global2.default.runtime.isMain = true;\n\t}\n\t\n\tif (_global2.default.runtime.isMain) {\n\t    (function () {\n\t        // This is the main/root window!\n\t        var nextZIndex = 1000; // TODO: Recycle Z-Indexes! In case of a (probably never) overflow!\n\t\n\t        // The following is to fix Edge not sharing Map values across windows:\n\t\n\t        var _Map = function () {\n\t            function _Map() {\n\t                _classCallCheck(this, _Map);\n\t\n\t                this._map = Object.create(null);\n\t            }\n\t\n\t            _createClass(_Map, [{\n\t                key: 'values',\n\t                value: function values() {\n\t                    var values = Object.keys(this._map);\n\t\n\t                    for (var index = 0; index < values.length; index += 1) {\n\t                        values[index] = this._map[values[index]];\n\t                    }\n\t\n\t                    return values;\n\t                }\n\t            }, {\n\t                key: 'set',\n\t                value: function set(key, value) {\n\t                    this._map[key] = value;\n\t                }\n\t            }, {\n\t                key: 'get',\n\t                value: function get(key) {\n\t                    return this._map[key];\n\t                }\n\t            }, {\n\t                key: 'delete',\n\t                value: function _delete(key) {\n\t                    delete this._map[key];\n\t                }\n\t            }]);\n\t\n\t            return _Map;\n\t        }();\n\t\n\t        _global2.default._launcher = window;\n\t        _global2.default._internalBus = new _index.EventHandler(Object.keys(_global2.default._eventListeners));\n\t        _global2.default._windows = new _Map();\n\t\n\t        _global2.default._getNextZIndex = function () {\n\t            nextZIndex += 1;\n\t            return nextZIndex;\n\t        };\n\t    })();\n\t} else {\n\t    // This is a child window of root!\n\t    _global2.default._launcher = window.parent.windowmanager._launcher || window.parent;\n\t    _global2.default._internalBus = window.parent.windowmanager._internalBus;\n\t    _global2.default._windows = window.parent.windowmanager._windows;\n\t    _global2.default._getNextZIndex = window.parent.windowmanager._getNextZIndex;\n\t}\n\t\n\t// Wire the internal bus to emit events on windowmanager:\n\t_global2.default._internalBus.addPipe(_global2.default);\n\t\n\t// This is used to store info across windows:\n\t// Everything on here gets exported as windowmanager.\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(22);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar defaultConfig = {\n\t    width: 600,\n\t    height: 600,\n\t    frame: false,\n\t    resizable: true,\n\t    saveWindowState: false,\n\t    autoShow: true,\n\t    icon: location.href + 'favicon.ico',\n\t    url: '.',\n\t    minWidth: 100,\n\t    minHeight: 100,\n\t    maxWidth: Infinity,\n\t    maxHeight: Infinity\n\t};\n\tvar configMap = {};\n\tvar acceptedEventHandlers = ['ready', 'drag-start', 'drag-before', 'drag-stop', 'dock-before', 'move', 'move-before', 'resize-before', 'close', 'minimize'];\n\tvar transformPropNames = ['-ms-transform', '-moz-transform', '-o-transform', '-webkit-transform', 'transform'];\n\t\n\t/**\r\n\t * @callback Callback\r\n\t * @param {String|null} error - String on error, or null if no error\r\n\t * @param {Object|null} result - Object on success, or null if error\r\n\t */\n\t\n\t/**\r\n\t * A Window class.\r\n\t * @extends EventHandler\r\n\t */\n\t\n\tvar Window = function (_EventHandler) {\n\t    _inherits(Window, _EventHandler);\n\t\n\t    /**\r\n\t     * Wraps a window object.\r\n\t     * @param {Object} config - Configuration\r\n\t     */\n\t    function Window(config) {\n\t        _classCallCheck(this, Window);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Window.__proto__ || Object.getPrototypeOf(Window)).call(this, acceptedEventHandlers));\n\t        // Call the parent constructor:\n\t\n\t\n\t        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n\t        var isArgConfig = !(config instanceof window.Window);\n\t\n\t        // Setup private variables:\n\t        _this._ready = false;\n\t        // TODO: Identify current states.\n\t        _this._isClosed = false;\n\t        _this._isHidden = false;\n\t        _this._isMinimized = false;\n\t        _this._isMaximized = false;\n\t        _this._dockedGroup = [_this];\n\t        _this._children = []; // TODO: Add way to remove or change heirarchy.\n\t        _this._parent = undefined;\n\t        _this._title = undefined;\n\t        _this._id = (0, _index.getUniqueWindowName)();\n\t\n\t        if (isArgConfig) {\n\t            for (var prop in config) {\n\t                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n\t                    config[configMap[prop]] = config[prop];\n\t                    delete config[prop];\n\t                }\n\t            }\n\t            for (var _prop in defaultConfig) {\n\t                if (defaultConfig.hasOwnProperty(_prop)) {\n\t                    config[_prop] = config[_prop] || defaultConfig[_prop];\n\t                }\n\t            }\n\t            _this._title = config.title == null ? _this._id : config.title;\n\t\n\t            if (config.parent) {\n\t                config.parent._children.push(_this);\n\t                _this._parent = config.parent;\n\t                // TODO: Emit event 'child-added' on parent\n\t                delete config.parent;\n\t            }\n\t\n\t            _this._minSize = new _index2.BoundingBox(config.minWidth, config.minHeight);\n\t            _this._maxSize = new _index2.BoundingBox(config.maxWidth, config.maxHeight);\n\t\n\t            var newWindow = _global2.default._launcher.document.createElement('iframe');\n\t\n\t            newWindow.src = config.url;\n\t            newWindow.style.position = 'absolute';\n\t            if (!Number.isFinite(config.left)) {\n\t                config.left = (_global2.default._launcher.innerWidth - config.width) / 2;\n\t            }\n\t            newWindow.style.left = config.left + 'px';\n\t            if (!Number.isFinite(config.top)) {\n\t                config.top = (_global2.default._launcher.innerHeight - config.height) / 2;\n\t            }\n\t            newWindow.style.top = config.top + 'px';\n\t            newWindow.style.width = config.width + 'px';\n\t            newWindow.style.height = config.height + 'px';\n\t            newWindow.style.minWidth = _this._minSize.left + 'px';\n\t            newWindow.style.minHeight = _this._minSize.top + 'px';\n\t            newWindow.style.maxWidth = _this._maxSize.left + 'px';\n\t            newWindow.style.maxHeight = _this._maxSize.top + 'px';\n\t            newWindow.style.margin = 0;\n\t            newWindow.style.padding = 0;\n\t            newWindow.style.border = 0;\n\t            newWindow.style.resize = 'both';\n\t            newWindow.style.overflow = 'auto';\n\t            _global2.default._launcher.document.body.appendChild(newWindow);\n\t\n\t            _this._window = newWindow;\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _this._ready = true;\n\t            _this.emit('ready');\n\t            _global2.default._internalBus.emit('window-create', _this);\n\t            _this.bringToFront();\n\t            _this.focus();\n\t        } else {\n\t            _this._minSize = new _index2.BoundingBox(defaultConfig.minWidth, defaultConfig.minHeight);\n\t            _this._maxSize = new _index2.BoundingBox(defaultConfig.maxWidth, defaultConfig.maxHeight);\n\t            _this._window = config.document.body;\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _this._ready = true;\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    /**\r\n\t     * Returns true if the {@link Window} instance is created, not closed, and ready for method calls.\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    _createClass(Window, [{\n\t        key: 'isReady',\n\t        value: function isReady() {\n\t            return this._ready;\n\t        }\n\t\n\t        /**\r\n\t         * Calls a callback when window is ready and setup.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'onReady',\n\t        value: function onReady(callback) {\n\t            if (this.isClosed()) {\n\t                throw new Error('onReady can\\'t be called on a closed window');\n\t            }\n\t            if (this.isReady()) {\n\t                return callback.call(this);\n\t            }\n\t\n\t            this.once('ready', callback);\n\t        }\n\t\n\t        /**\r\n\t         * Returns whether window has been closed already.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isClosed',\n\t        value: function isClosed() {\n\t            return this._isClosed;\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's current position.\r\n\t         * @returns {Vector}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            return new _index2.Position(this._window.getBoundingClientRect());\n\t        }\n\t    }, {\n\t        key: 'getMinWidth',\n\t        value: function getMinWidth() {\n\t            return this._minSize.left;\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's width.\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            return this._window.getBoundingClientRect().width;\n\t        }\n\t    }, {\n\t        key: 'getMaxWidth',\n\t        value: function getMaxWidth() {\n\t            return this._maxSize.left;\n\t        }\n\t    }, {\n\t        key: 'getMinHeight',\n\t        value: function getMinHeight() {\n\t            return this._minSize.top;\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's height.\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            return this._window.getBoundingClientRect().height;\n\t        }\n\t    }, {\n\t        key: 'getMaxHeight',\n\t        value: function getMaxHeight() {\n\t            return this._maxSize.top;\n\t        }\n\t    }, {\n\t        key: 'getMinSize',\n\t        value: function getMinSize() {\n\t            return this._minSize.clone();\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's size.\r\n\t         * @returns {Size}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            var box = this._window.getBoundingClientRect();\n\t\n\t            return new _index2.Size(box.width, box.height);\n\t        }\n\t    }, {\n\t        key: 'getMaxSize',\n\t        value: function getMaxSize() {\n\t            return this._maxSize.clone();\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's bounding box.\r\n\t         * @returns {BoundingBox}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getBounds',\n\t        value: function getBounds() {\n\t            return new _index2.BoundingBox(this._window.getBoundingClientRect());\n\t        }\n\t    }, {\n\t        key: 'getParent',\n\t        value: function getParent() {\n\t            return this._parent;\n\t        }\n\t    }, {\n\t        key: 'setParent',\n\t        value: function setParent(parent) {\n\t            // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\n\t            if (parent === this._parent) {\n\t                return;\n\t            }\n\t\n\t            if (this._parent) {\n\t                var index = this._parent._children.indexOf(this);\n\t\n\t                if (index >= 0) {\n\t                    this._parent._children.splice(index, 1);\n\t                }\n\t                // TODO: Emit event 'child-removed' on current parent.\n\t            }\n\t\n\t            if (parent) {\n\t                this._parent = parent;\n\t                this._parent._children.push(this);\n\t                // TODO: Emit event 'child-added on parent'.\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getChildren',\n\t        value: function getChildren() {\n\t            return this._children.slice();\n\t        }\n\t    }, {\n\t        key: 'addChild',\n\t        value: function addChild(child) {\n\t            child.setParent(this);\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's title.\r\n\t         * @returns {String}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getTitle',\n\t        value: function getTitle() {\n\t            return this._title;\n\t        }\n\t\n\t        /**\r\n\t         * Sets window's title.\r\n\t         * @param {String}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setTitle',\n\t        value: function setTitle(title) {\n\t            if (!title) {\n\t                throw new Error('setTitle requires one argument of type String');\n\t            }\n\t            this._title = title;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is hidden.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isHidden',\n\t        value: function isHidden() {\n\t            return this._isHidden;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is not hidden.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isShown',\n\t        value: function isShown() {\n\t            return !this._isHidden;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is minimized.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isMinimized',\n\t        value: function isMinimized() {\n\t            return this._isMinimized;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is maximized.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isMaximized',\n\t        value: function isMaximized() {\n\t            return this._isMaximized;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is not hidden or minimize or maximized.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isRestored',\n\t        value: function isRestored() {\n\t            return this.isShown() && !this.isMinimized() && !this.isMaximized();\n\t        }\n\t\n\t        /**\r\n\t         * Closes the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'close',\n\t        value: function close(callback) {\n\t            if (this.isClosed()) {\n\t                return callback && callback();\n\t            }\n\t\n\t            this._window.parentElement.removeChild(this._window);\n\t            _global2.default._windows.delete(this._id);\n\t\n\t            // Undock:\n\t            this.undock();\n\t\n\t            // Move children to parent:\n\t            var parent = this.getParent();\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var child = _step.value;\n\t\n\t                    // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\n\t                    // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\n\t                    child.setParent(parent);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.setParent(undefined); // Remove from parent\n\t\n\t            this._isClosed = true;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            this.emit('close');\n\t            _global2.default._internalBus.emit('window-close', this);\n\t        }\n\t\n\t        /**\r\n\t         * Minimizes the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'minimize',\n\t        value: function minimize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('minimize can\\'t be called on an unready window');\n\t            }\n\t\n\t            // TODO: What do we do on minimize in this runtime?\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this._dockedGroup[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _window = _step2.value;\n\t\n\t                    _window._isMinimized = true;\n\t                    _window.emit('minimize');\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Maximizes the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'maximize',\n\t        value: function maximize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('maximize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._restoreBounds = this.getBounds();\n\t            this._window.style.left = 0;\n\t            this._window.style.top = 0;\n\t            this._window.style.width = '100%';\n\t            this._window.style.height = '100%';\n\t            this._isMaximized = true;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Unhides the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'show',\n\t        value: function show(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('show can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this._dockedGroup[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var _window2 = _step3.value;\n\t\n\t                    _window2._window.style.display = '';\n\t                    _window2._isHidden = false;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Hides the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'hide',\n\t        value: function hide(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('hide can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = this._dockedGroup[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var _window3 = _step4.value;\n\t\n\t                    _window3._window.style.display = 'none';\n\t                    _window3._isHidden = true;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Restores the window instance from the minimized or maximized states.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('restore can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion5 = true;\n\t            var _didIteratorError5 = false;\n\t            var _iteratorError5 = undefined;\n\t\n\t            try {\n\t                for (var _iterator5 = this._dockedGroup[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                    var _window4 = _step5.value;\n\t\n\t                    if (_window4._isMaximized) {\n\t                        _window4._window.style.left = _window4._restoreBounds.left + 'px';\n\t                        _window4._window.style.top = _window4._restoreBounds.top + 'px';\n\t                        _window4._window.style.width = _window4._restoreBounds.getWidth() + 'px';\n\t                        _window4._window.style.height = _window4._restoreBounds.getHeight() + 'px';\n\t                        _window4._isHidden = false;\n\t                        _window4._isMinimized = false;\n\t                        _window4._isMaximized = false;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError5 = true;\n\t                _iteratorError5 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                        _iterator5.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError5) {\n\t                        throw _iteratorError5;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Brings the window instance to the front of all windows.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'bringToFront',\n\t        value: function bringToFront(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('bringToFront can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion6 = true;\n\t            var _didIteratorError6 = false;\n\t            var _iteratorError6 = undefined;\n\t\n\t            try {\n\t                for (var _iterator6 = this._dockedGroup[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t                    var _window5 = _step6.value;\n\t\n\t                    if (_window5 !== this) {\n\t                        _window5._window.style['z-index'] = _global2.default._getNextZIndex();\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError6 = true;\n\t                _iteratorError6 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                        _iterator6.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError6) {\n\t                        throw _iteratorError6;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this._window.style['z-index'] = _global2.default._getNextZIndex();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Sets focus to the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'focus',\n\t        value: function focus(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('focus can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion7 = true;\n\t            var _didIteratorError7 = false;\n\t            var _iteratorError7 = undefined;\n\t\n\t            try {\n\t                for (var _iterator7 = this._dockedGroup[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t                    var _window6 = _step7.value;\n\t\n\t                    if (_window6 !== this) {\n\t                        _window6._window.contentWindow.focus();\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError7 = true;\n\t                _iteratorError7 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                        _iterator7.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError7) {\n\t                        throw _iteratorError7;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this._window.contentWindow.focus();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Resizes the window instance.\r\n\t         * @param {Number} width\r\n\t         * @param {Number} height\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('resize-before')) {\n\t                return;\n\t            } // Allow preventing resize\n\t            var size = new _index2.Position(width, height);\n\t\n\t            this.undock();\n\t            this._window.width = size.left + 'px';\n\t            this._window.height = size.top + 'px';\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Moves the window instance.\r\n\t         * @param {Number} left\r\n\t         * @param {Number} top\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(left, top).subtract(this.getPosition());\n\t\n\t            var _iteratorNormalCompletion8 = true;\n\t            var _didIteratorError8 = false;\n\t            var _iteratorError8 = undefined;\n\t\n\t            try {\n\t                for (var _iterator8 = this._dockedGroup[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t                    var _window7 = _step8.value;\n\t\n\t                    var pos = _window7.getPosition().add(deltaPos);\n\t\n\t                    _window7._window.style.left = pos.left + 'px';\n\t                    _window7._window.style.top = pos.top + 'px';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError8 = true;\n\t                _iteratorError8 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t                        _iterator8.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError8) {\n\t                        throw _iteratorError8;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Moves the window instance relative to its current position.\r\n\t         * @param {Number} deltaLeft\r\n\t         * @param {Number} deltaTop\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveBy can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(deltaLeft, deltaTop);\n\t\n\t            var _iteratorNormalCompletion9 = true;\n\t            var _didIteratorError9 = false;\n\t            var _iteratorError9 = undefined;\n\t\n\t            try {\n\t                for (var _iterator9 = this._dockedGroup[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t                    var _window8 = _step9.value;\n\t\n\t                    var pos = _window8.getPosition().add(deltaPos);\n\t\n\t                    _window8._window.style.left = pos.left + 'px';\n\t                    _window8._window.style.top = pos.top + 'px';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError9 = true;\n\t                _iteratorError9 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t                        _iterator9.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError9) {\n\t                        throw _iteratorError9;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            var _iteratorNormalCompletion10 = true;\n\t            var _didIteratorError10 = false;\n\t            var _iteratorError10 = undefined;\n\t\n\t            try {\n\t                for (var _iterator10 = this._dockedGroup[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t                    var _window9 = _step10.value;\n\t\n\t                    _window9.emit('move');\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError10 = true;\n\t                _iteratorError10 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t                        _iterator10.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError10) {\n\t                        throw _iteratorError10;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setMinSize',\n\t        value: function setMinSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMinSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._minSize.left = size.left;\n\t            this._minSize.top = size.top;\n\t            this._window.style.minWidth = this._minSize.left + 'px';\n\t            this._window.style.minHeight = this._minSize.top + 'px';\n\t            if (this.getWidth() < size.left || this.getHeight() < size.top) {\n\t                // Resize window to meet new min size:\n\t                // TODO: Take into account transform?\n\t                this._window.style.width = Math.max(this.getWidth(), size.left) + 'px';\n\t                this._window.style.height = Math.max(this.getHeight(), size.top) + 'px';\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t                this.emit('resize');\n\t            } else {\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setSize',\n\t        value: function setSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMaxSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, size.left)) + 'px';\n\t            this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, size.top)) + 'px';\n\t            // Clear transform:\n\t            var _iteratorNormalCompletion11 = true;\n\t            var _didIteratorError11 = false;\n\t            var _iteratorError11 = undefined;\n\t\n\t            try {\n\t                for (var _iterator11 = transformPropNames[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t                    var transformPropName = _step11.value;\n\t\n\t                    this._window.style[transformPropName] = '';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError11 = true;\n\t                _iteratorError11 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t                        _iterator11.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError11) {\n\t                        throw _iteratorError11;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            this.emit('resize');\n\t        }\n\t    }, {\n\t        key: 'forceScaledSize',\n\t        value: function forceScaledSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMaxSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(Math.min(this._maxSize.left, Math.max(this._minSize.left, width)), Math.min(this._maxSize.top, Math.max(this._minSize.top, height)));\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._window.style.width = size.left + 'px';\n\t            this._window.style.height = size.top + 'px';\n\t            // TODO: Calc transform:\n\t            var transform = Math.min(width / size.left, height / size.top);\n\t\n\t            var _iteratorNormalCompletion12 = true;\n\t            var _didIteratorError12 = false;\n\t            var _iteratorError12 = undefined;\n\t\n\t            try {\n\t                for (var _iterator12 = transformPropNames[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t                    var transformPropName = _step12.value;\n\t\n\t                    this._window.style[transformPropName] = 'scale(' + transform + ')';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError12 = true;\n\t                _iteratorError12 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t                        _iterator12.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError12) {\n\t                        throw _iteratorError12;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            this.emit('resize');\n\t        }\n\t    }, {\n\t        key: 'setMaxSize',\n\t        value: function setMaxSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMaxSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._maxSize.left = size.left;\n\t            this._maxSize.top = size.top;\n\t            this._window.style.maxWidth = this._maxSize.left + 'px';\n\t            this._window.style.maxHeight = this._maxSize.top + 'px';\n\t            if (this.getWidth() > size.left || this.getHeight() > size.top) {\n\t                // Resize window to meet new min size:\n\t                // TODO: Take into account transform?\n\t                this._window.style.width = Math.min(this.getWidth(), size.left) + 'px';\n\t                this._window.style.height = Math.min(this.getHeight(), size.top) + 'px';\n\t                // Clear transform:\n\t                var _iteratorNormalCompletion13 = true;\n\t                var _didIteratorError13 = false;\n\t                var _iteratorError13 = undefined;\n\t\n\t                try {\n\t                    for (var _iterator13 = transformPropNames[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t                        var transformPropName = _step13.value;\n\t\n\t                        this._window.style[transformPropName] = '';\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError13 = true;\n\t                    _iteratorError13 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t                            _iterator13.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError13) {\n\t                            throw _iteratorError13;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t                this.emit('resize');\n\t            } else {\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Sets the bounds of the window instance.\r\n\t         * @param {Number} left\r\n\t         * @param {Number} top\r\n\t         * @param {Number} right\r\n\t         * @param {Number} bottom\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setBounds',\n\t        value: function setBounds(left, top, right, bottom, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var bounds = new _index2.BoundingBox(left, top, right, bottom);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._window.style.left = bounds.left + 'px';\n\t            this._window.style.top = bounds.top + 'px';\n\t            // TODO: Take into account transform?\n\t            this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, bounds.getWidth())) + 'px';\n\t            this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, bounds.getHeight())) + 'px';\n\t            // Clear transform:\n\t            var _iteratorNormalCompletion14 = true;\n\t            var _didIteratorError14 = false;\n\t            var _iteratorError14 = undefined;\n\t\n\t            try {\n\t                for (var _iterator14 = transformPropNames[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n\t                    var transformPropName = _step14.value;\n\t\n\t                    this._window.style[transformPropName] = '';\n\t                }\n\t                // TODO: Events\n\t            } catch (err) {\n\t                _didIteratorError14 = true;\n\t                _iteratorError14 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion14 && _iterator14.return) {\n\t                        _iterator14.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError14) {\n\t                        throw _iteratorError14;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Force docking this window to another. They don't need to be touching.\r\n\t         * @param {Window}\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'dock',\n\t        value: function dock(other) {\n\t            // TODO: Check if otherGroup is touching\n\t            if (!this.emit('dock-before')) {\n\t                return;\n\t            } // Allow preventing dock\n\t            if (other === undefined) {\n\t                return;\n\t            } // Failed to find other. TODO: Return error\n\t\n\t            // If other is already in the group, return:\n\t            if (this._dockedGroup.indexOf(other) >= 0) {\n\t                return;\n\t            }\n\t\n\t            // Loop through all windows in otherGroup and add them to this's group:\n\t            var _iteratorNormalCompletion15 = true;\n\t            var _didIteratorError15 = false;\n\t            var _iteratorError15 = undefined;\n\t\n\t            try {\n\t                for (var _iterator15 = other._dockedGroup[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n\t                    var otherWin = _step15.value;\n\t\n\t                    this._dockedGroup.push(otherWin);\n\t                    // Sharing the array between window objects makes it easier to manage:\n\t                    otherWin._dockedGroup = otherWin._dockedGroup;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError15 = true;\n\t                _iteratorError15 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion15 && _iterator15.return) {\n\t                        _iterator15.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError15) {\n\t                        throw _iteratorError15;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Force undocking this window from it's group.<br>\r\n\t         * TODO: Redock those still touching, EXCEPT 'this'.\r\n\t         * @param {Window}\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'undock',\n\t        value: function undock(other) {\n\t            // Check to see if window is already undocked:\n\t            if (this._dockedGroup.length === 1) {\n\t                return;\n\t            }\n\t\n\t            // Undock this:\n\t            this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n\t            this._dockedGroup = [this];\n\t\n\t            // TODO: Redock those still touching, EXCEPT 'this'.\n\t        }\n\t    }, {\n\t        key: '_dragStart',\n\t        value: function _dragStart() {\n\t            if (!this.emit('drag-start')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            this.restore();\n\t            var _iteratorNormalCompletion16 = true;\n\t            var _didIteratorError16 = false;\n\t            var _iteratorError16 = undefined;\n\t\n\t            try {\n\t                for (var _iterator16 = this._dockedGroup[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n\t                    var _window10 = _step16.value;\n\t\n\t                    _window10._dragStartPos = _window10.getPosition();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError16 = true;\n\t                _iteratorError16 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion16 && _iterator16.return) {\n\t                        _iterator16.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError16) {\n\t                        throw _iteratorError16;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragBy',\n\t        value: function _dragBy(deltaLeft, deltaTop) {\n\t            if (!this.emit('drag-before')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            // Perform Snap:\n\t            var thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft, this._dragStartPos.top + deltaTop);\n\t            var snapDelta = new _index2.Vector(NaN, NaN);\n\t\n\t            var _iteratorNormalCompletion17 = true;\n\t            var _didIteratorError17 = false;\n\t            var _iteratorError17 = undefined;\n\t\n\t            try {\n\t                for (var _iterator17 = _global2.default._windows.values()[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n\t                    var other = _step17.value;\n\t\n\t                    if (other._dockedGroup !== this._dockedGroup) {\n\t                        snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError17 = true;\n\t                _iteratorError17 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion17 && _iterator17.return) {\n\t                        _iterator17.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError17) {\n\t                        throw _iteratorError17;\n\t                    }\n\t                }\n\t            }\n\t\n\t            deltaLeft += snapDelta.left || 0;\n\t            deltaTop += snapDelta.top || 0;\n\t\n\t            var _iteratorNormalCompletion18 = true;\n\t            var _didIteratorError18 = false;\n\t            var _iteratorError18 = undefined;\n\t\n\t            try {\n\t                for (var _iterator18 = this._dockedGroup[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n\t                    var _other = _step18.value;\n\t\n\t                    var pos = _other._dragStartPos;\n\t\n\t                    // If other doesn't have a drag position, start it:\n\t                    if (pos === undefined) {\n\t                        pos = _other._dragStartPos = _other.getPosition();\n\t                        pos.left -= deltaLeft;\n\t                        pos.top -= deltaTop;\n\t                    }\n\t\n\t                    _other._window.style.left = pos.left + deltaLeft + 'px';\n\t                    _other._window.style.top = pos.top + deltaTop + 'px';\n\t                    _other.emit('move');\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError18 = true;\n\t                _iteratorError18 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion18 && _iterator18.return) {\n\t                        _iterator18.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError18) {\n\t                        throw _iteratorError18;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragStop',\n\t        value: function _dragStop() {\n\t            // Dock to those it snapped to:\n\t            var thisBounds = this.getBounds();\n\t\n\t            var _iteratorNormalCompletion19 = true;\n\t            var _didIteratorError19 = false;\n\t            var _iteratorError19 = undefined;\n\t\n\t            try {\n\t                for (var _iterator19 = _global2.default._windows.values()[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n\t                    var other = _step19.value;\n\t\n\t                    if (thisBounds.isTouching(other.getBounds())) {\n\t                        this.dock(other);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError19 = true;\n\t                _iteratorError19 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion19 && _iterator19.return) {\n\t                        _iterator19.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError19) {\n\t                        throw _iteratorError19;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion20 = true;\n\t            var _didIteratorError20 = false;\n\t            var _iteratorError20 = undefined;\n\t\n\t            try {\n\t                for (var _iterator20 = this._dockedGroup[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n\t                    var _window11 = _step20.value;\n\t\n\t                    delete _window11._dragStartPos;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError20 = true;\n\t                _iteratorError20 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion20 && _iterator20.return) {\n\t                        _iterator20.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError20) {\n\t                        throw _iteratorError20;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.emit('drag-stop');\n\t        }\n\t\n\t        /**\r\n\t         * Returns a list of all {@link Window} instances open.\r\n\t         * @returns {Window[]}\r\n\t         */\n\t\n\t    }], [{\n\t        key: 'getAll',\n\t        value: function getAll() {\n\t            return Array.from(_global2.default._windows.values());\n\t        }\n\t\n\t        /**\r\n\t         * Returns the {@link Window} instance that has `id`.\r\n\t         * @param {String|Number}\r\n\t         * @returns {Window|undefined}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getByID',\n\t        value: function getByID(id) {\n\t            return _global2.default._windows.get(id);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the {@link Window} instance that calls this function.\r\n\t         * @returns {Window}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCurrent',\n\t        value: function getCurrent() {\n\t            return Window.current;\n\t        }\n\t    }]);\n\t\n\t    return Window;\n\t}(_index.EventHandler);\n\t\n\t// Add launcher to list of windows:\n\t\n\t\n\tif (_global2.default.runtime.isMain) {\n\t    window.document.body.contentWindow = window;\n\t    Window.current = new Window(window); // Force add launcher to window list\n\t} else {\n\t    // No need to do this for child windows, since _windows is shared across windows.\n\t    // Handle current window in this context:\n\t    Window.current = function () {\n\t        var _iteratorNormalCompletion21 = true;\n\t        var _didIteratorError21 = false;\n\t        var _iteratorError21 = undefined;\n\t\n\t        try {\n\t            for (var _iterator21 = _global2.default._windows.values()[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n\t                var win = _step21.value;\n\t\n\t                if (win._window.contentWindow === window) {\n\t                    return win;\n\t                }\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError21 = true;\n\t            _iteratorError21 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion21 && _iterator21.return) {\n\t                    _iterator21.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError21) {\n\t                    throw _iteratorError21;\n\t                }\n\t            }\n\t        }\n\t    }();\n\t}\n\t\n\tif (!_global2.default.runtime.isMain) {\n\t    (function () {\n\t        // Setup handlers on this child window:\n\t        var wX = 0;\n\t        var wY = 0;\n\t        var dragging = false;\n\t\n\t        window.addEventListener('focus', function () {\n\t            Window.current.bringToFront();\n\t        });\n\t\n\t        window.addEventListener('mousedown', function onDragStart(event) {\n\t            if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t                event.preventDefault();\n\t                dragging = true;\n\t                wX = event.screenX;\n\t                wY = event.screenY;\n\t                Window.current._dragStart();\n\t            }\n\t        });\n\t\n\t        window.addEventListener('touchstart', function (event) {\n\t            if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t                event.preventDefault();\n\t                dragging = true;\n\t                wX = event.touches[0].screenX;\n\t                wY = event.touches[0].screenY;\n\t                Window.current._dragStart();\n\t            }\n\t        });\n\t\n\t        window.addEventListener('mousemove', function (event) {\n\t            if (dragging) {\n\t                event.preventDefault();\n\t                Window.current._dragBy(event.screenX - wX, event.screenY - wY);\n\t            }\n\t        });\n\t\n\t        window.addEventListener('touchmove', function (event) {\n\t            if (dragging) {\n\t                event.preventDefault();\n\t                Window.current._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\n\t            }\n\t        });\n\t\n\t        var onDragEnd = function onDragEnd() {\n\t            if (dragging) {\n\t                event.preventDefault();\n\t                dragging = false;\n\t                Window.current._dragStop();\n\t            }\n\t        };\n\t\n\t        window.addEventListener('mouseup', onDragEnd);\n\t        window.addEventListener('touchend', onDragEnd);\n\t    })();\n\t}\n\t\n\t_global2.default.Window = Window;\n\texports.default = Window;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// windowmanager.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dd8ae9bffc1f50e9614f","import windowmanager from './global';\nimport './runtime/index';\n\n// Make windowmanager global:\nif (typeof global !== 'undefined' && global) { global.windowmanager = windowmanager; }\nif (typeof window !== 'undefined' && window) { window.windowmanager = windowmanager; }\n\nexport default windowmanager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* global VERSION */\r\nimport { EventHandler } from './utils/index';\r\nimport geometry from './geometry/index';\r\n\r\nconst windowmanagerEventNames = ['window-create', 'window-close'];\r\n\r\n/**\r\n * A global variable exposed on windows to access the windowmanager-related API.\r\n * @namespace\r\n * @extends EventHandler\r\n * @property {String} version - version of windowmanager\r\n * @property {Object} runtime - contains runtime-specific info\r\n * @property {String} runtime.name - name of runtime (ie. Chrome, IE, OpenFin, Electron, ect)\r\n * @property {String} runtime.version\r\n * @property {Boolean} runtime.isBrowser - is this running in a browser\r\n * @property {Boolean} runtime.isElectron - is this running in Electron\r\n * @property {Boolean} runtime.isOpenFin - is this running in OpenFin\r\n * @property {Boolean} runtime.isDesktop - is this a desktop OS\r\n * @property {Boolean} runtime.isMobile - is this a mobile OS\r\n * @property {Boolean} runtime.isMain - is this the main/startup window (Electron doesn't have one atm)\r\n * @property {Window} Window\r\n * @property {geometry} geometry\r\n * @property {messagebus} messagebus - message bus for application\r\n */\r\nlet windowmanager = new EventHandler(windowmanagerEventNames);\r\n\r\nwindowmanager.version = VERSION;\r\n// runtime is set in the respective runtime\r\nwindowmanager.runtime = {\r\n    name: undefined,\r\n    version: undefined,\r\n    isBrowser: false,\r\n    isElectron: false,\r\n    isOpenFin: false,\r\n    isDesktop: false,\r\n    isMobile: false,\r\n    isMain: false\r\n};\r\n\r\n// Credit: http://stackoverflow.com/a/11381730\r\nif (typeof navigator !== 'undefined') {\r\n    /* eslint-disable max-len */\r\n    windowmanager.runtime.isMobile = (function (a) { return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)); })(navigator.userAgent || navigator.vendor || window.opera);\r\n    /* eslint-enable max-len */\r\n    windowmanager.runtime.isDesktop = !windowmanager.isMobile;\r\n}\r\n\r\n// Add geometry to global:\r\nwindowmanager.geometry = geometry;\r\n\r\n// messagebus is set in the respective runtime\r\n\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","import EventHandler from './EventHandler';\r\nimport SyncCallback from './SyncCallback';\r\n\r\nconst genUIDE7 = (() => {\r\n    let lut = [];\r\n\r\n    for (let i = 0; i < 256; i += 1) { lut[i] = (i < 16 ? '0' : '') + (i).toString(16); }\r\n\r\n    return () => {\r\n        let d0 = Math.random() * 0xffffffff | 0;\r\n        let d1 = Math.random() * 0xffffffff | 0;\r\n        let d2 = Math.random() * 0xffffffff | 0;\r\n        let d3 = Math.random() * 0xffffffff | 0;\r\n\r\n        return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' +\r\n            lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' +\r\n            lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] +\r\n            lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\r\n    };\r\n})();\r\n\r\nfunction getUniqueWindowName() {\r\n    return 'window' + genUIDE7() + (new Date()).getTime();\r\n};\r\n\r\nexport default {\r\n    getUniqueWindowName,\r\n    EventHandler,\r\n    SyncCallback\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","// TODO: Use class, rather than prototype.\r\n\r\n/**\r\n * An EventHandler\r\n * @constructor\r\n * @alias EventHandler\r\n * @param {String[]} [acceptedEventHandlers=[]] - String of allowed events.\r\n */\r\nfunction EventHandler(acceptedEventHandlers = []) {\r\n    this._eventListeners = {};\r\n    this._eventPipes = [];\r\n    // TODO: Look into making these special properties that can't be deleted?\r\n    for (const acceptedEventHandler of acceptedEventHandlers) {\r\n        this._eventListeners[acceptedEventHandler] = [];\r\n    }\r\n}\r\n\r\n/**\r\n * @method\r\n * @param {String}\r\n * @param {callback}\r\n */\r\nEventHandler.prototype.on = function (eventNames, eventListener) {\r\n    eventNames = eventNames.toLowerCase().split(' ');\r\n\r\n    for (const eventName of eventNames) {\r\n        // Check if this event can be subscribed to via this function:\r\n        if (this._eventListeners[eventName] === undefined) { continue; }\r\n\r\n        // Check if eventListener is a function:\r\n        if (!eventListener || typeof eventListener.constructor !== 'function') {\r\n            throw new Error('on requires argument \\'eventListener\\' of type Function');\r\n        }\r\n\r\n        // Check if eventListener is already added:\r\n        if (this._eventListeners[eventName].indexOf(eventListener) >= 0) { continue; }\r\n\r\n        // Add event listener:\r\n        this._eventListeners[eventName].push(eventListener);\r\n    }\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {String}\r\n * @param {callback}\r\n */\r\nEventHandler.prototype.once = function (eventName, eventListener) {\r\n    function onceListener() {\r\n        this.off(eventName, onceListener);\r\n        eventListener.apply(this, arguments);\r\n    }\r\n    this.on(eventName, onceListener);\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {String}\r\n * @param {callback}\r\n */\r\nEventHandler.prototype.off = function (eventNames, eventListener) {\r\n    eventNames = eventNames.toLowerCase().split(' ');\r\n\r\n    for (const eventName of eventNames) {\r\n        // If event listeners don't exist, bail:\r\n        if (this._eventListeners[eventName] === undefined) { return; }\r\n\r\n        // Check if eventListener is a function:\r\n        if (!eventListener || typeof eventListener.constructor !== 'function') {\r\n            throw new Error('off requires argument \\'eventListener\\' of type Function');\r\n        }\r\n\r\n        // Remove event listener, if exists:\r\n        const index = this._eventListeners[eventName].indexOf(eventListener);\r\n\r\n        if (index >= 0) { this._eventListeners[eventName].splice(index, 1); }\r\n    }\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {String}\r\n */\r\nEventHandler.prototype.clearEvent = function (eventNames) {\r\n    eventNames = eventNames.toLowerCase();\r\n\r\n    for (const eventName of eventNames) {\r\n        // If event listeners don't exist, bail:\r\n        if (this._eventListeners[eventName] === undefined) { return; }\r\n\r\n        this._eventListeners[eventName] = [];\r\n    }\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {String}\r\n * @param {...*} args - Arguments to pass to listeners\r\n * @returns {Boolean} true if all handlers return true, else false\r\n */\r\nEventHandler.prototype.emit = function (eventName, ...args) {\r\n    eventName = eventName.toLowerCase();\r\n\r\n    // If event listeners don't exist, bail:\r\n    if (this._eventListeners[eventName] === undefined) { return false; }\r\n\r\n    let returnVal = true;\r\n\r\n    for (const eventListener of this._eventListeners[eventName]) {\r\n        // Call listener with the 'this' context as the current window:\r\n        returnVal = returnVal && eventListener.apply(this, args) !== false;\r\n    }\r\n\r\n    for (const eventHandler of this._eventPipes) {\r\n        // Call handler with the 'this' context as the current window:\r\n        returnVal = returnVal && eventHandler.emit.apply(eventHandler, arguments) !== false;\r\n    }\r\n\r\n    return returnVal;\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {EventHandler}\r\n */\r\nEventHandler.prototype.addPipe = function (eventHandler) {\r\n    // Check if eventHandler is a EventHandler:\r\n    if (!eventHandler || !eventHandler.emit) {\r\n        throw new Error('addPipe requires argument \\'eventHandler\\' of type EventHandler');\r\n    }\r\n\r\n    // Check if eventHandler is already added:\r\n    if (this._eventPipes.indexOf(eventHandler) >= 0) { return; }\r\n\r\n    // Add event handler:\r\n    this._eventPipes.push(eventHandler);\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {EventHandler}\r\n */\r\nEventHandler.prototype.removePipe = function (eventHandler) {\r\n    // Check if eventHandler is a EventHandler:\r\n    if (!eventHandler || !eventHandler.emit) {\r\n        throw new Error('removePipe requires argument \\'eventHandler\\' of type EventHandler');\r\n    }\r\n\r\n    // Check if eventHandler is already added:\r\n    if (this._eventPipes.indexOf(eventHandler) >= 0) { return; }\r\n\r\n    // Remove eventHandler, if exists:\r\n    const index = this._eventPipes.indexOf(eventHandler);\r\n\r\n    if (index >= 0) { this._eventPipes.splice(index, 1); }\r\n};\r\n\r\nexport default EventHandler;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/EventHandler.js","function SyncCallback(callback) {\r\n    if (!(this instanceof SyncCallback)) { return new SyncCallback(callback); }\r\n\r\n    this.callback = callback;\r\n    this.count = 0;\r\n}\r\n\r\nSyncCallback.prototype.ref = function (callback) {\r\n    let thisRef = this;\r\n\r\n    this.count += 1;\r\n    return function (...args) {\r\n        if (callback) { callback(...args); }\r\n        thisRef._deref();\r\n    };\r\n};\r\n\r\nSyncCallback.prototype._deref = function () {\r\n    this.count -= 1;\r\n    if (this.count <= 0) { this.callback(); }\r\n};\r\n\r\nexport default SyncCallback;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/SyncCallback.js","// TODO: Rewrite in class form, so can make use of get/set, and private.\r\n// TODO: Add asVector, asBoundingBox, asCollisionMesh to all classes (as a get),\r\n//       to easily coerce types!\r\n// TODO: Rewrite the classes to have more simplified functions (don't have complex\r\n//       functions that have very specific purposes).\r\n// TODO: Add proper argument checking! Not all methods have checks!\r\nimport Vector from './Vector';\r\nimport BoundingBox from './BoundingBox';\r\nimport CollisionMesh from './CollisionMesh';\r\n\r\n/**\r\n * A library to handler geometry calculations.\r\n * @namespace\r\n * @alias geometry\r\n * @property {BoundingBox}\r\n * @property {CollisionMesh}\r\n * @property {Position}\r\n * @property {Size}\r\n * @property {Vector}\r\n */\r\nexport default {\r\n    BoundingBox,\r\n    CollisionMesh,\r\n    /**\r\n     * A Position object. Alias of {@link Vector}.\r\n     * @class\r\n     * @alias Position\r\n     * @see {@link Vector} for further information.\r\n     */\r\n    Position: Vector,\r\n    /**\r\n     * A Size object. Alias of {@link Vector}.\r\n     * @class\r\n     * @alias Size\r\n     * @see {@link Vector} for further information.\r\n     */\r\n    Size: Vector,\r\n    Vector\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/index.js","import BoundingBox from './BoundingBox';\r\nimport CollisionMesh from './CollisionMesh';\r\n\r\n/**\r\n * A Vector class.\r\n */\r\nclass Vector {\r\n    /**\r\n     * @param {Number} left - The position of the vector's x-axis.\r\n     * @param {Number} top - The position of the vector's y-axis.\r\n     * @returns {Vector} An instance of Vector\r\n     */\r\n    constructor(left, top) {\r\n        let obj = left;\r\n\r\n        if (obj && obj.constructor !== Number) {\r\n            // new Vector(obj)\r\n            this.left = obj.left;\r\n            this.top = obj.top;\r\n        } else {\r\n            // new Vector(left, top)\r\n            this.left = left;\r\n            this.top = top;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clone the current vector to a new object.\r\n     * @returns {Vector} A clone of this instance\r\n     */\r\n    clone() {\r\n        return new Vector(this);\r\n    }\r\n\r\n    /**\r\n     * Checks if any property on `this` is NaN.\r\n     * @returns {Boolean}\r\n     */\r\n    isNaN() {\r\n        return isNaN(this.left) || isNaN(this.top);\r\n    }\r\n\r\n    /**\r\n     * Resolve this object down to a {@link Vector} instance.\r\n     * Since this instance is already a vector, it returns itself.\r\n     * @returns {Vector} self\r\n     */\r\n    getVector() {\r\n        // We have this method, so any prototype in this script will return their position,\r\n        // and if they are one it will return itself.\r\n        // This simplifies code, and prevents having to do a ton of checks.\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a BoundingBox instance version of this vector similar to:<br>\r\n     * ```javascript\r\n     * new BoundingBox(Vector.left, Vector.top, Vector.left, Vector.top)\r\n     * ```\r\n     * @returns {BoundingBox}\r\n     */\r\n    getBoundingBox() {\r\n        // We have this method, so any prototype in this script will return their position,\r\n        // and if they are one it will return itself.\r\n        // This simplifies code, and prevents having to do a ton of checks.\r\n        return new BoundingBox(this.left, this.top, this.left, this.top);\r\n    }\r\n\r\n    /**\r\n     * Returns a {@link CollisionMesh} instance version of this vector similar to:<br>\r\n     * ```javascript\r\n     * new CollisionMesh(Vector.getBoundingBox())\r\n     * ```\r\n     * @returns {CollisionMesh}\r\n     */\r\n    getCollisionMesh() {\r\n        return new CollisionMesh(this.getBoundingBox());\r\n    }\r\n\r\n    /**\r\n     * Returns the squared distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    distanceSquared(other) {\r\n        let diff = other.subtract(this);\r\n\r\n        return diff.left * diff.left + diff.top * diff.top;\r\n    }\r\n\r\n    /**\r\n     * Returns the distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    distance(other) {\r\n        return Math.sqrt(this.distanceSquared(other));\r\n    }\r\n\r\n    /**\r\n     * Sets `this.left` to `other.left`, and sets `this.top` to `other.top`.\r\n     * @param {Vector}\r\n     * @returns {Vector} self\r\n     */\r\n    set(other) {\r\n        if (!other) { throw new Error(\"set requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        this.left = other.left;\r\n        this.top = other.top;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` to position at `left` and/or `top`.\r\n     * @param {Number} [left=null]\r\n     * @param {Number} [top=null]\r\n     * @returns {Vector} self\r\n     */\r\n    moveTo(left, top) {\r\n        if (left && left.constructor === Number) { this.left = left; }\r\n        if (top && top.constructor === Number) { this.top = top; }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n     * @param {Number} [deltaLeft=null]\r\n     * @param {Number} [deltaTop=null]\r\n     * @returns {Vector} self\r\n     */\r\n    moveBy(deltaLeft, deltaTop) {\r\n        if (deltaLeft && deltaLeft.constructor === Number) { this.left = deltaLeft; }\r\n        if (deltaTop && deltaTop.constructor === Number) { this.top = deltaTop; }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets `this`'s properties if `other`'s is smaller.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    setMin(other) {\r\n        if (!other) { throw new Error(\"setMin requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        if (Math.abs(other.left) < Math.abs(this.left) || isNaN(this.left)) { this.left = other.left; }\r\n        if (Math.abs(other.top) < Math.abs(this.top) || isNaN(this.top)) { this.top = other.top; }\r\n    }\r\n\r\n    /**\r\n     * Sets `this`'s properties if `other`'s is larger.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    setMax(other) {\r\n        if (!other) { throw new Error(\"setMax requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        if (Math.abs(other.left) > Math.abs(this.left) || isNaN(this.left)) { this.left = other.left; }\r\n        if (Math.abs(other.top) > Math.abs(this.top) || isNaN(this.top)) { this.top = other.top; }\r\n    }\r\n\r\n    /**\r\n     * Add `other` to `this`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    add(other) {\r\n        if (!other) { throw new Error(\"add requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        this.left += other.left;\r\n        this.top += other.top;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Subtract `other` from `this`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    subtract(other) {\r\n        if (!other) { throw new Error(\"subtract requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        this.left -= other.left;\r\n        this.top -= other.top;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Vector;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/Vector.js","// TODO: Utilize ES6 features (like for loops)\r\nimport Vector from './Vector';\r\nimport CollisionMesh from './CollisionMesh';\r\n\r\n// Utility functions:\r\nfunction minAbs(min, ...vals) {\r\n    let minAbs = Math.abs(min);\r\n\r\n    for (const val of vals) {\r\n        let argAbs = Math.abs(val);\r\n\r\n        if (argAbs < minAbs) {\r\n            min = val;\r\n            minAbs = argAbs;\r\n        }\r\n    }\r\n\r\n    return {\r\n        min: min,\r\n        abs: minAbs\r\n    };\r\n}\r\n\r\n/**\r\n * A BoundingBox class.\r\n */\r\nclass BoundingBox {\r\n    /**\r\n     * @param {Number} left - The left position of x-axis.\r\n     * @param {Number} top - The top position of y-axis.\r\n     * @param {Number} right - The right position of x-axis.\r\n     * @param {Number} bottom - The bottom position of y-axis.\r\n     */\r\n    constructor(left, top, right, bottom) {\r\n        let obj = left;\r\n\r\n        if (obj && obj.constructor !== Number) {\r\n            if (obj.getBoundingBox) { obj = obj.getBoundingBox(); }\r\n            // new BoundingBox(obj)\r\n            this.left = obj.left;\r\n            this.top = obj.top;\r\n            this.right = obj.right;\r\n            this.bottom = obj.bottom;\r\n        } else {\r\n            // new BoundingBox(left, top, right, bottom)\r\n            this.left = left;\r\n            this.top = top;\r\n            this.right = right;\r\n            this.bottom = bottom;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clone the current boundingbox to a new object.\r\n     * @returns {BoundingBox} A clone of this instance\r\n     */\r\n    clone() {\r\n        return new BoundingBox(this);\r\n    }\r\n\r\n    /**\r\n     * Checks if any property on `this` is NaN.\r\n     * @returns {Boolean}\r\n     */\r\n    isNaN() {\r\n        return isNaN(this.left) || isNaN(this.top) || isNaN(this.right) || isNaN(this.bottom);\r\n    }\r\n\r\n    /**\r\n     * Returns the width of `this`.\r\n     * @returns {Number} width\r\n     */\r\n    getWidth() {\r\n        return Math.abs(this.right - this.left);\r\n    }\r\n\r\n    /**\r\n     * Returns the height of `this`.\r\n     * @returns {Number} height\r\n     */\r\n    getHeight() {\r\n        return Math.abs(this.bottom - this.top);\r\n    }\r\n\r\n    /**\r\n     * Returns the size of `this`.\r\n     * @returns {Vector} size\r\n     */\r\n    getSize() {\r\n        return new Vector(this.getWidth(), this.getHeight());\r\n    }\r\n\r\n    /**\r\n     * Returns the area of `this`.\r\n     * @returns {Number} area\r\n     */\r\n    getArea() {\r\n        return this.getWidth() * this.getHeight();\r\n    }\r\n\r\n    /**\r\n     * Returns the position of `this`.\r\n     * @returns {Vector} position\r\n     */\r\n    getPosition() {\r\n        return new Vector(this.left, this.top);\r\n    }\r\n\r\n    /**\r\n     * Resolve this object down to a {@link BoundingBox} instance.\r\n     * Since this instance is already a boundingbox, it returns itself.\r\n     * @returns {BoundingBox} self\r\n     */\r\n    getBoundingBox() {\r\n        // We have this method, so any prototype in this script will return their bounding box,\r\n        // and if they are one it will return itself.\r\n        // This simplifies code, and prevents having to do a ton of checks.\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a {@link CollisionMesh} instance version of this boundingbox similar to:<br>\r\n     * ```javascript\r\n     * new CollisionMesh(BoundingBox)\r\n     * ```\r\n     * @returns {CollisionMesh}\r\n     */\r\n    getCollisionMesh() {\r\n        return new CollisionMesh(this);\r\n    }\r\n\r\n    /**\r\n     * Returns the center position of `this`.\r\n     * @returns {Vector} position\r\n     */\r\n    getCenterPosition() {\r\n        return new Vector(this.left + this.getWidth() / 2, this.top + this.getHeight() / 2);\r\n    }\r\n\r\n    /**\r\n     * Returns `this` subtract `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {Vector} position\r\n     */\r\n    difference(other) {\r\n        if (!other) { throw new Error(\"difference requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return new BoundingBox(this.left - other.left, this.top - other.top,\r\n                                this.right - other.right, this.bottom - other.bottom);\r\n    }\r\n\r\n    /**\r\n     * Returns a position, which if `this` is set to, `this` will be centered on `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {Vector} position\r\n     */\r\n    getCenteredOnPosition(other) {\r\n        if (!other) { throw new Error(\"getCenteredOnPosition requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return other.getCenterPosition().subtract(this.getCenterPosition().subtract(this.getPosition()));\r\n    }\r\n\r\n    /**\r\n     * Returns the intersection between `this` and `other`.\r\n     * This will return a {@link Vector} if they only intersect at a point.\r\n     * This will return a {@link BoundingBox} if they intersect over an area or line.\r\n     * This will return a undefined if they do not intersect.\r\n     * @param {BoundingBox}\r\n     * @returns {Vector|BoundingBox|undefined} intersection object\r\n     */\r\n    getIntersection(other) {\r\n        if (!other) { throw new Error(\"getIntersection requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        let left = Math.max(this.left, other.left),\r\n            top = Math.max(this.top, other.top),\r\n            right = Math.min(this.right, other.right),\r\n            bottom = Math.min(this.bottom, other.bottom);\r\n\r\n        if (left === right && top === bottom) {\r\n            return new Vector(left, top);\r\n        } else if (left <= right && top <= bottom) {\r\n            return new BoundingBox(left, top, right, bottom);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the squared distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number} squared distance\r\n     */\r\n    getDistanceSquaredToPoint(other) {\r\n        other = other.getVector();\r\n        let cLeft = (other.left <= this.left ? this.left : (other.left >= this.right ? this.right : other.left));\r\n        let cTop = (other.top <= this.top ? this.top : (other.top >= this.bottom ? this.bottom : other.top));\r\n        let cPos = new Vector(cLeft, cTop);\r\n\r\n        return cPos.distanceSquared(other);\r\n    }\r\n\r\n    /**\r\n     * Returns the distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number} distance\r\n     */\r\n    getDistanceToPoint(other) {\r\n        return Math.sqrt(this.getDistanceSquaredToPoint(other));\r\n    }\r\n\r\n    /**\r\n     * Sets `this`'s properties to `other`'s properties.\r\n     * @param {BoundingBox}\r\n     * @returns {BoundingBox} self\r\n     */\r\n    set(other) {\r\n        if (!other) { throw new Error(\"set requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        this.left = other.left;\r\n        this.top = other.top;\r\n        this.right = other.right;\r\n        this.bottom = other.bottom;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` to position at `left` and/or `top`.\r\n     * @param {Number} [left=null]\r\n     * @param {Number} [top=null]\r\n     * @returns {BoundingBox} self\r\n     */\r\n    moveTo(left, top) {\r\n        if (left && left.constructor === Number) {\r\n            this.right = left + (this.right - this.left);\r\n            this.left = left;\r\n        }\r\n        if (top && top.constructor === Number) {\r\n            this.bottom = top + (this.bottom - this.top);\r\n            this.top = top;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n     * @param {Number} [deltaLeft=null]\r\n     * @param {Number} [deltaTop=null]\r\n     * @returns {BoundingBox} self\r\n     */\r\n    moveBy(deltaLeft, deltaTop) {\r\n        if (deltaLeft && deltaLeft.constructor === Number) {\r\n            this.left += deltaLeft;\r\n            this.right += deltaLeft;\r\n        }\r\n        if (deltaTop && deltaTop.constructor === Number) {\r\n            this.top += deltaTop;\r\n            this.bottom += deltaTop;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Resize `this` to size `width` and/or `height`, anchored at `anchor`.\r\n     * @param {Number} [width=null]\r\n     * @param {Number} [height=null]\r\n     * @param {String} [anchor='top-left'] supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\"\r\n     * @returns {BoundingBox} self\r\n     */\r\n    resizeTo(width, height, anchor) {\r\n        // NOTE: anchor supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\". By default it is \"top-left\".\r\n        // NOTE: anchor also supports being passed as a position. Allowing the resize anchor to be anywhere other than\r\n        //       the predefined strings.\r\n        let curSize = this.getSize();\r\n        let newSize = new Vector(width || curSize.left, height || curSize.top);\r\n\r\n        anchor = anchor || 'top-left';\r\n        if (typeof anchor === 'string' || anchor instanceof String) {\r\n            let anchorStr = anchor;\r\n\r\n            anchor = this.getPosition();\r\n            if (anchorStr.indexOf('right') >= 0) { anchor.left += curSize.left; }\r\n            if (anchorStr.indexOf('bottom') >= 0) { anchor.top += curSize.top; }\r\n        }\r\n\r\n        this.left += (anchor.left - this.left) * (curSize.left - newSize.left) / curSize.left;\r\n        this.right += (anchor.left - this.right) * (curSize.left - newSize.left) / curSize.left;\r\n        this.top += (anchor.top - this.top) * (curSize.top - newSize.top) / curSize.top;\r\n        this.bottom += (anchor.top - this.bottom) * (curSize.top - newSize.top) / curSize.top;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` encapsulates `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {Boolean}\r\n     */\r\n    isContains(other) {\r\n        if (!other) { throw new Error(\"isContains requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return other.left >= this.left && other.right <= this.right &&\r\n            other.top >= this.top && other.bottom <= this.bottom;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` encapsulates at least one of `others`.\r\n     * @param {BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someContains(others) {\r\n        if (!others) { throw new Error(\"someContains requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"someContains requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isContains(others[index])) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` touches an edge of `other`, but does not intersect area.\r\n     * @param {BoundingBox}\r\n     * @returns {Boolean}\r\n     */\r\n    isTouching(other) {\r\n        if (!other) { throw new Error(\"isTouching requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return ((this.top <= other.bottom && this.bottom >= other.top) &&\r\n                (this.left === other.right || this.right === other.left)) ||\r\n                ((this.left <= other.right && this.right >= other.left) &&\r\n                (this.top === other.bottom || this.bottom === other.top));\r\n    }\r\n\r\n    /**\r\n     * If `this` touches one of `others`, but does not intersect area, then this returns the `this` edge name.\r\n     * @param {BoundingBox[]}\r\n     * @returns {String|undefined} edge name\r\n     */\r\n    getEdgeTouching(others) {\r\n        if (!others) { throw new Error(\"getEdgeTouching requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { others = [others]; }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            let other = others[index].getBoundingBox();\r\n\r\n            if (this.top <= other.bottom && this.bottom >= other.top) {\r\n                if (this.left === other.right) { return 'left'; }\r\n                if (this.right === other.left) { return 'right'; }\r\n            }\r\n            if (this.left <= other.right && this.right >= other.left) {\r\n                if (this.top === other.bottom) { return 'top'; }\r\n                if (this.bottom === other.top) { return 'bottom'; }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If `this` touches one of `others`, but does not intersect area, then this returns the `other` edge name.\r\n     * @param {BoundingBox[]}\r\n     * @returns {String|undefined} edge name\r\n     */\r\n    getOtherEdgeTouching(others) {\r\n        if (!others) { throw new Error(\"getOtherEdgeTouching requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { others = [others]; }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            let other = others[index].getBoundingBox();\r\n\r\n            if (this.top <= other.bottom && this.bottom >= other.top) {\r\n                if (this.left === other.right) { return 'right'; }\r\n                if (this.right === other.left) { return 'left'; }\r\n            }\r\n            if (this.left <= other.right && this.right >= other.left) {\r\n                if (this.top === other.bottom) { return 'bottom'; }\r\n                if (this.bottom === other.top) { return 'top'; }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines which edges of `this` is closest to `other`, returns all edges in sorted order by distance.\r\n     * @param {BoundingBox}\r\n     * @returns {String[]} edge names sorted from closest to furthest\r\n     */\r\n    getEdgeClosestOrder(other) {\r\n        if (!other) { throw new Error(\"getEdgeClosest requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n        let centerPos = this.getCenterPosition();\r\n        let dis = [];\r\n\r\n        dis.push({\r\n            'edge': 'left',\r\n            dis: other.getDistanceSquaredToPoint(this.left, centerPos.top)\r\n        });\r\n        dis.push({\r\n            'edge': 'top',\r\n            dis: other.getDistanceSquaredToPoint(centerPos.left, this.top)\r\n        });\r\n        dis.push({\r\n            'edge': 'right',\r\n            dis: other.getDistanceSquaredToPoint(this.right, centerPos.top)\r\n        });\r\n        dis.push({\r\n            'edge': 'bottom',\r\n            dis: other.getDistanceSquaredToPoint(centerPos.left, this.bottom)\r\n        });\r\n        dis.sort(function (a, b) {\r\n            return a.dis - b.dis;\r\n        });\r\n\r\n        return dis.map(function (dis) { return dis.edge; });\r\n    }\r\n\r\n    /**\r\n     * Determines which `this` edge is closest to `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {String} edge name\r\n     */\r\n    getEdgeClosest(other) {\r\n        let edges = this.getEdgeClosestOrder(other);\r\n\r\n        return edges[0];\r\n    }\r\n\r\n    /**\r\n     * Returns a vector representing the delta position to add to `this` to snap to `other`.<br>\r\n     * Note: `snapDelta` may contain `NaN` for `left` or `right`\r\n     * @param {BoundingBox}\r\n     * @param {Number} [snapDistance=5] max distance to move `this`\r\n     * @returns {Vector} snapDelta\r\n     */\r\n    getSnapDelta(other, snapDistance) {\r\n        if (!other) { throw new Error(\"getSnapDelta requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n        snapDistance = snapDistance || 5;\r\n\r\n        let snapDelta = new Vector(NaN, NaN);\r\n\r\n        if (this.top <= other.bottom && this.bottom >= other.top) {\r\n            // Handle x-snap:\r\n            const leftRightDis = minAbs(other.left - this.right, other.right - this.left);\r\n\r\n            if (leftRightDis.abs <= snapDistance) { // this.LeftRightSnapTo(other)\r\n                snapDelta.left = leftRightDis.min;\r\n\r\n                // Handle y-subsnap:\r\n                const topBottomDis = minAbs(other.top - this.top, other.bottom - this.bottom);\r\n\r\n                if (topBottomDis.abs <= snapDistance) { // this.TopBottomSubSnapTo(other)\r\n                    snapDelta.top = topBottomDis.min;\r\n                }\r\n            }\r\n        } else if (this.left <= other.right && this.right >= other.left) {\r\n            // Handle y-snap:\r\n            const topBottomDis = minAbs(other.top - this.bottom, other.bottom - this.top);\r\n\r\n            if (topBottomDis.abs <= snapDistance) { // this.TopBottomSnapTo(other)\r\n                snapDelta.top = topBottomDis.min;\r\n\r\n                // Handle x-subsnap:\r\n                const leftRightDis = minAbs(other.left - this.left, other.right - this.right);\r\n\r\n                if (leftRightDis.abs <= snapDistance) { // this.LeftRightSubSnapTo(other)\r\n                    snapDelta.left = leftRightDis.min;\r\n                }\r\n            }\r\n        }\r\n\r\n        return snapDelta;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` touches an edge of one of `others`, but does not intersect area.\r\n     * @param {BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someTouching(others) {\r\n        if (!others) { throw new Error(\"someTouching requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"someTouching requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isTouching(others[index])) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` intersects an area of `others`, not an edge.\r\n     * @param {BoundingBox}\r\n     * @returns {Boolean}\r\n     */\r\n    isColliding(other) {\r\n        if (!other) { throw new Error(\"isColliding requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` intersects an area of one of `others`, not an edge.\r\n     * @param {BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someColliding(others) {\r\n        if (!others) { throw new Error(\"someColliding requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"someColliding requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isColliding(others[index])) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns which of `other` that `this` intersects an area of, not an edge.\r\n     * @param {BoundingBox[]}\r\n     * @returns {BoundingBox|undefined}\r\n     */\r\n    getColliding(others) {\r\n        if (!others) { throw new Error(\"getColliding requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"getColliding requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isColliding(others[index])) { return others[index]; }\r\n        }\r\n    }\r\n}\r\n\r\nexport default BoundingBox;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/BoundingBox.js","import Vector from './Vector';\r\nimport BoundingBox from './BoundingBox';\r\n\r\n/**\r\n * A CollisionMesh class.\r\n */\r\nclass CollisionMesh {\r\n    /**\r\n     * @param {BoundingBox[]} boxes - An array of objects thatg resolve to BoundingBox.\r\n     */\r\n    constructor(boxes, opts = {}) {\r\n        if (!boxes) { throw new Error('CollisionMesh constructor requires argument \\'boxes\\''); }\r\n        if (boxes.constructor !== Array) { boxes = [boxes]; }\r\n        this.boxes = [];\r\n\r\n        for (let box of boxes) {\r\n            if (box.constructor === BoundingBox) {\r\n                this.boxes.push(box);\r\n            } else if (box.constructor === CollisionMesh) {\r\n                this.boxes = this.boxes.concat(box.boxes);\r\n            } else {\r\n                this.boxes = this.boxes.concat(box.getCollisionMesh(opts).boxes);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clone the current collisionmesh to a new object.\r\n     * @returns {CollisionMesh} A clone of this instance\r\n     */\r\n    clone() {\r\n        let boxes = new Array(this.boxes.length);\r\n\r\n        for (let index = 0; index < this.boxes.length; index += 1) {\r\n            boxes[index] = this.boxes[index].clone();\r\n        }\r\n\r\n        return new CollisionMesh(boxes);\r\n    }\r\n\r\n    /**\r\n     * Returns the width of `this`.\r\n     * @returns {Number} width\r\n     */\r\n    getWidth() {\r\n        if (this.boxes.length === 0) { return 0; }\r\n        let left = this.boxes[0].left;\r\n        let right = this.boxes[0].right;\r\n\r\n        for (let index = 1; index < this.boxes.length; index += 1) {\r\n            // This assumes left is least, and right is most in terms of value:\r\n            left = Math.min(left, this.boxes[index].left);\r\n            right = Math.max(right, this.boxes[index].right);\r\n        }\r\n\r\n        return right - left;\r\n    }\r\n\r\n    /**\r\n     * Returns the height of `this`.\r\n     * @returns {Number} height\r\n     */\r\n    getHeight() {\r\n        if (this.boxes.length === 0) { return 0; }\r\n\r\n        let top = this.boxes[0].top;\r\n        let bottom = this.boxes[0].bottom;\r\n\r\n        for (let index = 1; index < this.boxes.length; index += 1) {\r\n            // This assumes top is least, and bottom is most in terms of value:\r\n            top = Math.min(top, this.boxes[index].top);\r\n            bottom = Math.max(bottom, this.boxes[index].bottom);\r\n        }\r\n\r\n        return bottom - top;\r\n    }\r\n\r\n    /**\r\n     * Returns the size of `this`.\r\n     * @returns {Vector} size\r\n     */\r\n    getSize() {\r\n        return this.getBoundingBox().getSize();\r\n    }\r\n\r\n    /**\r\n     * Returns the position of `this`.\r\n     * @returns {Vector} position\r\n     */\r\n    getPosition() {\r\n        return this.getBoundingBox().getPosition();\r\n    }\r\n\r\n    /**\r\n     * Returns a BoundingBox instance version of this collisionmesh, which encapsulates all of it's internal boxes.\r\n     * @returns {BoundingBox}\r\n     */\r\n    getBoundingBox() {\r\n        if (this.boxes.length === 0) { return new BoundingBox(NaN, NaN, NaN, NaN); }\r\n\r\n        let box = this.boxes[0].clone();\r\n\r\n        for (let index = 1; index < this.boxes.length; index += 1) {\r\n            box.left = Math.min(box.left, this.boxes[index].left);\r\n            box.top = Math.min(box.top, this.boxes[index].top);\r\n            box.right = Math.max(box.right, this.boxes[index].right);\r\n            box.bottom = Math.max(box.bottom, this.boxes[index].bottom);\r\n        }\r\n\r\n        return box;\r\n    }\r\n\r\n    /**\r\n     * Resolve this object down to a {@link CollisionMesh} instance.\r\n     * Since this instance is already a collisionmesh, it returns itself.\r\n     * @returns {CollisionMesh} self\r\n     */\r\n    getCollisionMesh() {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` to position at `left` and/or `top`.\r\n     * @param {Number} [left=null]\r\n     * @param {Number} [top=null]\r\n     * @returns {BoundingBox} self\r\n     */\r\n    moveTo(left, top) {\r\n        let newPosition = new Vector(left, top);\r\n\r\n        this.moveBy(newPosition.subtract(this.getPosition()));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n     * @param {Number} [deltaLeft=null]\r\n     * @param {Number} [deltaTop=null]\r\n     * @returns {BoundingBox} self\r\n     */\r\n    moveBy(left, top) {\r\n        let newPosition = new Vector(left || 0, top || 0);\r\n\r\n        for (let box of this.boxes) {\r\n            box.moveBy(newPosition);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` encapsulates all of `other`.\r\n     * @param {CollisionMesh|BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    isContains(other) {\r\n        if (!other) { throw new Error('isContains requires argument \\'other\\''); }\r\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\r\n\r\n        for (const otherBox of other.boxes) {\r\n            let contained = false;\r\n\r\n            for (const thisBox of this.boxes) {\r\n                contained |= thisBox.isContains(otherBox);\r\n            }\r\n\r\n            if (!contained) { return false; }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` encapsulates at least one of `other`.\r\n     * @param {CollisionMesh|BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someContains(other) {\r\n        if (!other) { throw new Error('someContains requires argument \\'other\\''); }\r\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\r\n\r\n        for (const box of this.boxes) {\r\n            if (box.someContains(other.boxes)) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` touches an edge of `other`, but does not intersect area.\r\n     * @param {CollisionMesh|BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    isTouching(other) {\r\n        if (!other) { throw new Error('isTouching requires argument \\'other\\''); }\r\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\r\n\r\n        for (const box of this.boxes) {\r\n            if (box.someTouching(other.boxes)) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` touches an edge of one of `others`, but does not intersect area.\r\n     * @param {CollisionMesh[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someTouching(others) {\r\n        if (!others) { throw new Error('someTouching requires argument \\'others\\''); }\r\n        if (others.constructor !== Array) {\r\n            throw new Error('someTouching requires argument \\'others\\' to resolve to type Array');\r\n        }\r\n\r\n        for (const other of others) {\r\n            if (this.isTouching(other)) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` intersects an area of `other`, not an edge.\r\n     * @param {CollisionMesh|BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    isColliding(other) {\r\n        if (!other) { throw new Error('isColliding requires argument \\'other\\''); }\r\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\r\n\r\n        for (const box of this.boxes) {\r\n            if (box.someColliding(other.boxes)) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` intersects an area of one of `others`, not an edge.\r\n     * @param {CollisionMesh[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someColliding(others) {\r\n        if (!others) { throw new Error('someColliding requires argument \\'others\\''); }\r\n        if (others.constructor !== Array) {\r\n            throw new Error('someColliding requires argument \\'others\\' to resolve to type Array');\r\n        }\r\n\r\n        for (const other of others) {\r\n            for (const box of this.boxes) {\r\n                if (box.isColliding(other)) { return true; }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns which box of `other` that `this` intersects an area of, not an edge.\r\n     * @param {CollisionMesh|BoundingBox[]}\r\n     * @returns {BoundingBox|undefined}\r\n     */\r\n    getColliding(other) {\r\n        if (!other) { throw new Error('getColliding requires argument \\'other\\''); }\r\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\r\n\r\n        for (let box of this.boxes) {\r\n            let collided = box.getColliding(other.boxes);\r\n\r\n            if (collided) { return collided; }\r\n        }\r\n    }\r\n}\r\n\r\nexport default CollisionMesh;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/CollisionMesh.js","/* global fin */\r\nimport './ready';\r\n\r\n// TODO: Add runtime checks here for OpenFin and Electron\r\nlet runtime;\r\n\r\nif ((typeof process !== 'undefined' && process && process.versions && process.versions.electron) ||\r\n    (typeof window !== 'undefined' && window && window.nodeRequire && window.nodeRequire.runtime)) {\r\n    // We are running in an Electron Runtime:\r\n    runtime = require('./electron/index');\r\n} else if (typeof fin !== 'undefined' && fin && fin.desktop && fin.desktop.main) {\r\n    // We are running in an OpenFin Runtime:\r\n    runtime = require('./openfin/index');\r\n} else {\r\n    // We are running in an Browser Runtime:\r\n    runtime = require('./browser/index');\r\n}\r\n\r\nexport default runtime;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/index.js","import windowmanager from '../global';\r\nimport { SyncCallback } from '../utils/index';\r\n\r\nlet callbacks = [];\r\nlet isReady = false;\r\n\r\n/**\r\n * Executes callback when windowmanager is ready.\r\n * @memberof windowmanager\r\n * @method\r\n * @param {callback}\r\n */\r\nwindowmanager.onReady = function (callback) {\r\n    // Check if callback is not a function:\r\n    if (!(callback && callback.constructor && callback.call && callback.apply)) {\r\n        throw new Error('onReady expects a function passed as the callback argument!');\r\n    }\r\n\r\n    // Check if already ready:\r\n    if (isReady) { callback(); }\r\n\r\n    // Check to see if callback is already in callbacks:\r\n    if (callbacks.indexOf(callback) >= 0) { return; }\r\n\r\n    callbacks.push(callback);\r\n};\r\n\r\n/**\r\n * Returns if windowmanager is ready.\r\n * @memberof windowmanager\r\n * @method\r\n * @returns {Boolean}\r\n */\r\nwindowmanager.isReady = () => {\r\n    return isReady;\r\n};\r\n\r\nexport default new SyncCallback(function () {\r\n    isReady = true;\r\n    for (const callback of callbacks) { callback(); }\r\n    callbacks = [];\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/ready.js","import windowmanager from './global'; // Setup windowmanager runtime variables for Electron\r\n// TODO: Determine if renderer should be setup using the startup script, and have renderer be a NOOP\r\n\r\nif (windowmanager._isNode) {\r\n    // We are running in an Electron's main script:\r\n    require('./node/index');\r\n} else if (windowmanager._isRenderer) {\r\n    // We are running in an Electron renderer:\r\n    require('./renderer/index');\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/index.js","import windowmanager from '../../global';\r\nimport nodeRequire from './require';\r\n\r\nwindowmanager._isNode = false;\r\nwindowmanager._isStartup = false;\r\nwindowmanager._isRenderer = false;\r\nwindowmanager.runtime.name = 'Electron';\r\nwindowmanager.runtime.version = undefined;\r\nwindowmanager.runtime.isElectron = true;\r\n\r\n// Determine if this is node or renderer:\r\n// TODO: Clean up the following code to clearly identify the three potential states: node, startup, renderer\r\nif (typeof global !== 'undefined' && global) {\r\n    // We are running in an Electron Window Backend's Runtime:\r\n    const { BrowserWindow } = nodeRequire('electron');\r\n\r\n    // The following check works because BrowserWindow is not exposed to the window scripts:\r\n    windowmanager._isNode = (BrowserWindow != null);\r\n    windowmanager._isStartup = !windowmanager._isNode;\r\n    windowmanager.runtime.version = global.process.versions.electron;\r\n\r\n    // If is a window startup script:\r\n    if (windowmanager._isStartup) {\r\n        let _require = nodeRequire;\r\n\r\n        _require.runtime = windowmanager.runtime;\r\n        _require.workingDir = _require('path').dirname(_require.main.filename);\r\n        _require.windowmanagerPath = __filename; // Used so new windows know where to load windowmanager from.\r\n        global.nodeRequire = _require; // Used so windowmanager in a window can access electron.\r\n        // TODO: Determine if window can be set directly here.\r\n\r\n        process.once('loaded', function () {\r\n            // TODO: Is this needed?\r\n            global.nodeRequire = _require;\r\n        });\r\n    }\r\n} else if (typeof window !== 'undefined' && window) {\r\n    windowmanager._isRenderer = true;\r\n\r\n    if (window.nodeRequire != null) {\r\n        // We are running in an Electron Window's Runtime:\r\n        windowmanager.runtime = window.nodeRequire.runtime;\r\n        windowmanager._windows = new Map();\r\n    }\r\n}\r\n\r\n// This is used to store info across windows:\r\n// Everything on here gets exported as windowmanager.\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/global.js","// Exposes node require\r\nexport default eval('typeof require !== \\'undefined\\' && require'); // eslint-disable-line no-eval\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/require.js","import readySync from '../../ready';\r\nimport './Window'; // Setup window backend\r\n\r\n// TODO: Make scalejs.windowmanager the main.js script for Electron. Load the config.json\r\n\r\nreadySync._deref();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/node/index.js","import windowmanager from '../global';\r\nimport nodeRequire from '../require';\r\nconst { BrowserWindow } = nodeRequire('electron');\r\n\r\n// TODO: Give the node backend access to windowmanager Window-like functionality\r\n// This is Electron's main process:\r\nconst { Vector, BoundingBox } = windowmanager.geometry;\r\n\r\n// TODO: Solve event syncing between windows\r\nBrowserWindow.prototype._notifyReady = function () {\r\n    for (let other of BrowserWindow.getAllWindows()) {\r\n        other.webContents.send('window-create', this.id);\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._ensureDockSystem = function () {\r\n    // Make sure docked group exists:\r\n    if (this._dockedGroup === undefined) {\r\n        this._dockedGroup = [this];\r\n\r\n        this.on('closed', function () {\r\n            // Clean up the dock system when this window closes:\r\n            this.undock();\r\n        });\r\n\r\n        this.on('maximize', function () {\r\n            this.undock(); // TODO: Support changing size when docked.\r\n        });\r\n\r\n        this.on('minimize', function () {\r\n            this._dockMinimize();\r\n        });\r\n\r\n        this.on('restore', function () {\r\n            for (let other of this._dockedGroup) {\r\n                if (other !== this) {\r\n                    other.restore();\r\n                }\r\n            }\r\n        });\r\n\r\n        let lastBounds = this.getBounds();\r\n\r\n        this.on('move', function () {\r\n            const newBounds = this.getBounds();\r\n\r\n            // this._dockMoveTo(newBounds.x, newBounds.y, [lastBounds.x, lastBounds.y]);\r\n            lastBounds = newBounds;\r\n        });\r\n\r\n        this.on('resize', function () {\r\n            const newBounds = this.getBounds();\r\n\r\n            if (newBounds.width !== lastBounds.width || newBounds.height !== lastBounds.height) {\r\n                this.undock(); // TODO: Support changing size when docked.\r\n            }\r\n            // TODO: Handle resize positions of other docked windows\r\n            //       This requires reworking how windows are docked/connected\r\n            //       (they must be docked to edges of windows, not the windows themselves)\r\n            /* for (let index = 0; index < this._dockedGroup.length; index += 1) {\r\n                const other = this._dockedGroup[index];\r\n\r\n                if (other !== this) {\r\n                    other.setPosition()\r\n                }\r\n            }*/\r\n\r\n            lastBounds = newBounds;\r\n        });\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype.dock = function (otherID) {\r\n    this._ensureDockSystem();\r\n\r\n    // Resolve otherID, and fail if otherID doesn't exist.\r\n    const other = BrowserWindow.fromId(otherID);\r\n\r\n    if (other === undefined) { return; } // Failed to find other. TODO: Return error\r\n\r\n    // If other is already in the group, return:\r\n    if (this._dockedGroup.indexOf(other) >= 0) { return; }\r\n\r\n    // Make sure docked group exists:\r\n    other._ensureDockSystem();\r\n\r\n    // Loop through all windows in otherGroup and add them to this's group:\r\n    for (let otherWin of other._dockedGroup) {\r\n        this._dockedGroup.push(otherWin);\r\n        // Sharing the array between window objects makes it easier to manage:\r\n        otherWin._dockedGroup = this._dockedGroup;\r\n    }\r\n\r\n    // TODO: Check if otherGroup is touching\r\n};\r\n\r\nBrowserWindow.prototype.undock = function () {\r\n    this._ensureDockSystem();\r\n\r\n    // Check to see if window is already undocked:\r\n    if (this._dockedGroup.length === 1) { return; }\r\n\r\n    // Undock this:\r\n    this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\r\n    this._dockedGroup = [this];\r\n\r\n    // TODO: Redock those still touching, EXCEPT 'this'.\r\n};\r\n\r\nBrowserWindow.prototype._dockFocus = function () {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        if (window !== this) {\r\n            window.setAlwaysOnTop(true);\r\n            window.setAlwaysOnTop(false);\r\n        }\r\n    }\r\n    this.setAlwaysOnTop(true);\r\n    this.setAlwaysOnTop(false);\r\n};\r\n\r\nBrowserWindow.prototype._dragStart = function () {\r\n    // if (!this.emit('drag-start')) { return; } // Allow preventing drag\r\n    this._ensureDockSystem();\r\n\r\n    this.restore();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window._dragStartPos = window.getPosition();\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._getBounds = function () {\r\n    const bounds = this.getBounds();\r\n\r\n    return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\r\n};\r\n\r\nBrowserWindow.prototype._dragBy = function (deltaLeft, deltaTop) {\r\n    this._ensureDockSystem();\r\n\r\n    // Perform Snap:\r\n    const thisBounds = this._getBounds().moveTo(this._dragStartPos[0] + deltaLeft,\r\n                                                this._dragStartPos[1] + deltaTop);\r\n    let snapDelta = new Vector(NaN, NaN);\r\n\r\n    for (let other of BrowserWindow.getAllWindows()) {\r\n        if (other._dockedGroup !== this._dockedGroup) {\r\n            snapDelta.setMin(thisBounds.getSnapDelta(other._getBounds()));\r\n        }\r\n    }\r\n    deltaLeft += snapDelta.left || 0;\r\n    deltaTop += snapDelta.top || 0;\r\n\r\n    for (let other of this._dockedGroup) {\r\n        let pos = other._dragStartPos;\r\n\r\n        // If other doesn't have a drag position, start it:\r\n        if (pos === undefined) {\r\n            pos = other._dragStartPos = other.getPosition();\r\n            pos[0] -= deltaLeft;\r\n            pos[1] -= deltaTop;\r\n        }\r\n\r\n        other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dragStop = function () {\r\n    this._ensureDockSystem();\r\n\r\n    // Dock to those it snapped to:\r\n    const thisBounds = this._getBounds();\r\n\r\n    for (let other of BrowserWindow.getAllWindows()) {\r\n        if (thisBounds.isTouching(other._getBounds())) {\r\n            this.dock(other.id);\r\n        }\r\n    }\r\n\r\n    for (let window of this._dockedGroup) {\r\n        delete window._dragStartPos;\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockMoveTo = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    const oldPos = this.getPosition();\r\n    const deltaLeft = left - oldPos[0];\r\n    const deltaTop = top - oldPos[1];\r\n\r\n    for (let other of this._dockedGroup) {\r\n        const pos = other.getPosition();\r\n\r\n        other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockMinimize = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window.minimize();\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockHide = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window.hide();\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockShow = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window.show();\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/node/Window.js","import windowmanager from '../global';\r\nimport readySync from '../../ready';\r\nimport Window from './Window';\r\nconst { ipcRenderer } = window.nodeRequire('electron');\r\n\r\nwindowmanager.messagebus = (() => {\r\n    // TODO: Optimize Electron's messagebus by keeping track of listeners\r\n    //       in the main process for early termination.\r\n    // TODO: Listener cleanup on this window, or other window close.\r\n    // TODO: Use a custom eventName, so to not collide with current ones.\r\n    let wrappedListeners = {};\r\n    let windowWrappedListeners = {};\r\n\r\n    function wrapListener(window, listener) {\r\n        return (_, message) => {\r\n            // If listener only listens from a specific window, check that this message is from that window:\r\n            if (window && window._id !== message.winID) { return; }\r\n\r\n            const fromWindow = windowmanager.Window.getByID(message.winID);\r\n\r\n            // Don't execute listeners when the sender is the same as the listener:\r\n            if (fromWindow._id === windowmanager.Window.current._id) { return; }\r\n\r\n            listener.apply(fromWindow, message.args);\r\n            // TODO: Send response if response is expected\r\n        };\r\n    }\r\n\r\n    return {\r\n        send: (eventName, ...args) => {\r\n            const curWin = windowmanager.Window.current;\r\n            const message = {\r\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\r\n                winID: curWin._id,\r\n                event: eventName,\r\n                args: args // If the first arg is a window, it gets removed later.\r\n            };\r\n\r\n            if (args.length > 0 && args[0] instanceof Window) {\r\n                // Remove window from args in message:\r\n                const window = args.shift(); // args is by reference in message currently\r\n\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === curWin._id) { return; }\r\n\r\n                window._window.webContents.send(eventName, message);\r\n            } else {\r\n                for (const window of windowmanager.Window.getAll()) {\r\n                    if (window !== curWin) {\r\n                        window._window.webContents.send(eventName, message);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        on: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            const onMessage = wrapListener(window, listener);\r\n\r\n            if (window !== undefined) {\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === windowmanager.Window.current._id) { return; }\r\n\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                winLisGroup[eventName].set(listener, onMessage);\r\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\r\n                wrappedListeners[eventName].set(listener, onMessage);\r\n            }\r\n            ipcRenderer.on(eventName, onMessage);\r\n        },\r\n        off: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                ipcRenderer.removeListener(eventName, winLisGroup[eventName].delete(listener));\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                ipcRenderer.removeListener(eventName, wrappedListeners[eventName].get(listener));\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nreadySync._deref();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/renderer/index.js","import windowmanager from '../global';\r\nimport { EventHandler } from '../../../utils/index';\r\nimport { BoundingBox, Position, Size } from '../../../geometry/index';\r\nconst { ipcRenderer, remote } = window.nodeRequire('electron');\r\nconst url = window.nodeRequire('url');\r\nconst BrowserWindow = remote.BrowserWindow;\r\n\r\nconst currentWin = remote.getCurrentWindow();\r\nconst defaultConfig = {\r\n    width: 600,\r\n    height: 600,\r\n    frame: false,\r\n    resizable: true,\r\n    hasShadow: false,\r\n    icon: 'favicon.ico',\r\n    webPreferences: {\r\n        nodeIntegration: false,\r\n        preload: window.nodeRequire.windowmanagerPath\r\n    }\r\n};\r\nconst configMap = {\r\n    left: 'x',\r\n    top: 'y'\r\n};\r\nconst acceptedEventHandlers = [\r\n    'ready',\r\n    'drag-start', 'drag-before', 'drag-stop',\r\n    'dock-before',\r\n    'move', 'move-before',\r\n    'resize-before', 'close', 'minimize'];\r\n\r\nclass Window extends EventHandler {\r\n    constructor(config) {\r\n        // Call the parent constructor:\r\n        super(acceptedEventHandlers);\r\n\r\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\r\n        const isArgConfig = (config.webContents === undefined); // TODO: Improve checking of arguments.\r\n\r\n        if (isArgConfig) {\r\n            for (const prop in config) {\r\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\r\n                    config[configMap[prop]] = config[prop];\r\n                    delete config[prop];\r\n                }\r\n            }\r\n            for (const prop in defaultConfig) {\r\n                if (defaultConfig.hasOwnProperty(prop)) {\r\n                    config[prop] = config[prop] || defaultConfig[prop];\r\n                }\r\n            }\r\n            let _url = config.url;\r\n\r\n            delete config.url;\r\n\r\n            this._window = new BrowserWindow(config);\r\n            this._id = this._window.id;\r\n            config.title = config.title == null ? this._id : config.title;\r\n            // The following logic works like (in logical if-order):\r\n            //       1. If url has 'http' or 'file' at start, then use url, no modification.\r\n            //       2. If url has no '/', take location.href and remove all stuff up till last /, then append url.\r\n            //       3. If url has '/':\r\n            //          a. If location.href has 'http', extract the root url (domain) and append url.\r\n            //          b. If location.href has 'file', take remote.getGlobal('workingDir'), and then append url.\r\n            // Resolve url:\r\n            if (!/^(file|http)/i.test(_url)) {\r\n                if (_url[0] !== '/') {\r\n                    _url = url.resolve(location.href, _url); // TODO: Is this unsafe with '..'?\r\n                } else if (/^http/i.test(location.href)) {\r\n                    _url = location.origin + _url; // TODO: Safe?\r\n                } else if (/^file/i.test(location.href)) {\r\n                    _url = remote.getGlobal('workingDir') + _url; // TODO: Safe?\r\n                }\r\n                // If can\\'t determine url to load, then attempt to just load the url.\r\n            }\r\n            this._window.loadURL(_url);\r\n            this._window.setTitle(config.title);\r\n        } else {\r\n            this._window = config;\r\n            this._id = this._window.id;\r\n        }\r\n        windowmanager._windows.set(this._id, this);\r\n        this._window._ensureDockSystem();\r\n\r\n        // Setup _window event listeners:\r\n        // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\r\n        const thisWindow = this;\r\n\r\n        function _onmove() {\r\n            thisWindow.emit('move'); // TODO: Pass what position it is at.\r\n        }\r\n        this._window.on('move', _onmove);\r\n\r\n        function _onminimize() {\r\n            thisWindow.emit('minimize'); // TODO: Pass what position it is at.\r\n        }\r\n        this._window.on('minimize', _onminimize);\r\n\r\n        function _onclose() {\r\n            window.removeEventListener('beforeunload', _oncurrclose); // eslint-disable-line no-use-before-define\r\n            windowmanager._windows.delete(thisWindow._id);\r\n            thisWindow._isClosed = true;\r\n            thisWindow.emit('close');\r\n            thisWindow._window = undefined;\r\n            // TODO: Clean up ALL listeners\r\n        }\r\n\r\n        function _oncurrclose() {\r\n            windowmanager._windows.delete(thisWindow._id);\r\n            thisWindow._window.removeListener('move', _onmove);\r\n            thisWindow._window.removeListener('close', _onclose);\r\n            thisWindow._window.removeListener('minimize', _onminimize);\r\n        }\r\n\r\n        // Register _oncurrclose when page changes or window closes to clean up listeners:\r\n        window.addEventListener('beforeunload', _oncurrclose);\r\n\r\n        // If window isn't currentWin, execute local event listeners:\r\n        if (this._window !== currentWin) {\r\n            this._window.on('close', _onclose);\r\n        }\r\n\r\n        this._isClosed = false;\r\n        this._ready = true;\r\n        if (isArgConfig) { this._window._notifyReady(); }\r\n    }\r\n\r\n    isReady() {\r\n        return this._window !== undefined && !this._isClosed();\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\r\n        if (this.isReady()) { return callback.call(this); }\r\n\r\n        this.once('ready', callback);\r\n    }\r\n\r\n    isClosed() {\r\n        return this._isClosed;\r\n    }\r\n\r\n    getPosition() {\r\n        const pos = this._window.getPosition();\r\n\r\n        return new Position(pos[0], pos[1]);\r\n    }\r\n\r\n    getWidth() {\r\n        const size = this._window.getSize();\r\n\r\n        return size[0];\r\n    }\r\n\r\n    getHeight() {\r\n        const size = this._window.getSize();\r\n\r\n        return size[1];\r\n    }\r\n\r\n    getSize() {\r\n        const size = this._window.getSize();\r\n\r\n        return new Position(size[0], size[1]);\r\n    }\r\n\r\n    getBounds() {\r\n        const bounds = this._window.getBounds();\r\n\r\n        return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\r\n    }\r\n\r\n    getTitle() {\r\n        return this._window.getTitle();\r\n    }\r\n\r\n    setTitle(newTitle) {\r\n        if (!newTitle) { throw new Error('setTitle requires one argument of type String'); }\r\n        this._window.setTitle(newTitle);\r\n    }\r\n\r\n    isHidden() {\r\n        return !this.isShown();\r\n    }\r\n\r\n    isShown() {\r\n        return this._window.isVisible();\r\n    }\r\n\r\n    isMinimized() {\r\n        return this._window.isMinimized();\r\n    }\r\n\r\n    isMaximized() {\r\n        return this._window.isMaximized();\r\n    }\r\n\r\n    isRestored() {\r\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\r\n    }\r\n\r\n    close(callback) {\r\n        if (this.isClosed()) { return callback && callback(); }\r\n\r\n        this._window.close();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    minimize(callback) {\r\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\r\n\r\n        this._window._dockMinimize();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    maximize(callback) {\r\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\r\n\r\n        this._window.maximize();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    show(callback) {\r\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\r\n\r\n        this._window._dockShow();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    hide(callback) {\r\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\r\n\r\n        this._window._dockHide();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    restore(callback) {\r\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\r\n\r\n        this._window.restore();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    bringToFront(callback) {\r\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\r\n\r\n        this._window.setAlwaysOnTop(true);\r\n        this._window.setAlwaysOnTop(false);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    focus(callback) {\r\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\r\n\r\n        this._window.focus();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    resizeTo(width, height, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        const size = new Position(width, height);\r\n\r\n        this._window.setSize(size.left, size.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    moveTo(left, top, callback) {\r\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\r\n        const pos = new Position(left, top);\r\n\r\n        this._window._dockMoveTo(pos.left, pos.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    moveBy(deltaLeft, deltaTop, callback) {\r\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\r\n        const bounds = this.getBounds();\r\n        const deltaPos = new Position(deltaLeft, deltaTop);\r\n\r\n        this._window._dockMoveTo(bounds.left + deltaPos.left, bounds.top + deltaPos.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    setSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this._window.setSize(size.left, size.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    setBounds(left, top, right, bottom, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        const bounds = new BoundingBox(left, top, right, bottom);\r\n\r\n        this._window.setBounds({\r\n            x: bounds.left,\r\n            y: bounds.top,\r\n            width: bounds.getWidth(),\r\n            height: bounds.getHeight()\r\n        });\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    dock(other) {\r\n        this._window.dock(other._window.id);\r\n    }\r\n\r\n    undock() {\r\n        this._window.undock();\r\n    }\r\n\r\n    static getAll() {\r\n        return Array.from(windowmanager._windows.values());\r\n    }\r\n\r\n    static getByID(id) {\r\n        return windowmanager._windows.get(id);\r\n    }\r\n\r\n    static getCurrent() {\r\n        return Window.current;\r\n    }\r\n}\r\n\r\n// Handle current window in this context:\r\nWindow.current = new Window(currentWin);\r\n\r\n(function () {\r\n    // Setup handlers on this window:\r\n    let wX = 0;\r\n    let wY = 0;\r\n    let dragging = false;\r\n\r\n    window.addEventListener('focus', function () {\r\n        Window.current._window._dockFocus();\r\n    });\r\n\r\n    window.addEventListener('mousedown', function onDragStart(event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            event.preventDefault();\r\n            dragging = true;\r\n            wX = event.screenX;\r\n            wY = event.screenY;\r\n            Window.current._window._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('touchstart', function (event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            event.preventDefault();\r\n            dragging = true;\r\n            wX = event.touches[0].screenX;\r\n            wY = event.touches[0].screenY;\r\n            Window.current._window._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mousemove', function (event) {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            Window.current._window._dragBy(event.screenX - wX, event.screenY - wY);\r\n        }\r\n    });\r\n\r\n    window.addEventListener('touchmove', function (event) {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            Window.current._window._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\r\n        }\r\n    });\r\n\r\n    function onDragEnd() {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            dragging = false;\r\n            Window.current._window._dragStop();\r\n        }\r\n    }\r\n    window.addEventListener('mouseup', onDragEnd);\r\n    window.addEventListener('touchend', onDragEnd);\r\n\r\n    // Add context menu:\r\n    let Menu = remote.Menu;\r\n    let MenuItem = remote.MenuItem;\r\n    let rightClickPosition = null;\r\n    let menu = new Menu();\r\n\r\n    menu.append(new MenuItem({\r\n        label: 'Reload',\r\n        accelerator: 'CmdOrCtrl+R',\r\n        click: function () {\r\n            Window.current._window.reload();\r\n        }\r\n    }));\r\n    menu.append(new MenuItem({\r\n        label: 'Reload app and restart children',\r\n        click: function () {\r\n            // Close ALL windows:\r\n            for (const window of windowmanager._windows.values()) {\r\n                window.close();\r\n            }\r\n            // Relaunch app:\r\n            remote.app.relaunch();\r\n            remote.app.exit(0);\r\n        }\r\n    }));\r\n    menu.append(new MenuItem({ type: 'separator' }));\r\n    menu.append(new MenuItem({\r\n        label: 'Inspect Element',\r\n        accelerator: 'CmdOrCtrl+Shift+I',\r\n        click: function () {\r\n            Window.current._window.inspectElement(rightClickPosition.x, rightClickPosition.y);\r\n        }\r\n    }));\r\n\r\n    window.addEventListener('contextmenu', function (event) {\r\n        event.preventDefault();\r\n        rightClickPosition = { x: event.x, y: event.y };\r\n        menu.popup(Window.current._window);\r\n    }, false);\r\n})();\r\n\r\nfunction resolveWindowWithID(id) {\r\n    let window = windowmanager._windows.get(id);\r\n\r\n    if (window) return window;\r\n\r\n    // Window isn't registered yet in windowmanager, so do so:\r\n    let electronWin = BrowserWindow.fromId(id);\r\n\r\n    if (electronWin !== null) {\r\n        return new Window(electronWin);\r\n    }\r\n}\r\n\r\n// Add other browser windows to global windows:\r\nfor (let other of BrowserWindow.getAllWindows()) {\r\n    resolveWindowWithID(other.id);\r\n}\r\n\r\nipcRenderer.on('window-create', function (event, otherID) {\r\n    windowmanager.emit('window-create', resolveWindowWithID(otherID));\r\n});\r\n\r\nwindowmanager.Window = Window;\r\nexport default Window;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/renderer/Window.js","/* global fin */\r\nimport windowmanager from './global';\r\nimport Window from './Window';\r\n\r\nconst APP_UUID = 'app_uuid';\r\n\r\nwindowmanager.messagebus = (() => {\r\n    let wrappedListeners = {};\r\n    let windowWrappedListeners = {};\r\n\r\n    function wrapListener(listener) {\r\n        return (message) => {\r\n            const window = Window.getByID(message.winID);\r\n\r\n            // Don't execute listeners when the sender is the same as the listener:\r\n            if (window._id === Window.current._id) { return; }\r\n\r\n            listener.apply(window, message.args);\r\n            // TODO: Send response if response is expected\r\n        };\r\n    }\r\n\r\n    return {\r\n        send: (eventName, ...args) => {\r\n            // TODO: Check if ready? Dunno if needed\r\n            const curWin = Window.current;\r\n            const message = {\r\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\r\n                winID: curWin._id,\r\n                event: eventName,\r\n                args: args // If the first arg is a window, it gets removed later.\r\n            };\r\n\r\n            if (args.length > 0 && args[0] instanceof Window) {\r\n                // Remove window from args in message:\r\n                const window = args.shift(); // args is by reference in message currently\r\n\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === curWin._id) { return; }\r\n\r\n                fin.desktop.InterApplicationBus.send(Window.current._window[APP_UUID], window._id,\r\n                                                        eventName, message);\r\n            } else {\r\n                // TODO: Possibly switch the below out for a loop through all windows?\r\n                fin.desktop.InterApplicationBus.send(Window.current._window[APP_UUID], eventName, message);\r\n            }\r\n        },\r\n        on: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            const onMessage = wrapListener(listener);\r\n\r\n            if (window !== undefined) {\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === Window.current._id) { return; }\r\n\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                winLisGroup[eventName].set(listener, onMessage);\r\n                fin.desktop.InterApplicationBus.subscribe(Window.current._window[APP_UUID], window._id,\r\n                                                            eventName, onMessage);\r\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\r\n                wrappedListeners[eventName].set(listener, onMessage);\r\n                fin.desktop.InterApplicationBus.subscribe(Window.current._window[APP_UUID], eventName, onMessage);\r\n            }\r\n        },\r\n        off: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                fin.desktop.InterApplicationBus.unsubscribe(Window.current._window[APP_UUID], window._window._id,\r\n                                                eventName, winLisGroup[eventName].delete(listener));\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                fin.desktop.InterApplicationBus.unsubscribe(Window.current._window[APP_UUID], eventName,\r\n                                                            wrappedListeners[eventName].delete(listener));\r\n            }\r\n        }\r\n    };\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/index.js","/* global fin */\r\nimport windowmanager from '../../global';\r\nimport readySync from '../ready';\r\nimport { EventHandler } from '../../utils/index';\r\n\r\nwindowmanager.runtime.name = 'OpenFin';\r\nwindowmanager.runtime.version = undefined;\r\nwindowmanager.runtime.isOpenFin = true;\r\n\r\nlet setVersion = readySync.ref(function (version) {\r\n    windowmanager.runtime.version = version;\r\n});\r\n\r\nfin.desktop.main(readySync.ref(function () {\r\n    fin.desktop.System.getVersion(setVersion); // TODO: Handle errorCallback\r\n\r\n    let app = fin.desktop.Application.getCurrent();\r\n    let mainWindow = app.getWindow().contentWindow;\r\n\r\n    if (mainWindow === window) {\r\n        windowmanager.runtime.isMain = true;\r\n        windowmanager._internalBus = new EventHandler(Object.keys(windowmanager._eventListeners));\r\n        windowmanager._windows = new Map();\r\n    } // children get the above in the constructor of the Window.\r\n\r\n    // Wire the internal bus to emit events on windowmanager:\r\n    windowmanager._internalBus.addPipe(windowmanager);\r\n}));\r\n\r\n// This is used to store info across windows:\r\n// Everything on here gets exported as windowmanager.\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/global.js","/* global fin */\r\nimport windowmanager from './global';\r\nimport readySync from '../ready';\r\nimport { EventHandler, getUniqueWindowName, SyncCallback } from '../../utils/index';\r\nimport { BoundingBox, Position, Size, Vector } from '../../geometry/index';\r\n\r\nconst defaultConfig = {\r\n    defaultWidth: 600,\r\n    defaultHeight: 600,\r\n    frame: false,\r\n    resizable: true,\r\n    saveWindowState: false,\r\n    autoShow: true,\r\n    icon: location.href + 'favicon.ico'\r\n};\r\nconst configMap = {\r\n    title: 'name',\r\n    left: 'defaultLeft',\r\n    top: 'defaultTop',\r\n    width: 'defaultWidth',\r\n    height: 'defaultHeight'\r\n};\r\nconst acceptedEventHandlers = [\r\n    'ready',\r\n    'drag-start', 'drag-before', 'drag-stop',\r\n    'dock-before',\r\n    'move', 'move-before',\r\n    'resize-before', 'close', 'minimize'];\r\nlet currentWin;\r\n\r\nfunction _setupDOM() {\r\n    let thisWindow = this;\r\n\r\n    // TODO: Rewrite to remove setTimeout for the following:\r\n    function setWindows() {\r\n        if (thisWindow._window.contentWindow.windowmanager) {\r\n            thisWindow._window.contentWindow.windowmanager._windows = windowmanager._windows;\r\n            thisWindow._window.contentWindow.windowmanager._internalBus = windowmanager._internalBus;\r\n        } else {\r\n            setTimeout(setWindows, 5);\r\n        }\r\n    }\r\n    setWindows();\r\n\r\n    this._window.getBounds(function (bounds) {\r\n        bounds.right = bounds.left + bounds.width;\r\n        bounds.bottom = bounds.top + bounds.height;\r\n        thisWindow._bounds.set(new BoundingBox(bounds));\r\n    });\r\n\r\n    // Setup _window event listeners:\r\n    // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\r\n    function onBoundsChange(event) {\r\n        event.right = event.left + event.width;\r\n        event.bottom = event.top + event.height;\r\n        thisWindow._bounds.set(new BoundingBox(event));\r\n\r\n        if (event.changeType !== 0) {\r\n            thisWindow.undock(); // Undock on resize. TODO: Allow resize with docking\r\n        }\r\n        if (event.changeType !== 1) {\r\n            thisWindow.emit('move'); // TODO: Pass what position it is at.\r\n        }\r\n    }\r\n    this._window.addEventListener('bounds-changing', onBoundsChange);\r\n    this._window.addEventListener('bounds-changed', onBoundsChange);\r\n\r\n    function onClose() {\r\n        // TODO: Is it possible that onClose might not be called when the window is closed?\r\n        //       What if this event is set up on a window that has closed already, and then this window closes?\r\n        thisWindow._isClosed = true;\r\n        windowmanager._windows.delete(thisWindow._id);\r\n\r\n        // Undock:\r\n        thisWindow.undock();\r\n\r\n        // Move children to parent:\r\n        const parent = thisWindow.getParent();\r\n\r\n        for (const child of thisWindow.getChildren()) {\r\n            // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\r\n            // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\r\n            child.setParent(parent);\r\n        }\r\n        thisWindow.setParent(undefined); // Remove from parent\r\n\r\n        thisWindow.emit('close');\r\n        windowmanager._internalBus.emit('window-close', thisWindow);\r\n        thisWindow._window = undefined;\r\n        // TODO: Clean up ALL listeners\r\n    }\r\n    this._window.addEventListener('closed', onClose);\r\n\r\n    function onMinimized() {\r\n        thisWindow.emit('minimize');\r\n    }\r\n    this._window.addEventListener('minimized', onMinimized);\r\n\r\n    // Setup title element:\r\n    this._titleEl = this._window.contentWindow.document.createElement('title');\r\n    this._titleEl.innerText = this._title;\r\n    this._window.contentWindow.document.head.appendChild(this._titleEl);\r\n\r\n    this._ready = true;\r\n    this.emit('ready');\r\n    windowmanager._internalBus.emit('window-create', this);\r\n};\r\n\r\nclass Window extends EventHandler {\r\n    constructor(config) {\r\n        // Call the parent constructor:\r\n        super(acceptedEventHandlers);\r\n\r\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\r\n        const isArgConfig = (config.app_uuid === undefined);\r\n\r\n        // Setup private variables:\r\n        this._bounds = new BoundingBox();\r\n        this._ready = false;\r\n        // TODO: Identify current states.\r\n        this._isClosed = false;\r\n        this._isHidden = false;\r\n        this._isMinimized = false;\r\n        this._isMaximized = false;\r\n        this._dockedGroup = [this];\r\n        this._children = [];\r\n        this._parent = undefined;\r\n        this._title = undefined;\r\n\r\n        if (isArgConfig) {\r\n            for (const prop in config) {\r\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\r\n                    config[configMap[prop]] = config[prop];\r\n                    delete config[prop];\r\n                }\r\n            }\r\n            for (const prop in defaultConfig) {\r\n                if (defaultConfig.hasOwnProperty(prop)) {\r\n                    config[prop] = config[prop] || defaultConfig[prop];\r\n                }\r\n            }\r\n            this._id = getUniqueWindowName();\r\n            this._title = config.name == null ? this._id : config.name;\r\n            config.name = this._id; // Need name to be unique\r\n\r\n            if (config.parent) {\r\n                config.parent._children.push(this);\r\n                this._parent = config.parent;\r\n                // TODO: Emit event 'child-added' on parent\r\n                delete config.parent;\r\n            }\r\n\r\n            windowmanager._windows.set(this._id, this);\r\n            this._window = new fin.desktop.Window(config, _setupDOM.bind(this), function (err) {\r\n                console.error(err, config);\r\n            });\r\n        } else {\r\n            this._id = config._id || config.name;\r\n            this._title = this._id;\r\n            this._window = config;\r\n            windowmanager._windows.set(this._id, this);\r\n            _setupDOM.call(this);\r\n        }\r\n\r\n        // TODO: Ensure docking system\r\n    }\r\n\r\n    isReady() {\r\n        return this._ready;\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\r\n        if (this.isReady()) { return callback.call(this); }\r\n\r\n        this.once('ready', callback);\r\n    }\r\n\r\n    isClosed() {\r\n        return this._isClosed;\r\n    }\r\n\r\n    getPosition() {\r\n        return this._bounds.getPosition();\r\n    }\r\n\r\n    getWidth() {\r\n        return this._bounds.getWidth();\r\n    }\r\n\r\n    getHeight() {\r\n        return this._bounds.getHeight();\r\n    }\r\n\r\n    getSize() {\r\n        return this._bounds.getSize();\r\n    }\r\n\r\n    getBounds() {\r\n        return this._bounds.clone();\r\n    }\r\n\r\n    getParent() {\r\n        return this._parent;\r\n    }\r\n\r\n    setParent(parent) {\r\n        // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\r\n\r\n        if (parent === this._parent) { return; }\r\n\r\n        if (this._parent) {\r\n            const index = this._parent._children.indexOf(this);\r\n\r\n            if (index >= 0) { this._parent._children.splice(index, 1); }\r\n            // TODO: Emit event 'child-removed' on current parent.\r\n        }\r\n\r\n        if (parent) {\r\n            this._parent = parent;\r\n            this._parent._children.push(this);\r\n            // TODO: Emit event 'child-added on parent'.\r\n        }\r\n    }\r\n\r\n    getChildren() {\r\n        return this._children.slice();\r\n    }\r\n\r\n    addChild(child) {\r\n        child.setParent(this);\r\n    }\r\n\r\n    getTitle() {\r\n        return this._title;\r\n    }\r\n\r\n    setTitle(newTitle) {\r\n        if (!newTitle) { throw new Error('setTitle requires one argument of type String'); }\r\n        this._titleEl.innerText = this._title = newTitle;\r\n    }\r\n\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n\r\n    isShown() {\r\n        return !this._isHidden;\r\n    }\r\n\r\n    isMinimized() {\r\n        return this._isMinimized;\r\n    }\r\n\r\n    isMaximized() {\r\n        return this._isMaximized;\r\n    }\r\n\r\n    isRestored() {\r\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\r\n    }\r\n\r\n    close(callback) {\r\n        if (this.isClosed()) { return callback && callback(); }\r\n        this._window.close(callback);\r\n    }\r\n\r\n    minimize(callback) {\r\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isMinimized = true;\r\n            window._window.minimize(callback.ref());\r\n        }\r\n    }\r\n\r\n    maximize(callback) {\r\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\r\n\r\n        this._isMaximized = true;\r\n        this._window.maximize(callback);\r\n    }\r\n\r\n    show(callback) {\r\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isHidden = false;\r\n            window._window.show(callback.ref());\r\n        }\r\n    }\r\n\r\n    hide(callback) {\r\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isHidden = true;\r\n            window._window.hide(callback.ref());\r\n        }\r\n    }\r\n\r\n    restore(callback) {\r\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isHidden = false;\r\n            window._isMinimized = false;\r\n            window._isMaximized = false;\r\n            window._window.restore(callback.ref());\r\n        }\r\n    }\r\n\r\n    bringToFront(callback) {\r\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\r\n        let thisWindow = this;\r\n\r\n        let beforeCallback = new SyncCallback(function () {\r\n            thisWindow._window.bringToFront(callback);\r\n        });\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) {\r\n                window._window.bringToFront(beforeCallback.ref());\r\n            }\r\n        }\r\n    }\r\n\r\n    focus(callback) {\r\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\r\n        let thisWindow = this;\r\n\r\n        let beforeCallback = new SyncCallback(function () {\r\n            thisWindow._window.focus(callback);\r\n        });\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) {\r\n                window._window.focus(beforeCallback.ref());\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeTo(width, height, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('resize-before')) { return; } // Allow preventing resize\r\n        let size = new Position(width, height);\r\n\r\n        this._window.resizeTo(size.left, size.top, 'top-left', callback);\r\n    }\r\n\r\n    moveTo(left, top, callback) {\r\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = (new Position(left, top)).subtract(this.getPosition());\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._bounds.moveTo(pos);\r\n            window._window.moveTo(pos.left, pos.top, callback.ref());\r\n        }\r\n    }\r\n\r\n    moveBy(deltaLeft, deltaTop, callback) {\r\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = new Position(deltaLeft, deltaTop);\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._bounds.moveTo(pos);\r\n            window._window.moveTo(pos.left, pos.top, callback.ref());\r\n        }\r\n    }\r\n\r\n    setSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this._window.resizeTo(size.left, size.top, 'top-left', callback);\r\n    }\r\n\r\n    setBounds(left, top, right, bottom, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        let bounds = new BoundingBox(left, top, right, bottom);\r\n\r\n        this._window.setBounds(bounds.left, bounds.top, bounds.right, bounds.bottom, callback);\r\n    }\r\n\r\n    dock(other) {\r\n        if (!this.emit('dock-before')) { return; } // Allow preventing dock\r\n        if (other === undefined) { return; } // Failed to find other. TODO: Return error\r\n\r\n        // If other is already in the group, return:\r\n        if (this._dockedGroup.indexOf(other) >= 0) { return; }\r\n\r\n        // Loop through all windows in otherGroup and add them to this's group:\r\n        for (let otherWin of other._dockedGroup) {\r\n            this._dockedGroup.push(otherWin);\r\n            // Sharing the array between window objects makes it easier to manage:\r\n            otherWin._dockedGroup = this._dockedGroup;\r\n        }\r\n\r\n        // TODO: Check if otherGroup is touching\r\n    }\r\n\r\n    undock(other) {\r\n        // Check to see if window is already undocked:\r\n        if (this._dockedGroup.length === 1) { return; }\r\n\r\n        // Undock this:\r\n        this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\r\n        this._dockedGroup = [this];\r\n\r\n        // TODO: Redock those still touching, EXCEPT 'this'.\r\n    }\r\n\r\n    _dragStart() {\r\n        if (!this.emit('drag-start')) { return; } // Allow preventing drag\r\n        for (let window of this._dockedGroup) {\r\n            window._dragStartPos = window.getPosition();\r\n        }\r\n    }\r\n\r\n    _dragBy(deltaLeft, deltaTop) {\r\n        if (!this.emit('drag-before')) { return; } // Allow preventing drag\r\n        // Perform Snap:\r\n        const thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft,\r\n                                                    this._dragStartPos.top + deltaTop);\r\n        let snapDelta = new Vector(NaN, NaN);\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (other._dockedGroup !== this._dockedGroup) {\r\n                snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\r\n            }\r\n        }\r\n        deltaLeft += snapDelta.left || 0;\r\n        deltaTop += snapDelta.top || 0;\r\n\r\n        for (let other of this._dockedGroup) {\r\n            let pos = other._dragStartPos;\r\n\r\n            // If other doesn't have a drag position, start it:\r\n            if (pos === undefined) {\r\n                pos = other._dragStartPos = other.getPosition();\r\n                pos.left -= deltaLeft;\r\n                pos.top -= deltaTop;\r\n            }\r\n\r\n            other._window.moveTo(pos.left + deltaLeft, pos.top + deltaTop);\r\n        }\r\n    }\r\n\r\n    _dragStop() {\r\n        // Dock to those it snapped to:\r\n        const thisBounds = this.getBounds();\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (thisBounds.isTouching(other.getBounds())) {\r\n                this.dock(other);\r\n            }\r\n        }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            delete window._dragStartPos;\r\n        }\r\n\r\n        this.emit('drag-stop');\r\n    }\r\n\r\n    static getAll() {\r\n        return Array.from(windowmanager._windows.values());\r\n    }\r\n\r\n    static getByID(id) {\r\n        return windowmanager._windows.get(id);\r\n    }\r\n\r\n    static getCurrent() {\r\n        return Window.current;\r\n    }\r\n}\r\n\r\nfunction setupCurrentWindow() {\r\n    Window.current = windowmanager._windows.get(currentWin.name) || new Window(currentWin);\r\n\r\n    // Setup handlers on this window:\r\n    let wX = 0;\r\n    let wY = 0;\r\n    let dragging = false;\r\n\r\n    window.addEventListener('mousedown', function onDragStart(event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            event.preventDefault();\r\n            dragging = true;\r\n            wX = event.screenX;\r\n            wY = event.screenY;\r\n            Window.current._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('touchstart', function (event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            event.preventDefault();\r\n            dragging = true;\r\n            wX = event.touches[0].screenX;\r\n            wY = event.touches[0].screenY;\r\n            Window.current._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mousemove', function (event) {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\r\n        }\r\n    });\r\n\r\n    window.addEventListener('touchmove', function (event) {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            Window.current._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\r\n        }\r\n    });\r\n\r\n    function onDragEnd() {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            dragging = false;\r\n            Window.current._dragStop();\r\n        }\r\n    }\r\n    window.addEventListener('mouseup', onDragEnd);\r\n    window.addEventListener('touchend', onDragEnd);\r\n}\r\n\r\n// Handle current window in this context:\r\n// TODO: Rewrite to remove setTimeout for the following:\r\nfin.desktop.main(readySync.ref(function () {\r\n    currentWin = fin.desktop.Window.getCurrent();\r\n    let currentReady = readySync.ref(setupCurrentWindow);\r\n\r\n    function getCurrent() {\r\n        if (windowmanager._windows) {\r\n            currentReady();\r\n        } else {\r\n            setTimeout(getCurrent, 5);\r\n        }\r\n    }\r\n    getCurrent();\r\n}));\r\n\r\nwindowmanager.Window = Window;\r\nexport default Window;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/Window.js","import windowmanager from './global';\r\nimport readySync from '../ready';\r\nimport Window from './Window';\r\n\r\n/**\r\n * Message bus for application.\r\n * @namespace\r\n * @alias messagebus\r\n */\r\nwindowmanager.messagebus = (() => {\r\n    // TODO: Utilize iframe communication? Or use messagebus that is currently shared in setup.js?\r\n    let wrappedListeners = {};\r\n    let windowWrappedListeners = {};\r\n\r\n    window.addEventListener('message', function (event) {\r\n        const message = event.data;\r\n        const win = Window.getByID(message.winID);\r\n\r\n        // Don't execute listeners when the sender is the same as the listener:\r\n        if (win._id === Window.current._id) { return; }\r\n\r\n        if (windowWrappedListeners[message.event] != null) {\r\n            // Check to see if the called window is being listened to directly:\r\n            if (windowWrappedListeners[message.event][message.winID] != null) {\r\n                for (const listener of windowWrappedListeners[message.event][message.winID]) {\r\n                    listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\r\n                }\r\n            }\r\n        }\r\n        if (wrappedListeners[message.event] != null) {\r\n            for (const listener of wrappedListeners[message.event]) {\r\n                listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\r\n            }\r\n        }\r\n    }, false);\r\n\r\n    return {\r\n        /**\r\n         * @method\r\n         * @alias messagebus.send\r\n         * @param {String} eventName - the event to send to\r\n         * @param {Window} [window=undefined] - the target window to send to (if not specified, sends to all windows)\r\n         * @param {...*} args Arguments to send to listeners\r\n         */\r\n        send: (eventName, ...args) => {\r\n            // TODO: Check if ready? Dunno if needed\r\n            // TODO: Do we need to add a way to identify if a return is needed?\r\n            const curWin = Window.current;\r\n            const message = {\r\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\r\n                winID: curWin._id,\r\n                event: eventName,\r\n                args: args // If the first arg is a window, it gets removed later.\r\n            };\r\n\r\n            if (args.length > 0 && args[0] instanceof Window) {\r\n                // Remove window from args in message:\r\n                const window = args.shift(); // args is by reference in message currently\r\n\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === curWin._id) { return; }\r\n                // TODO: Save the id of message so we can get the response\r\n                window._window.contentWindow.postMessage(message, '*');\r\n            } else {\r\n                for (const window of windowmanager._windows.values()) {\r\n                    if (curWin !== window) { // Don't send to current window\r\n                        window._window.contentWindow.postMessage(message, '*');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @method\r\n         * @alias messagebus.on\r\n         * @param {String} eventName - the event to listen to\r\n         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n         */\r\n        on: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === Window.current._id) { return; }\r\n                // Replace window.name with some way to identify the unique window\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\r\n                winLisGroup[eventName].add(listener);\r\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                wrappedListeners[eventName].add(listener);\r\n            }\r\n        },\r\n        /**\r\n         * @method\r\n         * @alias messagebus.off\r\n         * @param {String} eventName - the event to remove listener from\r\n         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n         */\r\n        off: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                // Replace window.name with some way to identify the unique window\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\r\n                winLisGroup[eventName].delete(listener);\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                wrappedListeners[eventName].delete(listener);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n// Notify everyone that windowmanager is setup for this window:\r\nreadySync._deref();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/index.js","import windowmanager from '../../global';\r\nimport { EventHandler } from '../../utils/index';\r\n\r\nfunction getBrowserInfo() {\r\n    // Credit: http://www.gregoryvarghese.com/how-to-get-browser-name-and-version-via-javascript/\r\n    let ua = navigator.userAgent;\r\n    let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\r\n    let tem;\r\n\r\n    if (/trident/i.test(M[1])) {\r\n        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n        return { name: 'IE', version: (tem[1] || '') };\r\n    }\r\n    if (M[1] === 'Chrome') {\r\n        tem = ua.match(/\\bOPR\\/(\\d+)/);\r\n        if (tem !== null) { return { name: 'Opera', version: tem[1] }; }\r\n        tem = ua.match(/\\bedge\\/(\\d+)/i);\r\n        if (tem !== null) { return { name: 'Edge', version: tem[1] }; }\r\n    }\r\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\r\n    if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) { M.splice(1, 1, tem[1]); }\r\n    return {\r\n        name: M[0],\r\n        version: M[1]\r\n    };\r\n}\r\n\r\nlet browser = getBrowserInfo();\r\n\r\nwindowmanager.runtime.name = browser.name;\r\nwindowmanager.runtime.version = browser.version;\r\nwindowmanager.runtime.isBrowser = true;\r\nwindowmanager.runtime.isMain = (window.parent === window);\r\n\r\ntry {\r\n    window.parent.document;\r\n} catch (e) {\r\n    // If the above access errors out, it's due to CORS violation.\r\n    // So assume this JavaScript window is the top-level window:\r\n    windowmanager.runtime.isMain = true;\r\n}\r\n\r\nif (windowmanager.runtime.isMain) {\r\n    // This is the main/root window!\r\n    let nextZIndex = 1000; // TODO: Recycle Z-Indexes! In case of a (probably never) overflow!\r\n\r\n    // The following is to fix Edge not sharing Map values across windows:\r\n    class _Map {\r\n        constructor() {\r\n            this._map = Object.create(null);\r\n        }\r\n\r\n        values() {\r\n            let values = Object.keys(this._map);\r\n\r\n            for (let index = 0; index < values.length; index += 1) {\r\n                values[index] = this._map[values[index]];\r\n            }\r\n\r\n            return values;\r\n        }\r\n\r\n        set(key, value) {\r\n            this._map[key] = value;\r\n        }\r\n\r\n        get(key) {\r\n            return this._map[key];\r\n        }\r\n\r\n        delete(key) {\r\n            delete this._map[key];\r\n        }\r\n    }\r\n\r\n    windowmanager._launcher = window;\r\n    windowmanager._internalBus = new EventHandler(Object.keys(windowmanager._eventListeners));\r\n    windowmanager._windows = new _Map();\r\n\r\n    windowmanager._getNextZIndex = () => {\r\n        nextZIndex += 1;\r\n        return nextZIndex;\r\n    };\r\n} else {\r\n    // This is a child window of root!\r\n    windowmanager._launcher = window.parent.windowmanager._launcher || window.parent;\r\n    windowmanager._internalBus = window.parent.windowmanager._internalBus;\r\n    windowmanager._windows = window.parent.windowmanager._windows;\r\n    windowmanager._getNextZIndex = window.parent.windowmanager._getNextZIndex;\r\n}\r\n\r\n// Wire the internal bus to emit events on windowmanager:\r\nwindowmanager._internalBus.addPipe(windowmanager);\r\n\r\n// This is used to store info across windows:\r\n// Everything on here gets exported as windowmanager.\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/global.js","import windowmanager from './global';\r\nimport { EventHandler, getUniqueWindowName } from '../../utils/index';\r\nimport { BoundingBox, Position, Size, Vector } from '../../geometry/index';\r\n\r\nconst defaultConfig = {\r\n    width: 600,\r\n    height: 600,\r\n    frame: false,\r\n    resizable: true,\r\n    saveWindowState: false,\r\n    autoShow: true,\r\n    icon: location.href + 'favicon.ico',\r\n    url: '.',\r\n    minWidth: 100,\r\n    minHeight: 100,\r\n    maxWidth: Infinity,\r\n    maxHeight: Infinity\r\n};\r\nconst configMap = {\r\n};\r\nconst acceptedEventHandlers = [\r\n    'ready',\r\n    'drag-start', 'drag-before', 'drag-stop',\r\n    'dock-before',\r\n    'move', 'move-before',\r\n    'resize-before', 'close', 'minimize'];\r\nconst transformPropNames = ['-ms-transform', '-moz-transform', '-o-transform',\r\n    '-webkit-transform', 'transform'];\r\n\r\n/**\r\n * @callback Callback\r\n * @param {String|null} error - String on error, or null if no error\r\n * @param {Object|null} result - Object on success, or null if error\r\n */\r\n\r\n/**\r\n * A Window class.\r\n * @extends EventHandler\r\n */\r\nclass Window extends EventHandler {\r\n    /**\r\n     * Wraps a window object.\r\n     * @param {Object} config - Configuration\r\n     */\r\n    constructor(config) {\r\n        // Call the parent constructor:\r\n        super(acceptedEventHandlers);\r\n\r\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\r\n        const isArgConfig = !(config instanceof window.Window);\r\n\r\n        // Setup private variables:\r\n        this._ready = false;\r\n        // TODO: Identify current states.\r\n        this._isClosed = false;\r\n        this._isHidden = false;\r\n        this._isMinimized = false;\r\n        this._isMaximized = false;\r\n        this._dockedGroup = [this];\r\n        this._children = []; // TODO: Add way to remove or change heirarchy.\r\n        this._parent = undefined;\r\n        this._title = undefined;\r\n        this._id = getUniqueWindowName();\r\n\r\n        if (isArgConfig) {\r\n            for (const prop in config) {\r\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\r\n                    config[configMap[prop]] = config[prop];\r\n                    delete config[prop];\r\n                }\r\n            }\r\n            for (const prop in defaultConfig) {\r\n                if (defaultConfig.hasOwnProperty(prop)) {\r\n                    config[prop] = config[prop] || defaultConfig[prop];\r\n                }\r\n            }\r\n            this._title = config.title == null ? this._id : config.title;\r\n\r\n            if (config.parent) {\r\n                config.parent._children.push(this);\r\n                this._parent = config.parent;\r\n                // TODO: Emit event 'child-added' on parent\r\n                delete config.parent;\r\n            }\r\n\r\n            this._minSize = new BoundingBox(config.minWidth, config.minHeight);\r\n            this._maxSize = new BoundingBox(config.maxWidth, config.maxHeight);\r\n\r\n            let newWindow = windowmanager._launcher.document.createElement('iframe');\r\n\r\n            newWindow.src = config.url;\r\n            newWindow.style.position = 'absolute';\r\n            if (!Number.isFinite(config.left)) {\r\n                config.left = (windowmanager._launcher.innerWidth - config.width) / 2;\r\n            }\r\n            newWindow.style.left = config.left + 'px';\r\n            if (!Number.isFinite(config.top)) {\r\n                config.top = (windowmanager._launcher.innerHeight - config.height) / 2;\r\n            }\r\n            newWindow.style.top = config.top + 'px';\r\n            newWindow.style.width = config.width + 'px';\r\n            newWindow.style.height = config.height + 'px';\r\n            newWindow.style.minWidth = this._minSize.left + 'px';\r\n            newWindow.style.minHeight = this._minSize.top + 'px';\r\n            newWindow.style.maxWidth = this._maxSize.left + 'px';\r\n            newWindow.style.maxHeight = this._maxSize.top + 'px';\r\n            newWindow.style.margin = 0;\r\n            newWindow.style.padding = 0;\r\n            newWindow.style.border = 0;\r\n            newWindow.style.resize = 'both';\r\n            newWindow.style.overflow = 'auto';\r\n            windowmanager._launcher.document.body.appendChild(newWindow);\r\n\r\n            this._window = newWindow;\r\n            windowmanager._windows.set(this._id, this);\r\n            this._ready = true;\r\n            this.emit('ready');\r\n            windowmanager._internalBus.emit('window-create', this);\r\n            this.bringToFront();\r\n            this.focus();\r\n        } else {\r\n            this._minSize = new BoundingBox(defaultConfig.minWidth, defaultConfig.minHeight);\r\n            this._maxSize = new BoundingBox(defaultConfig.maxWidth, defaultConfig.maxHeight);\r\n            this._window = config.document.body;\r\n            windowmanager._windows.set(this._id, this);\r\n            this._ready = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the {@link Window} instance is created, not closed, and ready for method calls.\r\n     * @returns {Boolean}\r\n     */\r\n    isReady() {\r\n        return this._ready;\r\n    }\r\n\r\n    /**\r\n     * Calls a callback when window is ready and setup.\r\n     * @param {Callback=}\r\n     */\r\n    onReady(callback) {\r\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\r\n        if (this.isReady()) { return callback.call(this); }\r\n\r\n        this.once('ready', callback);\r\n    }\r\n\r\n    /**\r\n     * Returns whether window has been closed already.\r\n     * @returns {Boolean}\r\n     */\r\n    isClosed() {\r\n        return this._isClosed;\r\n    }\r\n\r\n    /**\r\n     * Returns window's current position.\r\n     * @returns {Vector}\r\n     */\r\n    getPosition() {\r\n        return new Position(this._window.getBoundingClientRect());\r\n    }\r\n\r\n    getMinWidth() {\r\n        return this._minSize.left;\r\n    }\r\n\r\n    /**\r\n     * Returns window's width.\r\n     * @returns {Number}\r\n     */\r\n    getWidth() {\r\n        return this._window.getBoundingClientRect().width;\r\n    }\r\n\r\n    getMaxWidth() {\r\n        return this._maxSize.left;\r\n    }\r\n\r\n    getMinHeight() {\r\n        return this._minSize.top;\r\n    }\r\n\r\n    /**\r\n     * Returns window's height.\r\n     * @returns {Number}\r\n     */\r\n    getHeight() {\r\n        return this._window.getBoundingClientRect().height;\r\n    }\r\n\r\n    getMaxHeight() {\r\n        return this._maxSize.top;\r\n    }\r\n\r\n    getMinSize() {\r\n        return this._minSize.clone();\r\n    }\r\n\r\n    /**\r\n     * Returns window's size.\r\n     * @returns {Size}\r\n     */\r\n    getSize() {\r\n        let box = this._window.getBoundingClientRect();\r\n\r\n        return new Size(box.width, box.height);\r\n    }\r\n\r\n    getMaxSize() {\r\n        return this._maxSize.clone();\r\n    }\r\n\r\n    /**\r\n     * Returns window's bounding box.\r\n     * @returns {BoundingBox}\r\n     */\r\n    getBounds() {\r\n        return new BoundingBox(this._window.getBoundingClientRect());\r\n    }\r\n\r\n    getParent() {\r\n        return this._parent;\r\n    }\r\n\r\n    setParent(parent) {\r\n        // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\r\n        if (parent === this._parent) { return; }\r\n\r\n        if (this._parent) {\r\n            const index = this._parent._children.indexOf(this);\r\n\r\n            if (index >= 0) { this._parent._children.splice(index, 1); }\r\n            // TODO: Emit event 'child-removed' on current parent.\r\n        }\r\n\r\n        if (parent) {\r\n            this._parent = parent;\r\n            this._parent._children.push(this);\r\n            // TODO: Emit event 'child-added on parent'.\r\n        }\r\n    }\r\n\r\n    getChildren() {\r\n        return this._children.slice();\r\n    }\r\n\r\n    addChild(child) {\r\n        child.setParent(this);\r\n    }\r\n\r\n    /**\r\n     * Returns window's title.\r\n     * @returns {String}\r\n     */\r\n    getTitle() {\r\n        return this._title;\r\n    }\r\n\r\n    /**\r\n     * Sets window's title.\r\n     * @param {String}\r\n     */\r\n    setTitle(title) {\r\n        if (!title) { throw new Error('setTitle requires one argument of type String'); }\r\n        this._title = title;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is hidden.\r\n     * @returns {Boolean}\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is not hidden.\r\n     * @returns {Boolean}\r\n     */\r\n    isShown() {\r\n        return !this._isHidden;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is minimized.\r\n     * @returns {Boolean}\r\n     */\r\n    isMinimized() {\r\n        return this._isMinimized;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is maximized.\r\n     * @returns {Boolean}\r\n     */\r\n    isMaximized() {\r\n        return this._isMaximized;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is not hidden or minimize or maximized.\r\n     * @returns {Boolean}\r\n     */\r\n    isRestored() {\r\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\r\n    }\r\n\r\n    /**\r\n     * Closes the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    close(callback) {\r\n        if (this.isClosed()) { return callback && callback(); }\r\n\r\n        this._window.parentElement.removeChild(this._window);\r\n        windowmanager._windows.delete(this._id);\r\n\r\n        // Undock:\r\n        this.undock();\r\n\r\n        // Move children to parent:\r\n        const parent = this.getParent();\r\n\r\n        for (const child of this.getChildren()) {\r\n            // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\r\n            // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\r\n            child.setParent(parent);\r\n        }\r\n        this.setParent(undefined); // Remove from parent\r\n\r\n        this._isClosed = true;\r\n        if (callback) { callback(); }\r\n        this.emit('close');\r\n        windowmanager._internalBus.emit('window-close', this);\r\n    }\r\n\r\n    /**\r\n     * Minimizes the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    minimize(callback) {\r\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\r\n\r\n        // TODO: What do we do on minimize in this runtime?\r\n        for (let window of this._dockedGroup) {\r\n            window._isMinimized = true;\r\n            window.emit('minimize');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Maximizes the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    maximize(callback) {\r\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\r\n\r\n        this._restoreBounds = this.getBounds();\r\n        this._window.style.left = 0;\r\n        this._window.style.top = 0;\r\n        this._window.style.width = '100%';\r\n        this._window.style.height = '100%';\r\n        this._isMaximized = true;\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Unhides the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    show(callback) {\r\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            window._window.style.display = '';\r\n            window._isHidden = false;\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Hides the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    hide(callback) {\r\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            window._window.style.display = 'none';\r\n            window._isHidden = true;\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Restores the window instance from the minimized or maximized states.\r\n     * @param {Callback=}\r\n     */\r\n    restore(callback) {\r\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window._isMaximized) {\r\n                window._window.style.left = window._restoreBounds.left + 'px';\r\n                window._window.style.top = window._restoreBounds.top + 'px';\r\n                window._window.style.width = window._restoreBounds.getWidth() + 'px';\r\n                window._window.style.height = window._restoreBounds.getHeight() + 'px';\r\n                window._isHidden = false;\r\n                window._isMinimized = false;\r\n                window._isMaximized = false;\r\n            }\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Brings the window instance to the front of all windows.\r\n     * @param {Callback=}\r\n     */\r\n    bringToFront(callback) {\r\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) {\r\n                window._window.style['z-index'] = windowmanager._getNextZIndex();\r\n            }\r\n        }\r\n        this._window.style['z-index'] = windowmanager._getNextZIndex();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Sets focus to the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    focus(callback) {\r\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) { window._window.contentWindow.focus(); }\r\n        }\r\n        this._window.contentWindow.focus();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Resizes the window instance.\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     * @param {Callback=}\r\n     */\r\n    resizeTo(width, height, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('resize-before')) { return; } // Allow preventing resize\r\n        let size = new Position(width, height);\r\n\r\n        this.undock();\r\n        this._window.width = size.left + 'px';\r\n        this._window.height = size.top + 'px';\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Moves the window instance.\r\n     * @param {Number} left\r\n     * @param {Number} top\r\n     * @param {Callback=}\r\n     */\r\n    moveTo(left, top, callback) {\r\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = (new Position(left, top)).subtract(this.getPosition());\r\n\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._window.style.left = pos.left + 'px';\r\n            window._window.style.top = pos.top + 'px';\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Moves the window instance relative to its current position.\r\n     * @param {Number} deltaLeft\r\n     * @param {Number} deltaTop\r\n     * @param {Callback=}\r\n     */\r\n    moveBy(deltaLeft, deltaTop, callback) {\r\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = new Position(deltaLeft, deltaTop);\r\n\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._window.style.left = pos.left + 'px';\r\n            window._window.style.top = pos.top + 'px';\r\n        }\r\n        if (callback) { callback(); }\r\n        for (let window of this._dockedGroup) {\r\n            window.emit('move');\r\n        }\r\n    }\r\n\r\n    setMinSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMinSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._minSize.left = size.left;\r\n        this._minSize.top = size.top;\r\n        this._window.style.minWidth = this._minSize.left + 'px';\r\n        this._window.style.minHeight = this._minSize.top + 'px';\r\n        if (this.getWidth() < size.left || this.getHeight() < size.top) {\r\n            // Resize window to meet new min size:\r\n            // TODO: Take into account transform?\r\n            this._window.style.width = Math.max(this.getWidth(), size.left) + 'px';\r\n            this._window.style.height = Math.max(this.getHeight(), size.top) + 'px';\r\n            if (callback) { callback(); }\r\n            this.emit('resize');\r\n        } else {\r\n            if (callback) { callback(); }\r\n        }\r\n    }\r\n\r\n    setSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, size.left)) + 'px';\r\n        this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, size.top)) + 'px';\r\n        // Clear transform:\r\n        for (let transformPropName of transformPropNames) {\r\n            this._window.style[transformPropName] = '';\r\n        }\r\n        if (callback) { callback(); }\r\n        this.emit('resize');\r\n    }\r\n\r\n    forceScaledSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\r\n        const size = new Size(Math.min(this._maxSize.left, Math.max(this._minSize.left, width)),\r\n                            Math.min(this._maxSize.top, Math.max(this._minSize.top, height)));\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._window.style.width = size.left + 'px';\r\n        this._window.style.height = size.top + 'px';\r\n        // TODO: Calc transform:\r\n        let transform = Math.min(width / size.left, height / size.top);\r\n\r\n        for (let transformPropName of transformPropNames) {\r\n            this._window.style[transformPropName] = 'scale(' + transform + ')';\r\n        }\r\n        if (callback) { callback(); }\r\n        this.emit('resize');\r\n    }\r\n\r\n    setMaxSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._maxSize.left = size.left;\r\n        this._maxSize.top = size.top;\r\n        this._window.style.maxWidth = this._maxSize.left + 'px';\r\n        this._window.style.maxHeight = this._maxSize.top + 'px';\r\n        if (this.getWidth() > size.left || this.getHeight() > size.top) {\r\n            // Resize window to meet new min size:\r\n            // TODO: Take into account transform?\r\n            this._window.style.width = Math.min(this.getWidth(), size.left) + 'px';\r\n            this._window.style.height = Math.min(this.getHeight(), size.top) + 'px';\r\n            // Clear transform:\r\n            for (let transformPropName of transformPropNames) {\r\n                this._window.style[transformPropName] = '';\r\n            }\r\n            if (callback) { callback(); }\r\n            this.emit('resize');\r\n        } else {\r\n            if (callback) { callback(); }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the bounds of the window instance.\r\n     * @param {Number} left\r\n     * @param {Number} top\r\n     * @param {Number} right\r\n     * @param {Number} bottom\r\n     * @param {Callback=}\r\n     */\r\n    setBounds(left, top, right, bottom, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        let bounds = new BoundingBox(left, top, right, bottom);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._window.style.left = bounds.left + 'px';\r\n        this._window.style.top = bounds.top + 'px';\r\n        // TODO: Take into account transform?\r\n        this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, bounds.getWidth())) + 'px';\r\n        this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, bounds.getHeight())) + 'px';\r\n        // Clear transform:\r\n        for (let transformPropName of transformPropNames) {\r\n            this._window.style[transformPropName] = '';\r\n        }\r\n        // TODO: Events\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Force docking this window to another. They don't need to be touching.\r\n     * @param {Window}\r\n     * @param {Callback=}\r\n     */\r\n    dock(other) {\r\n        // TODO: Check if otherGroup is touching\r\n        if (!this.emit('dock-before')) { return; } // Allow preventing dock\r\n        if (other === undefined) { return; } // Failed to find other. TODO: Return error\r\n\r\n        // If other is already in the group, return:\r\n        if (this._dockedGroup.indexOf(other) >= 0) { return; }\r\n\r\n        // Loop through all windows in otherGroup and add them to this's group:\r\n        for (let otherWin of other._dockedGroup) {\r\n            this._dockedGroup.push(otherWin);\r\n            // Sharing the array between window objects makes it easier to manage:\r\n            otherWin._dockedGroup = otherWin._dockedGroup;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Force undocking this window from it's group.<br>\r\n     * TODO: Redock those still touching, EXCEPT 'this'.\r\n     * @param {Window}\r\n     * @param {Callback=}\r\n     */\r\n    undock(other) {\r\n        // Check to see if window is already undocked:\r\n        if (this._dockedGroup.length === 1) { return; }\r\n\r\n        // Undock this:\r\n        this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\r\n        this._dockedGroup = [this];\r\n\r\n        // TODO: Redock those still touching, EXCEPT 'this'.\r\n    }\r\n\r\n    _dragStart() {\r\n        if (!this.emit('drag-start')) { return; } // Allow preventing drag\r\n        this.restore();\r\n        for (let window of this._dockedGroup) {\r\n            window._dragStartPos = window.getPosition();\r\n        }\r\n    }\r\n\r\n    _dragBy(deltaLeft, deltaTop) {\r\n        if (!this.emit('drag-before')) { return; } // Allow preventing drag\r\n        // Perform Snap:\r\n        const thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft,\r\n                                                    this._dragStartPos.top + deltaTop);\r\n        let snapDelta = new Vector(NaN, NaN);\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (other._dockedGroup !== this._dockedGroup) {\r\n                snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\r\n            }\r\n        }\r\n        deltaLeft += snapDelta.left || 0;\r\n        deltaTop += snapDelta.top || 0;\r\n\r\n        for (let other of this._dockedGroup) {\r\n            let pos = other._dragStartPos;\r\n\r\n            // If other doesn't have a drag position, start it:\r\n            if (pos === undefined) {\r\n                pos = other._dragStartPos = other.getPosition();\r\n                pos.left -= deltaLeft;\r\n                pos.top -= deltaTop;\r\n            }\r\n\r\n            other._window.style.left = (pos.left + deltaLeft) + 'px';\r\n            other._window.style.top = (pos.top + deltaTop) + 'px';\r\n            other.emit('move');\r\n        }\r\n    }\r\n\r\n    _dragStop() {\r\n        // Dock to those it snapped to:\r\n        const thisBounds = this.getBounds();\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (thisBounds.isTouching(other.getBounds())) {\r\n                this.dock(other);\r\n            }\r\n        }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            delete window._dragStartPos;\r\n        }\r\n\r\n        this.emit('drag-stop');\r\n    }\r\n\r\n    /**\r\n     * Returns a list of all {@link Window} instances open.\r\n     * @returns {Window[]}\r\n     */\r\n    static getAll() {\r\n        return Array.from(windowmanager._windows.values());\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link Window} instance that has `id`.\r\n     * @param {String|Number}\r\n     * @returns {Window|undefined}\r\n     */\r\n    static getByID(id) {\r\n        return windowmanager._windows.get(id);\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link Window} instance that calls this function.\r\n     * @returns {Window}\r\n     */\r\n    static getCurrent() {\r\n        return Window.current;\r\n    }\r\n}\r\n\r\n// Add launcher to list of windows:\r\nif (windowmanager.runtime.isMain) {\r\n    window.document.body.contentWindow = window;\r\n    Window.current = new Window(window); // Force add launcher to window list\r\n} else {\r\n    // No need to do this for child windows, since _windows is shared across windows.\r\n    // Handle current window in this context:\r\n    Window.current = (function () {\r\n        for (let win of windowmanager._windows.values()) {\r\n            if (win._window.contentWindow === window) { return win; }\r\n        }\r\n    })();\r\n}\r\n\r\nif (!windowmanager.runtime.isMain) {\r\n    // Setup handlers on this child window:\r\n    let wX = 0;\r\n    let wY = 0;\r\n    let dragging = false;\r\n\r\n    window.addEventListener('focus', function () {\r\n        Window.current.bringToFront();\r\n    });\r\n\r\n    window.addEventListener('mousedown', function onDragStart(event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            event.preventDefault();\r\n            dragging = true;\r\n            wX = event.screenX;\r\n            wY = event.screenY;\r\n            Window.current._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('touchstart', function (event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            event.preventDefault();\r\n            dragging = true;\r\n            wX = event.touches[0].screenX;\r\n            wY = event.touches[0].screenY;\r\n            Window.current._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mousemove', function (event) {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\r\n        }\r\n    });\r\n\r\n    window.addEventListener('touchmove', function (event) {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            Window.current._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\r\n        }\r\n    });\r\n\r\n    const onDragEnd = function () {\r\n        if (dragging) {\r\n            event.preventDefault();\r\n            dragging = false;\r\n            Window.current._dragStop();\r\n        }\r\n    };\r\n\r\n    window.addEventListener('mouseup', onDragEnd);\r\n    window.addEventListener('touchend', onDragEnd);\r\n}\r\n\r\nwindowmanager.Window = Window;\r\nexport default Window;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/Window.js"],"sourceRoot":""}