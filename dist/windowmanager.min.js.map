{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///windowmanager.min.js","webpack:///webpack/bootstrap 36987eb4db1c0f06de95","webpack:///./src/index.js","webpack:///./src/global.js","webpack:///./src/utils/index.js","webpack:///./src/utils/EventHandler.js","webpack:///./src/utils/SyncCallback.js","webpack:///./src/geometry/index.js","webpack:///./src/geometry/Vector.js","webpack:///./src/geometry/BoundingBox.js","webpack:///./src/runtime/index.js","webpack:///./src/runtime/ready.js","webpack:///./src/runtime/electron/index.js","webpack:///./src/runtime/electron/global.js","webpack:///./src/runtime/electron/require.js","webpack:///./src/runtime/electron/node/index.js","webpack:///./src/runtime/electron/node/Window.js","webpack:///./src/runtime/electron/renderer/index.js","webpack:///./src/runtime/electron/renderer/Window.js","webpack:///./src/runtime/openfin/index.js","webpack:///./src/runtime/openfin/global.js","webpack:///./src/runtime/openfin/Window.js","webpack:///./src/runtime/browser/index.js","webpack:///./src/runtime/browser/global.js","webpack:///./src/runtime/browser/Window.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_global","_global2","global","windowmanager","window","_index","_index2","_index3","windowmanagerEventNames","EventHandler","version","runtime","name","undefined","isBrowser","isElectron","isOpenFin","isDesktop","isMobile","isMain","navigator","a","test","substr","userAgent","vendor","opera","geometry","getUniqueWindowName","genUIDE7","Date","getTime","_EventHandler","_EventHandler2","_SyncCallback","_SyncCallback2","lut","i","toString","d0","Math","random","d1","d2","d3","SyncCallback","acceptedEventHandlers","arguments","length","_eventListeners","_eventPipes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","acceptedEventHandler","err","return","prototype","on","eventNames","eventListener","toLowerCase","split","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","eventName","constructor","Error","indexOf","push","once","onceListener","off","apply","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","index","splice","clearEvent","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","emit","_len","args","Array","_key","returnVal","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","eventHandler","addPipe","removePipe","callback","count","ref","thisRef","_deref","_Vector","_Vector2","_BoundingBox","_BoundingBox2","_CollisionMesh","_CollisionMesh2","Vector","BoundingBox","CollisionMesh","Position","Size","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","left","top","Number","_isNaN","isNaN","getBoundingBox","other","diff","subtract","sqrt","distanceSquared","getVector","deltaLeft","deltaTop","abs","minAbs","min","vals","val","argAbs","right","bottom","getWidth","getHeight","getCenterPosition","getPosition","max","cLeft","cTop","cPos","getDistanceSquaredToPoint","width","height","anchor","curSize","getSize","newSize","String","anchorStr","others","isContains","centerPos","dis","edge","sort","b","map","edges","getEdgeClosestOrder","snapDistance","snapDelta","NaN","leftRightDis","topBottomDis","isTouching","isColliding","process","versions","electron","nodeRequire","fin","desktop","main","callbacks","isReady","onReady","_isNode","_isRenderer","_require2","_require3","_isStartup","_nodeRequire","BrowserWindow","_require","workingDir","dirname","filename","windowmanagerPath","__filename","_windows","Map","eval","_ready","_ready2","_windowmanager$geomet","_notifyReady","getAllWindows","webContents","send","_ensureDockSystem","_this","_dockedGroup","undock","_dockMinimize","restore","lastBounds","getBounds","newBounds","dock","otherID","fromId","otherWin","_dockFocus","setAlwaysOnTop","_dragStart","_dragStartPos","_getBounds","bounds","x","y","_dragBy","thisBounds","moveTo","setMin","getSnapDelta","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","pos","setPosition","_dragStop","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_dockMoveTo","oldPos","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","minimize","_dockHide","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","hide","_dockShow","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","show","_Window","_Window2","_window$nodeRequire","ipcRenderer","messagebus","wrapListener","listener","_","message","_id","winID","fromWindow","Window","getByID","current","wrappedListeners","windowWrappedListeners","curWin","event","shift","_window","getAll","onMessage","winLisGroup","set","removeListener","delete","Set","get","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","resolveWindowWithID","electronWin","remote","url","currentWin","getCurrentWindow","defaultConfig","frame","resizable","hasShadow","icon","webPreferences","nodeIntegration","preload","configMap","config","_onmove","thisWindow","_onminimize","_onclose","removeEventListener","_oncurrclose","_isClosed","getPrototypeOf","isArgConfig","prop","hasOwnProperty","_url","title","resolve","location","href","origin","getGlobal","loadURL","setTitle","addEventListener","isClosed","size","getTitle","newTitle","isShown","isVisible","isMinimized","isMaximized","close","maximize","focus","setSize","deltaPos","setBounds","from","values","wX","wY","dragging","classList","contains","screenX","screenY","Menu","MenuItem","rightClickPosition","menu","append","label","accelerator","click","reload","app","relaunch","exit","type","inspectElement","preventDefault","popup","APP_UUID","InterApplicationBus","subscribe","unsubscribe","setVersion","System","getVersion","Application","getCurrent","mainWindow","getWindow","contentWindow","_internalBus","keys","_setupDOM","setWindows","setTimeout","onBoundsChange","_bounds","changeType","onClose","parent","getParent","getChildren","child","setParent","onMinimized","_titleEl","document","createElement","innerText","_title","head","appendChild","setupCurrentWindow","defaultWidth","defaultHeight","saveWindowState","autoShow","app_uuid","_isHidden","_isMinimized","_isMaximized","_children","_parent","bind","console","error","clone","slice","beforeCallback","bringToFront","resizeTo","add","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","currentReady","data","win","postMessage","getBrowserInfo","ua","M","match","tem","exec","appName","appVersion","browser","e","nextZIndex","_launcher","_getNextZIndex","minWidth","minHeight","maxWidth","Infinity","maxHeight","transformPropNames","_minSize","_maxSize","newWindow","src","style","position","isFinite","innerWidth","innerHeight","margin","padding","border","resize","overflow","body","getBoundingClientRect","box","parentElement","removeChild","_restoreBounds","display","transformPropName","transform","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21"],"mappings":"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","file":"windowmanager.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"windowmanager\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"windowmanager\"] = factory();\n\telse\n\t\troot[\"windowmanager\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"windowmanager\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"windowmanager\"] = factory();\n\telse\n\t\troot[\"windowmanager\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\t__webpack_require__(9);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Make windowmanager global:\n\tif (typeof global !== 'undefined' && global) {\n\t  global.windowmanager = _global2.default;\n\t}\n\tif (typeof window !== 'undefined' && window) {\n\t  window.windowmanager = _global2.default;\n\t}\n\t\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tvar _index3 = _interopRequireDefault(_index2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* global VERSION */\n\tvar windowmanagerEventNames = ['window-create', 'window-close'];\n\t\n\t/**\r\n\t * A global variable exposed on windows to access the windowmanager-related API.\r\n\t * @namespace\r\n\t * @extends EventHandler\r\n\t * @property {string} version - version of windowmanager\r\n\t * @property {object} runtime - contains runtime-specific info\r\n\t * @property {string} runtime.name - name of runtime (ie. Chrome, IE, OpenFin, Electron, ect)\r\n\t * @property {string} runtime.version\r\n\t * @property {boolean} runtime.isBrowser - is this running in a browser\r\n\t * @property {boolean} runtime.isElectron - is this running in Electron\r\n\t * @property {boolean} runtime.isOpenFin - is this running in OpenFin\r\n\t * @property {boolean} runtime.isDesktop - is this a desktop OS\r\n\t * @property {boolean} runtime.isMobile - is this a mobile OS\r\n\t * @property {boolean} runtime.isMain - is this the main/startup window (Electron doesn't have one atm)\r\n\t * @property {Window} Window\r\n\t * @property {module:geometry} geometry\r\n\t * @property {MessageBus} messagebus - message bus for application\r\n\t */\n\tvar windowmanager = new _index.EventHandler(windowmanagerEventNames);\n\t\n\twindowmanager.version = (\"0.11.0\");\n\t// runtime is set in the respective runtime\n\twindowmanager.runtime = {\n\t    name: undefined,\n\t    version: undefined,\n\t    isBrowser: false,\n\t    isElectron: false,\n\t    isOpenFin: false,\n\t    isDesktop: false,\n\t    isMobile: false,\n\t    isMain: false\n\t};\n\t\n\t// Credit: http://stackoverflow.com/a/11381730\n\tif (typeof navigator !== 'undefined') {\n\t    /* eslint-disable max-len */\n\t    windowmanager.runtime.isMobile = function (a) {\n\t        return (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))\n\t        );\n\t    }(navigator.userAgent || navigator.vendor || window.opera);\n\t    /* eslint-enable max-len */\n\t    windowmanager.runtime.isDesktop = !windowmanager.isMobile;\n\t}\n\t\n\t// Add geometry to global:\n\twindowmanager.geometry = _index3.default;\n\t\n\t// messagebus is set in the respective runtime\n\t\n\texports.default = windowmanager;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _EventHandler = __webpack_require__(3);\n\t\n\tvar _EventHandler2 = _interopRequireDefault(_EventHandler);\n\t\n\tvar _SyncCallback = __webpack_require__(4);\n\t\n\tvar _SyncCallback2 = _interopRequireDefault(_SyncCallback);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar genUIDE7 = function () {\n\t    var lut = [];\n\t\n\t    for (var i = 0; i < 256; i += 1) {\n\t        lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t    }\n\t\n\t    return function () {\n\t        var d0 = Math.random() * 0xffffffff | 0;\n\t        var d1 = Math.random() * 0xffffffff | 0;\n\t        var d2 = Math.random() * 0xffffffff | 0;\n\t        var d3 = Math.random() * 0xffffffff | 0;\n\t\n\t        return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\n\t    };\n\t}();\n\t\n\tfunction getUniqueWindowName() {\n\t    return 'window' + genUIDE7() + new Date().getTime();\n\t};\n\t\n\texports.default = {\n\t    getUniqueWindowName: getUniqueWindowName,\n\t    EventHandler: _EventHandler2.default,\n\t    SyncCallback: _SyncCallback2.default\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// TODO: Use class, rather than prototype.\n\t\n\t/**\r\n\t * An EventHandler\r\n\t * @constructor\r\n\t * @alias EventHandler\r\n\t * @param {string[]} [acceptedEventHandlers=[]] - String of allowed events.\r\n\t */\n\tfunction EventHandler() {\n\t    var acceptedEventHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    this._eventListeners = {};\n\t    this._eventPipes = [];\n\t    // TODO: Look into making these special properties that can't be deleted?\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = acceptedEventHandlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var acceptedEventHandler = _step.value;\n\t\n\t            this._eventListeners[acceptedEventHandler] = [];\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t/**\r\n\t * @method\r\n\t * @param {string}\r\n\t * @param {callback}\r\n\t */\n\tEventHandler.prototype.on = function (eventNames, eventListener) {\n\t    eventNames = eventNames.toLowerCase().split(' ');\n\t\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\t\n\t    try {\n\t        for (var _iterator2 = eventNames[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var eventName = _step2.value;\n\t\n\t            // Check if this event can be subscribed to via this function:\n\t            if (this._eventListeners[eventName] === undefined) {\n\t                continue;\n\t            }\n\t\n\t            // Check if eventListener is a function:\n\t            if (!eventListener || typeof eventListener.constructor !== 'function') {\n\t                throw new Error('on requires argument \\'eventListener\\' of type Function');\n\t            }\n\t\n\t            // Check if eventListener is already added:\n\t            if (this._eventListeners[eventName].indexOf(eventListener) >= 0) {\n\t                continue;\n\t            }\n\t\n\t            // Add event listener:\n\t            this._eventListeners[eventName].push(eventListener);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                _iterator2.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {string}\r\n\t * @param {callback}\r\n\t */\n\tEventHandler.prototype.once = function (eventName, eventListener) {\n\t    function onceListener() {\n\t        this.off(eventName, onceListener);\n\t        eventListener.apply(this, arguments);\n\t    }\n\t    this.on(eventName, onceListener);\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {string}\r\n\t * @param {callback}\r\n\t */\n\tEventHandler.prototype.off = function (eventNames, eventListener) {\n\t    eventNames = eventNames.toLowerCase().split(' ');\n\t\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\t\n\t    try {\n\t        for (var _iterator3 = eventNames[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            var eventName = _step3.value;\n\t\n\t            // If event listeners don't exist, bail:\n\t            if (this._eventListeners[eventName] === undefined) {\n\t                return;\n\t            }\n\t\n\t            // Check if eventListener is a function:\n\t            if (!eventListener || typeof eventListener.constructor !== 'function') {\n\t                throw new Error('off requires argument \\'eventListener\\' of type Function');\n\t            }\n\t\n\t            // Remove event listener, if exists:\n\t            var index = this._eventListeners[eventName].indexOf(eventListener);\n\t\n\t            if (index >= 0) {\n\t                this._eventListeners[eventName].splice(index, 1);\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                _iterator3.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {string}\r\n\t */\n\tEventHandler.prototype.clearEvent = function (eventNames) {\n\t    eventNames = eventNames.toLowerCase();\n\t\n\t    var _iteratorNormalCompletion4 = true;\n\t    var _didIteratorError4 = false;\n\t    var _iteratorError4 = undefined;\n\t\n\t    try {\n\t        for (var _iterator4 = eventNames[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t            var eventName = _step4.value;\n\t\n\t            // If event listeners don't exist, bail:\n\t            if (this._eventListeners[eventName] === undefined) {\n\t                return;\n\t            }\n\t\n\t            this._eventListeners[eventName] = [];\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                _iterator4.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError4) {\n\t                throw _iteratorError4;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {string}\r\n\t * @param {...*} args - Arguments to pass to listeners\r\n\t * @returns {Boolean} true if all handlers return true, else false\r\n\t */\n\tEventHandler.prototype.emit = function (eventName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    eventName = eventName.toLowerCase();\n\t\n\t    // If event listeners don't exist, bail:\n\t    if (this._eventListeners[eventName] === undefined) {\n\t        return false;\n\t    }\n\t\n\t    var returnVal = true;\n\t\n\t    var _iteratorNormalCompletion5 = true;\n\t    var _didIteratorError5 = false;\n\t    var _iteratorError5 = undefined;\n\t\n\t    try {\n\t        for (var _iterator5 = this._eventListeners[eventName][Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t            var eventListener = _step5.value;\n\t\n\t            // Call listener with the 'this' context as the current window:\n\t            returnVal = returnVal && eventListener.apply(this, args) !== false;\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                _iterator5.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError5) {\n\t                throw _iteratorError5;\n\t            }\n\t        }\n\t    }\n\t\n\t    var _iteratorNormalCompletion6 = true;\n\t    var _didIteratorError6 = false;\n\t    var _iteratorError6 = undefined;\n\t\n\t    try {\n\t        for (var _iterator6 = this._eventPipes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t            var eventHandler = _step6.value;\n\t\n\t            // Call handler with the 'this' context as the current window:\n\t            returnVal = returnVal && eventHandler.emit.apply(eventHandler, arguments) !== false;\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                _iterator6.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError6) {\n\t                throw _iteratorError6;\n\t            }\n\t        }\n\t    }\n\t\n\t    return returnVal;\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {EventHandler}\r\n\t */\n\tEventHandler.prototype.addPipe = function (eventHandler) {\n\t    // Check if eventHandler is a EventHandler:\n\t    if (!eventHandler || !eventHandler.emit) {\n\t        throw new Error('addPipe requires argument \\'eventHandler\\' of type EventHandler');\n\t    }\n\t\n\t    // Check if eventHandler is already added:\n\t    if (this._eventPipes.indexOf(eventHandler) >= 0) {\n\t        return;\n\t    }\n\t\n\t    // Add event handler:\n\t    this._eventPipes.push(eventHandler);\n\t};\n\t\n\t/**\r\n\t * @method\r\n\t * @param {EventHandler}\r\n\t */\n\tEventHandler.prototype.removePipe = function (eventHandler) {\n\t    // Check if eventHandler is a EventHandler:\n\t    if (!eventHandler || !eventHandler.emit) {\n\t        throw new Error('removePipe requires argument \\'eventHandler\\' of type EventHandler');\n\t    }\n\t\n\t    // Check if eventHandler is already added:\n\t    if (this._eventPipes.indexOf(eventHandler) >= 0) {\n\t        return;\n\t    }\n\t\n\t    // Remove eventHandler, if exists:\n\t    var index = this._eventPipes.indexOf(eventHandler);\n\t\n\t    if (index >= 0) {\n\t        this._eventPipes.splice(index, 1);\n\t    }\n\t};\n\t\n\texports.default = EventHandler;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tfunction SyncCallback(callback) {\n\t    if (!(this instanceof SyncCallback)) {\n\t        return new SyncCallback(callback);\n\t    }\n\t\n\t    this.callback = callback;\n\t    this.count = 0;\n\t}\n\t\n\tSyncCallback.prototype.ref = function (callback) {\n\t    var thisRef = this;\n\t\n\t    this.count += 1;\n\t    return function () {\n\t        if (callback) {\n\t            callback.apply(undefined, arguments);\n\t        }\n\t        thisRef._deref();\n\t    };\n\t};\n\t\n\tSyncCallback.prototype._deref = function () {\n\t    this.count -= 1;\n\t    if (this.count <= 0) {\n\t        this.callback();\n\t    }\n\t};\n\t\n\texports.default = SyncCallback;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Vector = __webpack_require__(6);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _BoundingBox = __webpack_require__(7);\n\t\n\tvar _BoundingBox2 = _interopRequireDefault(_BoundingBox);\n\t\n\tvar _CollisionMesh = __webpack_require__(8);\n\t\n\tvar _CollisionMesh2 = _interopRequireDefault(_CollisionMesh);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  Vector: _Vector2.default,\n\t  BoundingBox: _BoundingBox2.default,\n\t  CollisionMesh: _CollisionMesh2.default,\n\t  /**\r\n\t   * A Position object. Alias of {@link Vector}.\r\n\t   * @class\r\n\t   * @see {@link Vector} for further information.\r\n\t   */\n\t  Position: _Vector2.default,\n\t  /**\r\n\t   * A Size object. Alias of {@link Vector}.\r\n\t   * @class\r\n\t   * @see {@link Vector} for further information.\r\n\t   */\n\t  Size: _Vector2.default\n\t}; // TODO: Rewrite in class form, so can make use of get/set, and private.\n\t// TODO: Add asVector, asBoundingBox, asCollisionMesh to all classes (as a get),\n\t//       to easily coerce types!\n\t// TODO: Rewrite the classes to have more simplified functions (don't have complex\n\t//       functions that have very specific purposes).\n\t// TODO: Add proper argument checking! Not all methods have checks!\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _BoundingBox = __webpack_require__(7);\n\t\n\tvar _BoundingBox2 = _interopRequireDefault(_BoundingBox);\n\t\n\tvar _CollisionMesh = __webpack_require__(8);\n\t\n\tvar _CollisionMesh2 = _interopRequireDefault(_CollisionMesh);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\r\n\t * A Vector class.\r\n\t */\n\tvar Vector = function () {\n\t    /**\r\n\t     * @param {Number} left - The position of the vector's x-axis.\r\n\t     * @param {Number} top - The position of the vector's y-axis.\r\n\t     * @returns {Vector} An instance of Vector\r\n\t     */\n\t    function Vector(left, top) {\n\t        _classCallCheck(this, Vector);\n\t\n\t        var obj = left;\n\t\n\t        if (obj && obj.constructor !== Number) {\n\t            // new Vector(obj)\n\t            this.left = obj.left;\n\t            this.top = obj.top;\n\t        } else {\n\t            // new Vector(left, top)\n\t            this.left = left;\n\t            this.top = top;\n\t        }\n\t    }\n\t\n\t    /**\r\n\t     * Clone the current vector to a new object.\r\n\t     * @returns {Vector} A clone of this instance\r\n\t     */\n\t\n\t\n\t    _createClass(Vector, [{\n\t        key: 'clone',\n\t        value: function clone() {\n\t            return new Vector(this);\n\t        }\n\t\n\t        /**\r\n\t         * Checks if any property on `this` is NaN.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isNaN',\n\t        value: function (_isNaN) {\n\t            function isNaN() {\n\t                return _isNaN.apply(this, arguments);\n\t            }\n\t\n\t            isNaN.toString = function () {\n\t                return _isNaN.toString();\n\t            };\n\t\n\t            return isNaN;\n\t        }(function () {\n\t            return isNaN(this.left) || isNaN(this.top);\n\t        })\n\t\n\t        /**\r\n\t         * Resolve this object down to a {@link Vector} instance.\r\n\t         * Since this instance is already a vector, it returns itself.\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getVector',\n\t        value: function getVector() {\n\t            // We have this method, so any prototype in this script will return their position,\n\t            // and if they are one it will return itself.\n\t            // This simplifies code, and prevents having to do a ton of checks.\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Returns a BoundingBox instance version of this vector similar to:<br>\r\n\t         * ```javascript\r\n\t         * new BoundingBox(Vector.left, Vector.top, Vector.left, Vector.top)\r\n\t         * ```\r\n\t         * @returns {BoundingBox}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getBoundingBox',\n\t        value: function getBoundingBox() {\n\t            // We have this method, so any prototype in this script will return their position,\n\t            // and if they are one it will return itself.\n\t            // This simplifies code, and prevents having to do a ton of checks.\n\t            return new _BoundingBox2.default(this.left, this.top, this.left, this.top);\n\t        }\n\t\n\t        /**\r\n\t         * Returns a {@link CollisionMesh} instance version of this vector similar to:<br>\r\n\t         * ```javascript\r\n\t         * new CollisionMesh(Vector.getBoundingBox())\r\n\t         * ```\r\n\t         * @returns {CollisionMesh}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCollisionMesh',\n\t        value: function getCollisionMesh() {\n\t            return new _CollisionMesh2.default(this.getBoundingBox());\n\t        }\n\t\n\t        /**\r\n\t         * Returns the squared distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'distanceSquared',\n\t        value: function distanceSquared(other) {\n\t            var diff = other.subtract(this);\n\t\n\t            return diff.left * diff.left + diff.top * diff.top;\n\t        }\n\t\n\t        /**\r\n\t         * Returns the distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'distance',\n\t        value: function distance(other) {\n\t            return Math.sqrt(this.distanceSquared(other));\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this.left` to `other.left`, and sets `this.top` to `other.top`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'set',\n\t        value: function set(other) {\n\t            if (!other) {\n\t                throw new Error(\"set requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            this.left = other.left;\n\t            this.top = other.top;\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` to position at `left` and/or `top`.\r\n\t         * @param {Number} [left=null]\r\n\t         * @param {Number} [top=null]\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top) {\n\t            if (left && left.constructor === Number) {\n\t                this.left = left;\n\t            }\n\t            if (top && top.constructor === Number) {\n\t                this.top = top;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n\t         * @param {Number} [deltaLeft=null]\r\n\t         * @param {Number} [deltaTop=null]\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop) {\n\t            if (deltaLeft && deltaLeft.constructor === Number) {\n\t                this.left = deltaLeft;\n\t            }\n\t            if (deltaTop && deltaTop.constructor === Number) {\n\t                this.top = deltaTop;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this`'s properties if `other`'s is smaller.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setMin',\n\t        value: function setMin(other) {\n\t            if (!other) {\n\t                throw new Error(\"setMin requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            if (Math.abs(other.left) < Math.abs(this.left) || isNaN(this.left)) {\n\t                this.left = other.left;\n\t            }\n\t            if (Math.abs(other.top) < Math.abs(this.top) || isNaN(this.top)) {\n\t                this.top = other.top;\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this`'s properties if `other`'s is larger.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setMax',\n\t        value: function setMax(other) {\n\t            if (!other) {\n\t                throw new Error(\"setMax requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            if (Math.abs(other.left) > Math.abs(this.left) || isNaN(this.left)) {\n\t                this.left = other.left;\n\t            }\n\t            if (Math.abs(other.top) > Math.abs(this.top) || isNaN(this.top)) {\n\t                this.top = other.top;\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Add `other` to `this`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'add',\n\t        value: function add(other) {\n\t            if (!other) {\n\t                throw new Error(\"add requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            this.left += other.left;\n\t            this.top += other.top;\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'subtract',\n\t\n\t\n\t        /**\r\n\t         * Subtract `other` from `this`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number}\r\n\t         */\n\t        value: function subtract(other) {\n\t            if (!other) {\n\t                throw new Error(\"subtract requires argument 'other'\");\n\t            }\n\t            other = other.getVector();\n\t\n\t            this.left -= other.left;\n\t            this.top -= other.top;\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Vector;\n\t}();\n\t\n\texports.default = Vector;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Vector = __webpack_require__(6);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _CollisionMesh = __webpack_require__(8);\n\t\n\tvar _CollisionMesh2 = _interopRequireDefault(_CollisionMesh);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Utility functions:\n\tfunction minAbs(min) {\n\t    var minAbs = Math.abs(min);\n\t\n\t    for (var _len = arguments.length, vals = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        vals[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = vals[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var val = _step.value;\n\t\n\t            var argAbs = Math.abs(val);\n\t\n\t            if (argAbs < minAbs) {\n\t                min = val;\n\t                minAbs = argAbs;\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    return {\n\t        min: min,\n\t        abs: minAbs\n\t    };\n\t}\n\t\n\t/**\r\n\t * A BoundingBox class.\r\n\t */\n\t\n\tvar BoundingBox = function () {\n\t    /**\r\n\t     * @param {number} left - The left position of x-axis.\r\n\t     * @param {number} top - The top position of y-axis.\r\n\t     * @param {number} right - The right position of x-axis.\r\n\t     * @param {number} bottom - The bottom position of y-axis.\r\n\t     */\n\t    function BoundingBox(left, top, right, bottom) {\n\t        _classCallCheck(this, BoundingBox);\n\t\n\t        var obj = left;\n\t\n\t        if (obj && obj.constructor !== Number) {\n\t            if (obj.getBoundingBox) {\n\t                obj = obj.getBoundingBox();\n\t            }\n\t            // new BoundingBox(obj)\n\t            this.left = obj.left;\n\t            this.top = obj.top;\n\t            this.right = obj.right;\n\t            this.bottom = obj.bottom;\n\t        } else {\n\t            // new BoundingBox(left, top, right, bottom)\n\t            this.left = left;\n\t            this.top = top;\n\t            this.right = right;\n\t            this.bottom = bottom;\n\t        }\n\t    }\n\t\n\t    /**\r\n\t     * Clone the current vector to a new object.\r\n\t     * @returns {BoundingBox} A clone of this instance\r\n\t     */\n\t\n\t\n\t    _createClass(BoundingBox, [{\n\t        key: 'clone',\n\t        value: function clone() {\n\t            return new BoundingBox(this);\n\t        }\n\t\n\t        /**\r\n\t         * Checks if any property on `this` is NaN.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isNaN',\n\t        value: function (_isNaN) {\n\t            function isNaN() {\n\t                return _isNaN.apply(this, arguments);\n\t            }\n\t\n\t            isNaN.toString = function () {\n\t                return _isNaN.toString();\n\t            };\n\t\n\t            return isNaN;\n\t        }(function () {\n\t            return isNaN(this.left) || isNaN(this.top) || isNaN(this.right) || isNaN(this.bottom);\n\t        })\n\t\n\t        /**\r\n\t         * Returns the width of `this`.\r\n\t         * @returns {Number} width\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            return Math.abs(this.right - this.left);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the height of `this`.\r\n\t         * @returns {Number} height\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            return Math.abs(this.bottom - this.top);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the size of `this`.\r\n\t         * @returns {Vector} size\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            return new _Vector2.default(this.getWidth(), this.getHeight());\n\t        }\n\t\n\t        /**\r\n\t         * Returns the area of `this`.\r\n\t         * @returns {Number} area\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getArea',\n\t        value: function getArea() {\n\t            return this.getWidth() * this.getHeight();\n\t        }\n\t\n\t        /**\r\n\t         * Returns the position of `this`.\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            return new _Vector2.default(this.left, this.top);\n\t        }\n\t\n\t        /**\r\n\t         * Resolve this object down to a {@link BoundingBox} instance.\r\n\t         * Since this instance is already a boundingbox, it returns itself.\r\n\t         * @returns {Vector} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getBoundingBox',\n\t        value: function getBoundingBox() {\n\t            // We have this method, so any prototype in this script will return their bounding box,\n\t            // and if they are one it will return itself.\n\t            // This simplifies code, and prevents having to do a ton of checks.\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Returns a {@link CollisionMesh} instance version of this boundingbox similar to:<br>\r\n\t         * ```javascript\r\n\t         * new CollisionMesh(BoundingBox)\r\n\t         * ```\r\n\t         * @returns {CollisionMesh}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCollisionMesh',\n\t        value: function getCollisionMesh() {\n\t            return new _CollisionMesh2.default(this);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the center position of `this`.\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCenterPosition',\n\t        value: function getCenterPosition() {\n\t            return new _Vector2.default(this.left + this.getWidth() / 2, this.top + this.getHeight() / 2);\n\t        }\n\t\n\t        /**\r\n\t         * Returns `this` subtract `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'difference',\n\t        value: function difference(other) {\n\t            if (!other) {\n\t                throw new Error(\"difference requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return new BoundingBox(this.left - other.left, this.top - other.top, this.right - other.right, this.bottom - other.bottom);\n\t        }\n\t\n\t        /**\r\n\t         * Returns a position, which if `this` is set to, `this` will be centered on `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Vector} position\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCenteredOnPosition',\n\t        value: function getCenteredOnPosition(other) {\n\t            if (!other) {\n\t                throw new Error(\"getCenteredOnPosition requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return other.getCenterPosition().subtract(this.getCenterPosition().subtract(this.getPosition()));\n\t        }\n\t\n\t        /**\r\n\t         * Returns the intersection between `this` and `other`.\r\n\t         * This will return a {@link Vector} if they only intersect at a point.\r\n\t         * This will return a {@link BoundingBox} if they intersect over an area or line.\r\n\t         * This will return a undefined if they do not intersect.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Vector|BoundingBox|undefined} intersection object\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getIntersection',\n\t        value: function getIntersection(other) {\n\t            if (!other) {\n\t                throw new Error(\"getIntersection requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            var left = Math.max(this.left, other.left),\n\t                top = Math.max(this.top, other.top),\n\t                right = Math.min(this.right, other.right),\n\t                bottom = Math.min(this.bottom, other.bottom);\n\t\n\t            if (left === right && top === bottom) {\n\t                return new _Vector2.default(left, top);\n\t            } else if (left <= right && top <= bottom) {\n\t                return new BoundingBox(left, top, right, bottom);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Returns the squared distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number} squared distance\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getDistanceSquaredToPoint',\n\t        value: function getDistanceSquaredToPoint(other) {\n\t            other = other.getVector();\n\t            var cLeft = other.left <= this.left ? this.left : other.left >= this.right ? this.right : other.left;\n\t            var cTop = other.top <= this.top ? this.top : other.top >= this.bottom ? this.bottom : other.top;\n\t            var cPos = new _Vector2.default(cLeft, cTop);\n\t\n\t            return cPos.distanceSquared(other);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the distance between `this` and `other`.\r\n\t         * @param {Vector}\r\n\t         * @returns {Number} distance\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getDistanceToPoint',\n\t        value: function getDistanceToPoint(other) {\n\t            return Math.sqrt(this.getDistanceSquaredToPoint(other));\n\t        }\n\t\n\t        /**\r\n\t         * Sets `this`'s properties to `other`'s properties.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'set',\n\t        value: function set(other) {\n\t            if (!other) {\n\t                throw new Error(\"set requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            this.left = other.left;\n\t            this.top = other.top;\n\t            this.right = other.right;\n\t            this.bottom = other.bottom;\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` to position at `left` and/or `top`.\r\n\t         * @param {Number} [left=null]\r\n\t         * @param {Number} [top=null]\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top) {\n\t            if (left && left.constructor === Number) {\n\t                this.right = left + (this.right - this.left);\n\t                this.left = left;\n\t            }\n\t            if (top && top.constructor === Number) {\n\t                this.bottom = top + (this.bottom - this.top);\n\t                this.top = top;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n\t         * @param {Number} [deltaLeft=null]\r\n\t         * @param {Number} [deltaTop=null]\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop) {\n\t            if (deltaLeft && deltaLeft.constructor === Number) {\n\t                this.left += deltaLeft;\n\t                this.right += deltaLeft;\n\t            }\n\t            if (deltaTop && deltaTop.constructor === Number) {\n\t                this.top += deltaTop;\n\t                this.bottom += deltaTop;\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Resize `this` to size `width` and/or `height`, anchored at `anchor`.\r\n\t         * @param {Number} [width=null]\r\n\t         * @param {Number} [height=null]\r\n\t         * @param {String} [anchor='top-left'] supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\"\r\n\t         * @returns {BoundingBox} self\r\n\t         */\n\t\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, anchor) {\n\t            // NOTE: anchor supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\". By default it is \"top-left\".\n\t            // NOTE: anchor also supports being passed as a position. Allowing the resize anchor to be anywhere other than\n\t            //       the predefined strings.\n\t            var curSize = this.getSize();\n\t            var newSize = new _Vector2.default(width || curSize.left, height || curSize.top);\n\t\n\t            anchor = anchor || 'top-left';\n\t            if (typeof anchor === 'string' || anchor instanceof String) {\n\t                var anchorStr = anchor;\n\t\n\t                anchor = this.getPosition();\n\t                if (anchorStr.indexOf('right') >= 0) {\n\t                    anchor.left += curSize.left;\n\t                }\n\t                if (anchorStr.indexOf('bottom') >= 0) {\n\t                    anchor.top += curSize.top;\n\t                }\n\t            }\n\t\n\t            this.left += (anchor.left - this.left) * (curSize.left - newSize.left) / curSize.left;\n\t            this.right += (anchor.left - this.right) * (curSize.left - newSize.left) / curSize.left;\n\t            this.top += (anchor.top - this.top) * (curSize.top - newSize.top) / curSize.top;\n\t            this.bottom += (anchor.top - this.bottom) * (curSize.top - newSize.top) / curSize.top;\n\t            return this;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` encapsulates `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isContains',\n\t        value: function isContains(other) {\n\t            if (!other) {\n\t                throw new Error(\"isContains requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return other.left >= this.left && other.right <= this.right && other.top >= this.top && other.bottom <= this.bottom;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` encapsulates at least one of `others`.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someContains',\n\t        value: function someContains(others) {\n\t            if (!others) {\n\t                throw new Error(\"someContains requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"someContains requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isContains(others[index])) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` touches an edge of `other`, but does not intersect area.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isTouching',\n\t        value: function isTouching(other) {\n\t            if (!other) {\n\t                throw new Error(\"isTouching requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return this.top <= other.bottom && this.bottom >= other.top && (this.left === other.right || this.right === other.left) || this.left <= other.right && this.right >= other.left && (this.top === other.bottom || this.bottom === other.top);\n\t        }\n\t\n\t        /**\r\n\t         * If `this` touches one of `others`, but does not intersect area, then this returns the `this` edge name.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {String|undefined} edge name\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getEdgeTouching',\n\t        value: function getEdgeTouching(others) {\n\t            if (!others) {\n\t                throw new Error(\"getEdgeTouching requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                others = [others];\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                var other = others[index].getBoundingBox();\n\t\n\t                if (this.top <= other.bottom && this.bottom >= other.top) {\n\t                    if (this.left === other.right) {\n\t                        return 'left';\n\t                    }\n\t                    if (this.right === other.left) {\n\t                        return 'right';\n\t                    }\n\t                }\n\t                if (this.left <= other.right && this.right >= other.left) {\n\t                    if (this.top === other.bottom) {\n\t                        return 'top';\n\t                    }\n\t                    if (this.bottom === other.top) {\n\t                        return 'bottom';\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * If `this` touches one of `others`, but does not intersect area, then this returns the `other` edge name.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {String|undefined} edge name\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getOtherEdgeTouching',\n\t        value: function getOtherEdgeTouching(others) {\n\t            if (!others) {\n\t                throw new Error(\"getOtherEdgeTouching requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                others = [others];\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                var other = others[index].getBoundingBox();\n\t\n\t                if (this.top <= other.bottom && this.bottom >= other.top) {\n\t                    if (this.left === other.right) {\n\t                        return 'right';\n\t                    }\n\t                    if (this.right === other.left) {\n\t                        return 'left';\n\t                    }\n\t                }\n\t                if (this.left <= other.right && this.right >= other.left) {\n\t                    if (this.top === other.bottom) {\n\t                        return 'bottom';\n\t                    }\n\t                    if (this.bottom === other.top) {\n\t                        return 'top';\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Determines which edges of `this` is closest to `other`, returns all edges in sorted order by distance.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {String[]} edge names sorted from closest to furthest\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getEdgeClosestOrder',\n\t        value: function getEdgeClosestOrder(other) {\n\t            if (!other) {\n\t                throw new Error(\"getEdgeClosest requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t            var centerPos = this.getCenterPosition();\n\t            var dis = [];\n\t\n\t            dis.push({\n\t                'edge': 'left',\n\t                dis: other.getDistanceSquaredToPoint(this.left, centerPos.top)\n\t            });\n\t            dis.push({\n\t                'edge': 'top',\n\t                dis: other.getDistanceSquaredToPoint(centerPos.left, this.top)\n\t            });\n\t            dis.push({\n\t                'edge': 'right',\n\t                dis: other.getDistanceSquaredToPoint(this.right, centerPos.top)\n\t            });\n\t            dis.push({\n\t                'edge': 'bottom',\n\t                dis: other.getDistanceSquaredToPoint(centerPos.left, this.bottom)\n\t            });\n\t            dis.sort(function (a, b) {\n\t                return a.dis - b.dis;\n\t            });\n\t\n\t            return dis.map(function (dis) {\n\t                return dis.edge;\n\t            });\n\t        }\n\t\n\t        /**\r\n\t         * Determines which `this` edge is closest to `other`.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {String} edge name\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getEdgeClosest',\n\t        value: function getEdgeClosest(other) {\n\t            var edges = this.getEdgeClosestOrder(other);\n\t\n\t            return edges[0];\n\t        }\n\t\n\t        /**\r\n\t         * Returns a vector representing the delta position to add to `this` to snap to `other`.<br>\r\n\t         * Note: `snapDelta` may contain `NaN` for `left` or `right`\r\n\t         * @param {BoundingBox}\r\n\t         * @param {Number} [snapDistance=5] max distance to move `this`\r\n\t         * @returns {Vector} snapDelta\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getSnapDelta',\n\t        value: function getSnapDelta(other, snapDistance) {\n\t            if (!other) {\n\t                throw new Error(\"getSnapDelta requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t            snapDistance = snapDistance || 5;\n\t\n\t            var snapDelta = new _Vector2.default(NaN, NaN);\n\t\n\t            if (this.top <= other.bottom && this.bottom >= other.top) {\n\t                // Handle x-snap:\n\t                var leftRightDis = minAbs(other.left - this.right, other.right - this.left);\n\t\n\t                if (leftRightDis.abs <= snapDistance) {\n\t                    // this.LeftRightSnapTo(other)\n\t                    snapDelta.left = leftRightDis.min;\n\t\n\t                    // Handle y-subsnap:\n\t                    var topBottomDis = minAbs(other.top - this.top, other.bottom - this.bottom);\n\t\n\t                    if (topBottomDis.abs <= snapDistance) {\n\t                        // this.TopBottomSubSnapTo(other)\n\t                        snapDelta.top = topBottomDis.min;\n\t                    }\n\t                }\n\t            } else if (this.left <= other.right && this.right >= other.left) {\n\t                // Handle y-snap:\n\t                var _topBottomDis = minAbs(other.top - this.bottom, other.bottom - this.top);\n\t\n\t                if (_topBottomDis.abs <= snapDistance) {\n\t                    // this.TopBottomSnapTo(other)\n\t                    snapDelta.top = _topBottomDis.min;\n\t\n\t                    // Handle x-subsnap:\n\t                    var _leftRightDis = minAbs(other.left - this.left, other.right - this.right);\n\t\n\t                    if (_leftRightDis.abs <= snapDistance) {\n\t                        // this.LeftRightSubSnapTo(other)\n\t                        snapDelta.left = _leftRightDis.min;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return snapDelta;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` touches an edge of one of `others`, but does not intersect area.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someTouching',\n\t        value: function someTouching(others) {\n\t            if (!others) {\n\t                throw new Error(\"someTouching requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"someTouching requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isTouching(others[index])) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` intersects an area of `others`, not an edge.\r\n\t         * @param {BoundingBox}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isColliding',\n\t        value: function isColliding(other) {\n\t            if (!other) {\n\t                throw new Error(\"isColliding requires argument 'other'\");\n\t            }\n\t            other = other.getBoundingBox();\n\t\n\t            return this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top;\n\t        }\n\t\n\t        /**\r\n\t         * Determines if `this` intersects an area of one of `others`, not an edge.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'someColliding',\n\t        value: function someColliding(others) {\n\t            if (!others) {\n\t                throw new Error(\"someColliding requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"someColliding requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isColliding(others[index])) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        /**\r\n\t         * Returns which of `other` that `this` intersects an area of, not an edge.\r\n\t         * @param {BoundingBox[]}\r\n\t         * @returns {BoundingBox|undefined}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getColliding',\n\t        value: function getColliding(others) {\n\t            if (!others) {\n\t                throw new Error(\"getColliding requires argument 'others'\");\n\t            }\n\t            if (others.constructor !== Array) {\n\t                throw new Error(\"getColliding requires argument 'others' of type Array\");\n\t            }\n\t\n\t            for (var index = 0; index < others.length; index += 1) {\n\t                if (this.isColliding(others[index])) {\n\t                    return others[index];\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return BoundingBox;\n\t}();\n\t\n\texports.default = BoundingBox;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\t__webpack_require__(10);\n\t\n\t// TODO: Add runtime checks here for OpenFin and Electron\n\tvar runtime = void 0; /* global fin */\n\t\n\t\n\tif (typeof process !== 'undefined' && process && process.versions && process.versions.electron || typeof window !== 'undefined' && window && window.nodeRequire && window.nodeRequire.runtime) {\n\t    // We are running in an Electron Runtime:\n\t    runtime = __webpack_require__(11);\n\t} else if (typeof fin !== 'undefined' && fin && fin.desktop && fin.desktop.main) {\n\t    // We are running in an OpenFin Runtime:\n\t    runtime = __webpack_require__(18);\n\t} else {\n\t    // We are running in an Browser Runtime:\n\t    runtime = __webpack_require__(21);\n\t}\n\t\n\texports.default = runtime;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar callbacks = [];\n\tvar isReady = false;\n\t\n\t/**\r\n\t * Executes callback when windowmanager is ready.\r\n\t * @memberof windowmanager\r\n\t * @method\r\n\t * @param {callback}\r\n\t */\n\t_global2.default.onReady = function (callback) {\n\t    // Check if callback is not a function:\n\t    if (!(callback && callback.constructor && callback.call && callback.apply)) {\n\t        throw new Error('onReady expects a function passed as the callback argument!');\n\t    }\n\t\n\t    // Check if already ready:\n\t    if (isReady) {\n\t        callback();\n\t    }\n\t\n\t    // Check to see if callback is already in callbacks:\n\t    if (callbacks.indexOf(callback) >= 0) {\n\t        return;\n\t    }\n\t\n\t    callbacks.push(callback);\n\t};\n\t\n\t/**\r\n\t * Returns if windowmanager is ready.\r\n\t * @memberof windowmanager\r\n\t * @method\r\n\t * @returns {Boolean}\r\n\t */\n\t_global2.default.isReady = function () {\n\t    return isReady;\n\t};\n\t\n\texports.default = new _index.SyncCallback(function () {\n\t    isReady = true;\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = callbacks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var callback = _step.value;\n\t            callback();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    callbacks = [];\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Setup windowmanager runtime variables for Electron\n\t// TODO: Determine if renderer should be setup using the startup script, and have renderer be a NOOP\n\t\n\tif (_global2.default._isNode) {\n\t    // We are running in an Electron's main script:\n\t    __webpack_require__(14);\n\t} else if (_global2.default._isRenderer) {\n\t    // We are running in an Electron renderer:\n\t    __webpack_require__(16);\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _require2 = __webpack_require__(13);\n\t\n\tvar _require3 = _interopRequireDefault(_require2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_global2.default._isNode = false;\n\t_global2.default._isStartup = false;\n\t_global2.default._isRenderer = false;\n\t_global2.default.runtime.name = 'Electron';\n\t_global2.default.runtime.version = undefined;\n\t_global2.default.runtime.isElectron = true;\n\t\n\t// Determine if this is node or renderer:\n\t// TODO: Clean up the following code to clearly identify the three potential states: node, startup, renderer\n\tif (typeof global !== 'undefined' && global) {\n\t    // We are running in an Electron Window Backend's Runtime:\n\t    var _nodeRequire = (0, _require3.default)('electron'),\n\t        BrowserWindow = _nodeRequire.BrowserWindow;\n\t\n\t    // The following check works because BrowserWindow is not exposed to the window scripts:\n\t\n\t\n\t    _global2.default._isNode = BrowserWindow != null;\n\t    _global2.default._isStartup = !_global2.default._isNode;\n\t    _global2.default.runtime.version = global.process.versions.electron;\n\t\n\t    // If is a window startup script:\n\t    if (_global2.default._isStartup) {\n\t        (function () {\n\t            var _require = _require3.default;\n\t\n\t            _require.runtime = _global2.default.runtime;\n\t            _require.workingDir = _require('path').dirname(_require.main.filename);\n\t            _require.windowmanagerPath = __filename; // Used so new windows know where to load windowmanager from.\n\t            global.nodeRequire = _require; // Used so windowmanager in a window can access electron.\n\t            // TODO: Determine if window can be set directly here.\n\t\n\t            process.once('loaded', function () {\n\t                // TODO: Is this needed?\n\t                global.nodeRequire = _require;\n\t            });\n\t        })();\n\t    }\n\t} else if (typeof window !== 'undefined' && window) {\n\t    _global2.default._isRenderer = true;\n\t\n\t    if (window.nodeRequire != null) {\n\t        // We are running in an Electron Window's Runtime:\n\t        _global2.default.runtime = window.nodeRequire.runtime;\n\t        _global2.default._windows = new Map();\n\t    }\n\t}\n\t\n\t// This is used to store info across windows:\n\t// Everything on here gets exported as windowmanager.\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t// Exposes node require\n\texports.default = eval('typeof require !== \\'undefined\\' && require'); // eslint-disable-line no-eval\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\t__webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Setup window backend\n\t\n\t// TODO: Make scalejs.windowmanager the main.js script for Electron. Load the config.json\n\t\n\t_ready2.default._deref();\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _require = __webpack_require__(13);\n\t\n\tvar _require2 = _interopRequireDefault(_require);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _nodeRequire = (0, _require2.default)('electron'),\n\t    BrowserWindow = _nodeRequire.BrowserWindow;\n\t\n\t// TODO: Give the node backend access to windowmanager Window-like functionality\n\t// This is Electron's main process:\n\t\n\t\n\tvar _windowmanager$geomet = _global2.default.geometry,\n\t    Vector = _windowmanager$geomet.Vector,\n\t    BoundingBox = _windowmanager$geomet.BoundingBox;\n\t\n\t// TODO: Solve event syncing between windows\n\t\n\tBrowserWindow.prototype._notifyReady = function () {\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = BrowserWindow.getAllWindows()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var other = _step.value;\n\t\n\t            other.webContents.send('window-create', this.id);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._ensureDockSystem = function () {\n\t    var _this = this;\n\t\n\t    // Make sure docked group exists:\n\t    if (this._dockedGroup === undefined) {\n\t        (function () {\n\t            _this._dockedGroup = [_this];\n\t\n\t            _this.on('closed', function () {\n\t                // Clean up the dock system when this window closes:\n\t                this.undock();\n\t            });\n\t\n\t            _this.on('maximize', function () {\n\t                this.undock(); // TODO: Support changing size when docked.\n\t            });\n\t\n\t            _this.on('minimize', function () {\n\t                this._dockMinimize();\n\t            });\n\t\n\t            _this.on('restore', function () {\n\t                var _iteratorNormalCompletion2 = true;\n\t                var _didIteratorError2 = false;\n\t                var _iteratorError2 = undefined;\n\t\n\t                try {\n\t                    for (var _iterator2 = this._dockedGroup[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                        var other = _step2.value;\n\t\n\t                        if (other !== this) {\n\t                            other.restore();\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError2 = true;\n\t                    _iteratorError2 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                            _iterator2.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError2) {\n\t                            throw _iteratorError2;\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t\n\t            var lastBounds = _this.getBounds();\n\t\n\t            _this.on('move', function () {\n\t                var newBounds = this.getBounds();\n\t\n\t                // this._dockMoveTo(newBounds.x, newBounds.y, [lastBounds.x, lastBounds.y]);\n\t                lastBounds = newBounds;\n\t            });\n\t\n\t            _this.on('resize', function () {\n\t                var newBounds = this.getBounds();\n\t\n\t                if (newBounds.width !== lastBounds.width || newBounds.height !== lastBounds.height) {\n\t                    this.undock(); // TODO: Support changing size when docked.\n\t                }\n\t                // TODO: Handle resize positions of other docked windows\n\t                //       This requires reworking how windows are docked/connected\n\t                //       (they must be docked to edges of windows, not the windows themselves)\n\t                /* for (let index = 0; index < this._dockedGroup.length; index += 1) {\r\n\t                    const other = this._dockedGroup[index];\r\n\t                      if (other !== this) {\r\n\t                        other.setPosition()\r\n\t                    }\r\n\t                }*/\n\t\n\t                lastBounds = newBounds;\n\t            });\n\t        })();\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype.dock = function (otherID) {\n\t    this._ensureDockSystem();\n\t\n\t    // Resolve otherID, and fail if otherID doesn't exist.\n\t    var other = BrowserWindow.fromId(otherID);\n\t\n\t    if (other === undefined) {\n\t        return;\n\t    } // Failed to find other. TODO: Return error\n\t\n\t    // If other is already in the group, return:\n\t    if (this._dockedGroup.indexOf(other) >= 0) {\n\t        return;\n\t    }\n\t\n\t    // Make sure docked group exists:\n\t    other._ensureDockSystem();\n\t\n\t    // Loop through all windows in otherGroup and add them to this's group:\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\t\n\t    try {\n\t        for (var _iterator3 = other._dockedGroup[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            var otherWin = _step3.value;\n\t\n\t            this._dockedGroup.push(otherWin);\n\t            // Sharing the array between window objects makes it easier to manage:\n\t            otherWin._dockedGroup = this._dockedGroup;\n\t        }\n\t\n\t        // TODO: Check if otherGroup is touching\n\t    } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                _iterator3.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype.undock = function () {\n\t    this._ensureDockSystem();\n\t\n\t    // Check to see if window is already undocked:\n\t    if (this._dockedGroup.length === 1) {\n\t        return;\n\t    }\n\t\n\t    // Undock this:\n\t    this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n\t    this._dockedGroup = [this];\n\t\n\t    // TODO: Redock those still touching, EXCEPT 'this'.\n\t};\n\t\n\tBrowserWindow.prototype._dockFocus = function () {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion4 = true;\n\t    var _didIteratorError4 = false;\n\t    var _iteratorError4 = undefined;\n\t\n\t    try {\n\t        for (var _iterator4 = this._dockedGroup[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t            var window = _step4.value;\n\t\n\t            if (window !== this) {\n\t                window.setAlwaysOnTop(true);\n\t                window.setAlwaysOnTop(false);\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                _iterator4.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError4) {\n\t                throw _iteratorError4;\n\t            }\n\t        }\n\t    }\n\t\n\t    this.setAlwaysOnTop(true);\n\t    this.setAlwaysOnTop(false);\n\t};\n\t\n\tBrowserWindow.prototype._dragStart = function () {\n\t    // if (!this.emit('drag-start')) { return; } // Allow preventing drag\n\t    this._ensureDockSystem();\n\t\n\t    this.restore();\n\t\n\t    var _iteratorNormalCompletion5 = true;\n\t    var _didIteratorError5 = false;\n\t    var _iteratorError5 = undefined;\n\t\n\t    try {\n\t        for (var _iterator5 = this._dockedGroup[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t            var window = _step5.value;\n\t\n\t            window._dragStartPos = window.getPosition();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                _iterator5.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError5) {\n\t                throw _iteratorError5;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._getBounds = function () {\n\t    var bounds = this.getBounds();\n\t\n\t    return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\n\t};\n\t\n\tBrowserWindow.prototype._dragBy = function (deltaLeft, deltaTop) {\n\t    this._ensureDockSystem();\n\t\n\t    // Perform Snap:\n\t    var thisBounds = this._getBounds().moveTo(this._dragStartPos[0] + deltaLeft, this._dragStartPos[1] + deltaTop);\n\t    var snapDelta = new Vector(NaN, NaN);\n\t\n\t    var _iteratorNormalCompletion6 = true;\n\t    var _didIteratorError6 = false;\n\t    var _iteratorError6 = undefined;\n\t\n\t    try {\n\t        for (var _iterator6 = BrowserWindow.getAllWindows()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t            var other = _step6.value;\n\t\n\t            if (other._dockedGroup !== this._dockedGroup) {\n\t                snapDelta.setMin(thisBounds.getSnapDelta(other._getBounds()));\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                _iterator6.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError6) {\n\t                throw _iteratorError6;\n\t            }\n\t        }\n\t    }\n\t\n\t    deltaLeft += snapDelta.left || 0;\n\t    deltaTop += snapDelta.top || 0;\n\t\n\t    var _iteratorNormalCompletion7 = true;\n\t    var _didIteratorError7 = false;\n\t    var _iteratorError7 = undefined;\n\t\n\t    try {\n\t        for (var _iterator7 = this._dockedGroup[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t            var _other = _step7.value;\n\t\n\t            var pos = _other._dragStartPos;\n\t\n\t            // If other doesn't have a drag position, start it:\n\t            if (pos === undefined) {\n\t                pos = _other._dragStartPos = _other.getPosition();\n\t                pos[0] -= deltaLeft;\n\t                pos[1] -= deltaTop;\n\t            }\n\t\n\t            _other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError7 = true;\n\t        _iteratorError7 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                _iterator7.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError7) {\n\t                throw _iteratorError7;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dragStop = function () {\n\t    this._ensureDockSystem();\n\t\n\t    // Dock to those it snapped to:\n\t    var thisBounds = this._getBounds();\n\t\n\t    var _iteratorNormalCompletion8 = true;\n\t    var _didIteratorError8 = false;\n\t    var _iteratorError8 = undefined;\n\t\n\t    try {\n\t        for (var _iterator8 = BrowserWindow.getAllWindows()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t            var other = _step8.value;\n\t\n\t            if (thisBounds.isTouching(other._getBounds())) {\n\t                this.dock(other.id);\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError8 = true;\n\t        _iteratorError8 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t                _iterator8.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError8) {\n\t                throw _iteratorError8;\n\t            }\n\t        }\n\t    }\n\t\n\t    var _iteratorNormalCompletion9 = true;\n\t    var _didIteratorError9 = false;\n\t    var _iteratorError9 = undefined;\n\t\n\t    try {\n\t        for (var _iterator9 = this._dockedGroup[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t            var window = _step9.value;\n\t\n\t            delete window._dragStartPos;\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError9 = true;\n\t        _iteratorError9 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t                _iterator9.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError9) {\n\t                throw _iteratorError9;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockMoveTo = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var oldPos = this.getPosition();\n\t    var deltaLeft = left - oldPos[0];\n\t    var deltaTop = top - oldPos[1];\n\t\n\t    var _iteratorNormalCompletion10 = true;\n\t    var _didIteratorError10 = false;\n\t    var _iteratorError10 = undefined;\n\t\n\t    try {\n\t        for (var _iterator10 = this._dockedGroup[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t            var other = _step10.value;\n\t\n\t            var pos = other.getPosition();\n\t\n\t            other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError10 = true;\n\t        _iteratorError10 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t                _iterator10.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError10) {\n\t                throw _iteratorError10;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockMinimize = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion11 = true;\n\t    var _didIteratorError11 = false;\n\t    var _iteratorError11 = undefined;\n\t\n\t    try {\n\t        for (var _iterator11 = this._dockedGroup[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t            var window = _step11.value;\n\t\n\t            window.minimize();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError11 = true;\n\t        _iteratorError11 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t                _iterator11.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError11) {\n\t                throw _iteratorError11;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockHide = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion12 = true;\n\t    var _didIteratorError12 = false;\n\t    var _iteratorError12 = undefined;\n\t\n\t    try {\n\t        for (var _iterator12 = this._dockedGroup[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t            var window = _step12.value;\n\t\n\t            window.hide();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError12 = true;\n\t        _iteratorError12 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t                _iterator12.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError12) {\n\t                throw _iteratorError12;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tBrowserWindow.prototype._dockShow = function (left, top) {\n\t    this._ensureDockSystem();\n\t\n\t    var _iteratorNormalCompletion13 = true;\n\t    var _didIteratorError13 = false;\n\t    var _iteratorError13 = undefined;\n\t\n\t    try {\n\t        for (var _iterator13 = this._dockedGroup[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t            var window = _step13.value;\n\t\n\t            window.show();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError13 = true;\n\t        _iteratorError13 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t                _iterator13.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError13) {\n\t                throw _iteratorError13;\n\t            }\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _Window = __webpack_require__(17);\n\t\n\tvar _Window2 = _interopRequireDefault(_Window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _window$nodeRequire = window.nodeRequire('electron'),\n\t    ipcRenderer = _window$nodeRequire.ipcRenderer;\n\t\n\t_global2.default.messagebus = function () {\n\t    // TODO: Optimize Electron's messagebus by keeping track of listeners\n\t    //       in the main process for early termination.\n\t    // TODO: Listener cleanup on this window, or other window close.\n\t    // TODO: Use a custom eventName, so to not collide with current ones.\n\t    var wrappedListeners = {};\n\t    var windowWrappedListeners = {};\n\t\n\t    function wrapListener(window, listener) {\n\t        return function (_, message) {\n\t            // If listener only listens from a specific window, check that this message is from that window:\n\t            if (window && window._id !== message.winID) {\n\t                return;\n\t            }\n\t\n\t            var fromWindow = _global2.default.Window.getByID(message.winID);\n\t\n\t            // Don't execute listeners when the sender is the same as the listener:\n\t            if (fromWindow._id === _global2.default.Window.current._id) {\n\t                return;\n\t            }\n\t\n\t            listener.apply(fromWindow, message.args);\n\t            // TODO: Send response if response is expected\n\t        };\n\t    }\n\t\n\t    return {\n\t        send: function send(eventName) {\n\t            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                args[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            var curWin = _global2.default.Window.current;\n\t            var message = {\n\t                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n\t                winID: curWin._id,\n\t                event: eventName,\n\t                args: args // If the first arg is a window, it gets removed later.\n\t            };\n\t\n\t            if (args.length > 0 && args[0] instanceof _Window2.default) {\n\t                // Remove window from args in message:\n\t                var _window = args.shift(); // args is by reference in message currently\n\t\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (_window._id === curWin._id) {\n\t                    return;\n\t                }\n\t\n\t                _window._window.webContents.send(eventName, message);\n\t            } else {\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = _global2.default.Window.getAll()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var _window2 = _step.value;\n\t\n\t                        if (_window2 !== curWin) {\n\t                            _window2._window.webContents.send(eventName, message);\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        on: function on(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            var onMessage = wrapListener(window, listener);\n\t\n\t            if (window !== undefined) {\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === _global2.default.Window.current._id) {\n\t                    return;\n\t                }\n\t\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                winLisGroup[eventName].set(listener, onMessage);\n\t                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\n\t                wrappedListeners[eventName].set(listener, onMessage);\n\t            }\n\t            ipcRenderer.on(eventName, onMessage);\n\t        },\n\t        off: function off(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                ipcRenderer.removeListener(eventName, winLisGroup[eventName].delete(listener));\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                ipcRenderer.removeListener(eventName, wrappedListeners[eventName].get(listener));\n\t            }\n\t        }\n\t    };\n\t}();\n\t\n\t_ready2.default._deref();\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(12);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _window$nodeRequire = window.nodeRequire('electron'),\n\t    ipcRenderer = _window$nodeRequire.ipcRenderer,\n\t    remote = _window$nodeRequire.remote;\n\t\n\tvar url = window.nodeRequire('url');\n\tvar BrowserWindow = remote.BrowserWindow;\n\t\n\tvar currentWin = remote.getCurrentWindow();\n\tvar defaultConfig = {\n\t    width: 600,\n\t    height: 600,\n\t    frame: false,\n\t    resizable: true,\n\t    hasShadow: false,\n\t    icon: 'favicon.ico',\n\t    webPreferences: {\n\t        nodeIntegration: false,\n\t        preload: window.nodeRequire.windowmanagerPath\n\t    }\n\t};\n\tvar configMap = {\n\t    left: 'x',\n\t    top: 'y'\n\t};\n\tvar acceptedEventHandlers = ['ready', 'drag-start', 'drag-before', 'drag-stop', 'dock-before', 'move', 'move-before', 'resize-before', 'close', 'minimize'];\n\t\n\tvar Window = function (_EventHandler) {\n\t    _inherits(Window, _EventHandler);\n\t\n\t    function Window(config) {\n\t        _classCallCheck(this, Window);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Window.__proto__ || Object.getPrototypeOf(Window)).call(this, acceptedEventHandlers));\n\t        // Call the parent constructor:\n\t\n\t\n\t        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n\t        var isArgConfig = config.webContents === undefined; // TODO: Improve checking of arguments.\n\t\n\t        if (isArgConfig) {\n\t            for (var prop in config) {\n\t                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n\t                    config[configMap[prop]] = config[prop];\n\t                    delete config[prop];\n\t                }\n\t            }\n\t            for (var _prop in defaultConfig) {\n\t                if (defaultConfig.hasOwnProperty(_prop)) {\n\t                    config[_prop] = config[_prop] || defaultConfig[_prop];\n\t                }\n\t            }\n\t            var _url = config.url;\n\t\n\t            delete config.url;\n\t\n\t            _this._window = new BrowserWindow(config);\n\t            _this._id = _this._window.id;\n\t            config.title = config.title == null ? _this._id : config.title;\n\t            // The following logic works like (in logical if-order):\n\t            //       1. If url has 'http' or 'file' at start, then use url, no modification.\n\t            //       2. If url has no '/', take location.href and remove all stuff up till last /, then append url.\n\t            //       3. If url has '/':\n\t            //          a. If location.href has 'http', extract the root url (domain) and append url.\n\t            //          b. If location.href has 'file', take remote.getGlobal('workingDir'), and then append url.\n\t            // Resolve url:\n\t            if (!/^(file|http)/i.test(_url)) {\n\t                if (_url[0] !== '/') {\n\t                    _url = url.resolve(location.href, _url); // TODO: Is this unsafe with '..'?\n\t                } else if (/^http/i.test(location.href)) {\n\t                    _url = location.origin + _url; // TODO: Safe?\n\t                } else if (/^file/i.test(location.href)) {\n\t                    _url = remote.getGlobal('workingDir') + _url; // TODO: Safe?\n\t                }\n\t                // If can\\'t determine url to load, then attempt to just load the url.\n\t            }\n\t            _this._window.loadURL(_url);\n\t            _this._window.setTitle(config.title);\n\t        } else {\n\t            _this._window = config;\n\t            _this._id = _this._window.id;\n\t        }\n\t        _global2.default._windows.set(_this._id, _this);\n\t        _this._window._ensureDockSystem();\n\t\n\t        // Setup _window event listeners:\n\t        // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\n\t        var thisWindow = _this;\n\t\n\t        function _onmove() {\n\t            thisWindow.emit('move'); // TODO: Pass what position it is at.\n\t        }\n\t        _this._window.on('move', _onmove);\n\t\n\t        function _onminimize() {\n\t            thisWindow.emit('minimize'); // TODO: Pass what position it is at.\n\t        }\n\t        _this._window.on('minimize', _onminimize);\n\t\n\t        function _onclose() {\n\t            window.removeEventListener('unload', _oncurrclose); // eslint-disable-line no-use-before-define\n\t            _global2.default._windows.delete(thisWindow._id);\n\t            thisWindow._isClosed = true;\n\t            thisWindow.emit('close');\n\t            thisWindow._window = undefined;\n\t            // TODO: Clean up ALL listeners\n\t        }\n\t\n\t        function _oncurrclose() {\n\t            _global2.default._windows.delete(thisWindow._id);\n\t            thisWindow._window.removeListener('move', _onmove);\n\t            thisWindow._window.removeListener('close', _onclose);\n\t            thisWindow._window.removeListener('minimize', _onminimize);\n\t        }\n\t\n\t        // Register _oncurrclose when page changes or window closes to clean up listeners:\n\t        window.addEventListener('unload', _oncurrclose);\n\t\n\t        // If window isn't currentWin, execute local event listeners:\n\t        if (_this._window !== currentWin) {\n\t            _this._window.on('close', _onclose);\n\t        }\n\t\n\t        _this._isClosed = false;\n\t        _this._ready = true;\n\t        if (isArgConfig) {\n\t            _this._window._notifyReady();\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Window, [{\n\t        key: 'isReady',\n\t        value: function isReady() {\n\t            return this._window !== undefined && !this._isClosed();\n\t        }\n\t    }, {\n\t        key: 'onReady',\n\t        value: function onReady(callback) {\n\t            if (this.isClosed()) {\n\t                throw new Error('onReady can\\'t be called on a closed window');\n\t            }\n\t            if (this.isReady()) {\n\t                return callback.call(this);\n\t            }\n\t\n\t            this.once('ready', callback);\n\t        }\n\t    }, {\n\t        key: 'isClosed',\n\t        value: function isClosed() {\n\t            return this._isClosed;\n\t        }\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            var pos = this._window.getPosition();\n\t\n\t            return new _index2.Position(pos[0], pos[1]);\n\t        }\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            var size = this._window.getSize();\n\t\n\t            return size[0];\n\t        }\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            var size = this._window.getSize();\n\t\n\t            return size[1];\n\t        }\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            var size = this._window.getSize();\n\t\n\t            return new _index2.Position(size[0], size[1]);\n\t        }\n\t    }, {\n\t        key: 'getBounds',\n\t        value: function getBounds() {\n\t            var bounds = this._window.getBounds();\n\t\n\t            return new _index2.BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\n\t        }\n\t    }, {\n\t        key: 'getTitle',\n\t        value: function getTitle() {\n\t            return this._window.getTitle();\n\t        }\n\t    }, {\n\t        key: 'setTitle',\n\t        value: function setTitle(newTitle) {\n\t            if (!newTitle) {\n\t                throw new Error('setTitle requires one argument of type String');\n\t            }\n\t            this._window.setTitle(newTitle);\n\t        }\n\t    }, {\n\t        key: 'isHidden',\n\t        value: function isHidden() {\n\t            return !this.isShown();\n\t        }\n\t    }, {\n\t        key: 'isShown',\n\t        value: function isShown() {\n\t            return this._window.isVisible();\n\t        }\n\t    }, {\n\t        key: 'isMinimized',\n\t        value: function isMinimized() {\n\t            return this._window.isMinimized();\n\t        }\n\t    }, {\n\t        key: 'isMaximized',\n\t        value: function isMaximized() {\n\t            return this._window.isMaximized();\n\t        }\n\t    }, {\n\t        key: 'isRestored',\n\t        value: function isRestored() {\n\t            return this.isShown() && !this.isMinimized() && !this.isMaximized();\n\t        }\n\t    }, {\n\t        key: 'close',\n\t        value: function close(callback) {\n\t            if (this.isClosed()) {\n\t                return callback && callback();\n\t            }\n\t\n\t            this._window.close();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'minimize',\n\t        value: function minimize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('minimize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window._dockMinimize();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'maximize',\n\t        value: function maximize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('maximize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.maximize();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'show',\n\t        value: function show(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('show can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window._dockShow();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hide',\n\t        value: function hide(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('hide can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window._dockHide();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('restore can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.restore();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'bringToFront',\n\t        value: function bringToFront(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('bringToFront can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.setAlwaysOnTop(true);\n\t            this._window.setAlwaysOnTop(false);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'focus',\n\t        value: function focus(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('focus can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._window.focus();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Position(width, height);\n\t\n\t            this._window.setSize(size.left, size.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveTo can\\'t be called on an unready window');\n\t            }\n\t            var pos = new _index2.Position(left, top);\n\t\n\t            this._window._dockMoveTo(pos.left, pos.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveBy can\\'t be called on an unready window');\n\t            }\n\t            var bounds = this.getBounds();\n\t            var deltaPos = new _index2.Position(deltaLeft, deltaTop);\n\t\n\t            this._window._dockMoveTo(bounds.left + deltaPos.left, bounds.top + deltaPos.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setSize',\n\t        value: function setSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this._window.setSize(size.left, size.top);\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setBounds',\n\t        value: function setBounds(left, top, right, bottom, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var bounds = new _index2.BoundingBox(left, top, right, bottom);\n\t\n\t            this._window.setBounds({\n\t                x: bounds.left,\n\t                y: bounds.top,\n\t                width: bounds.getWidth(),\n\t                height: bounds.getHeight()\n\t            });\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'dock',\n\t        value: function dock(other) {\n\t            this._window.dock(other._window.id);\n\t        }\n\t    }, {\n\t        key: 'undock',\n\t        value: function undock() {\n\t            this._window.undock();\n\t        }\n\t    }], [{\n\t        key: 'getAll',\n\t        value: function getAll() {\n\t            return Array.from(_global2.default._windows.values());\n\t        }\n\t    }, {\n\t        key: 'getByID',\n\t        value: function getByID(id) {\n\t            return _global2.default._windows.get(id);\n\t        }\n\t    }, {\n\t        key: 'getCurrent',\n\t        value: function getCurrent() {\n\t            return Window.current;\n\t        }\n\t    }]);\n\t\n\t    return Window;\n\t}(_index.EventHandler);\n\t\n\t// Handle current window in this context:\n\t\n\t\n\tWindow.current = new Window(currentWin);\n\t\n\t(function () {\n\t    // Setup handlers on this window:\n\t    var wX = 0;\n\t    var wY = 0;\n\t    var dragging = false;\n\t\n\t    Window.current._window.on('focus', function () {\n\t        if (Window.current._window == null) {\n\t            return;\n\t        }\n\t\n\t        Window.current._window._dockFocus();\n\t    });\n\t\n\t    window.addEventListener('mousedown', function (event) {\n\t        if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t            dragging = true;\n\t            wX = event.screenX;\n\t            wY = event.screenY;\n\t            Window.current._window._dragStart();\n\t        }\n\t    });\n\t\n\t    window.addEventListener('mousemove', function (event) {\n\t        if (dragging) {\n\t            Window.current._window._dragBy(event.screenX - wX, event.screenY - wY);\n\t        }\n\t    });\n\t\n\t    window.addEventListener('mouseup', function () {\n\t        dragging = false;\n\t        Window.current._window._dragStop();\n\t    });\n\t\n\t    // Add context menu:\n\t    var Menu = remote.Menu;\n\t    var MenuItem = remote.MenuItem;\n\t    var rightClickPosition = null;\n\t    var menu = new Menu();\n\t\n\t    menu.append(new MenuItem({\n\t        label: 'Reload',\n\t        accelerator: 'CmdOrCtrl+R',\n\t        click: function click() {\n\t            Window.current._window.reload();\n\t        }\n\t    }));\n\t    menu.append(new MenuItem({\n\t        label: 'Reload app and restart children',\n\t        click: function click() {\n\t            // Close ALL windows:\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = _global2.default._windows.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var _window = _step.value;\n\t\n\t                    _window.close();\n\t                }\n\t                // Relaunch app:\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            remote.app.relaunch();\n\t            remote.app.exit(0);\n\t        }\n\t    }));\n\t    menu.append(new MenuItem({ type: 'separator' }));\n\t    menu.append(new MenuItem({\n\t        label: 'Inspect Element',\n\t        accelerator: 'CmdOrCtrl+Shift+I',\n\t        click: function click() {\n\t            Window.current._window.inspectElement(rightClickPosition.x, rightClickPosition.y);\n\t        }\n\t    }));\n\t\n\t    window.addEventListener('contextmenu', function (event) {\n\t        event.preventDefault();\n\t        rightClickPosition = { x: event.x, y: event.y };\n\t        menu.popup(Window.current._window);\n\t    }, false);\n\t})();\n\t\n\tfunction resolveWindowWithID(id) {\n\t    var window = _global2.default._windows.get(id);\n\t\n\t    if (window) return window;\n\t\n\t    // Window isn't registered yet in windowmanager, so do so:\n\t    var electronWin = BrowserWindow.fromId(id);\n\t\n\t    if (electronWin !== null) {\n\t        return new Window(electronWin);\n\t    }\n\t}\n\t\n\t// Add other browser windows to global windows:\n\tvar _iteratorNormalCompletion2 = true;\n\tvar _didIteratorError2 = false;\n\tvar _iteratorError2 = undefined;\n\t\n\ttry {\n\t    for (var _iterator2 = BrowserWindow.getAllWindows()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t        var other = _step2.value;\n\t\n\t        resolveWindowWithID(other.id);\n\t    }\n\t} catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t} finally {\n\t    try {\n\t        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t        }\n\t    } finally {\n\t        if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t        }\n\t    }\n\t}\n\t\n\tipcRenderer.on('window-create', function (event, otherID) {\n\t    _global2.default.emit('window-create', resolveWindowWithID(otherID));\n\t});\n\t\n\t_global2.default.Window = Window;\n\texports.default = Window;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(19);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _Window = __webpack_require__(20);\n\t\n\tvar _Window2 = _interopRequireDefault(_Window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* global fin */\n\tvar APP_UUID = 'app_uuid';\n\t\n\t_global2.default.messagebus = function () {\n\t    var wrappedListeners = {};\n\t    var windowWrappedListeners = {};\n\t\n\t    function wrapListener(listener) {\n\t        return function (message) {\n\t            var window = _Window2.default.getByID(message.winID);\n\t\n\t            // Don't execute listeners when the sender is the same as the listener:\n\t            if (window._id === _Window2.default.current._id) {\n\t                return;\n\t            }\n\t\n\t            listener.apply(window, message.args);\n\t            // TODO: Send response if response is expected\n\t        };\n\t    }\n\t\n\t    return {\n\t        send: function send(eventName) {\n\t            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                args[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            // TODO: Check if ready? Dunno if needed\n\t            var curWin = _Window2.default.current;\n\t            var message = {\n\t                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n\t                winID: curWin._id,\n\t                event: eventName,\n\t                args: args // If the first arg is a window, it gets removed later.\n\t            };\n\t\n\t            if (args.length > 0 && args[0] instanceof _Window2.default) {\n\t                // Remove window from args in message:\n\t                var window = args.shift(); // args is by reference in message currently\n\t\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === curWin._id) {\n\t                    return;\n\t                }\n\t\n\t                fin.desktop.InterApplicationBus.send(_Window2.default.current._window[APP_UUID], window._id, eventName, message);\n\t            } else {\n\t                // TODO: Possibly switch the below out for a loop through all windows?\n\t                fin.desktop.InterApplicationBus.send(_Window2.default.current._window[APP_UUID], eventName, message);\n\t            }\n\t        },\n\t        on: function on(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            var onMessage = wrapListener(listener);\n\t\n\t            if (window !== undefined) {\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === _Window2.default.current._id) {\n\t                    return;\n\t                }\n\t\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                winLisGroup[eventName].set(listener, onMessage);\n\t                fin.desktop.InterApplicationBus.subscribe(_Window2.default.current._window[APP_UUID], window._id, eventName, onMessage);\n\t                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\n\t                wrappedListeners[eventName].set(listener, onMessage);\n\t                fin.desktop.InterApplicationBus.subscribe(_Window2.default.current._window[APP_UUID], eventName, onMessage);\n\t            }\n\t        },\n\t        off: function off(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                fin.desktop.InterApplicationBus.unsubscribe(_Window2.default.current._window[APP_UUID], window._window._id, eventName, winLisGroup[eventName].delete(listener));\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                // delete on a Map returns the deleted value (desired onMessage):\n\t                fin.desktop.InterApplicationBus.unsubscribe(_Window2.default.current._window[APP_UUID], eventName, wrappedListeners[eventName].delete(listener));\n\t            }\n\t        }\n\t    };\n\t}();\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_global2.default.runtime.name = 'OpenFin'; /* global fin */\n\t\n\t_global2.default.runtime.version = undefined;\n\t_global2.default.runtime.isOpenFin = true;\n\t\n\tvar setVersion = _ready2.default.ref(function (version) {\n\t    _global2.default.runtime.version = version;\n\t});\n\t\n\tfin.desktop.main(_ready2.default.ref(function () {\n\t    fin.desktop.System.getVersion(setVersion); // TODO: Handle errorCallback\n\t\n\t    var app = fin.desktop.Application.getCurrent();\n\t    var mainWindow = app.getWindow().contentWindow;\n\t\n\t    if (mainWindow === window) {\n\t        _global2.default.runtime.isMain = true;\n\t        _global2.default._internalBus = new _index.EventHandler(Object.keys(_global2.default._eventListeners));\n\t        _global2.default._windows = new Map();\n\t    } // children get the above in the constructor of the Window.\n\t\n\t    // Wire the internal bus to emit events on windowmanager:\n\t    _global2.default._internalBus.addPipe(_global2.default);\n\t}));\n\t\n\t// This is used to store info across windows:\n\t// Everything on here gets exported as windowmanager.\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(19);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global fin */\n\t\n\t\n\tvar defaultConfig = {\n\t    defaultWidth: 600,\n\t    defaultHeight: 600,\n\t    frame: false,\n\t    resizable: true,\n\t    saveWindowState: false,\n\t    autoShow: true,\n\t    icon: location.href + 'favicon.ico'\n\t};\n\tvar configMap = {\n\t    title: 'name',\n\t    left: 'defaultLeft',\n\t    top: 'defaultTop',\n\t    width: 'defaultWidth',\n\t    height: 'defaultHeight'\n\t};\n\tvar acceptedEventHandlers = ['ready', 'drag-start', 'drag-before', 'drag-stop', 'dock-before', 'move', 'move-before', 'resize-before', 'close', 'minimize'];\n\tvar currentWin = void 0;\n\t\n\tfunction _setupDOM() {\n\t    var thisWindow = this;\n\t\n\t    // TODO: Rewrite to remove setTimeout for the following:\n\t    function setWindows() {\n\t        if (thisWindow._window.contentWindow.windowmanager) {\n\t            thisWindow._window.contentWindow.windowmanager._windows = _global2.default._windows;\n\t            thisWindow._window.contentWindow.windowmanager._internalBus = _global2.default._internalBus;\n\t        } else {\n\t            setTimeout(setWindows, 5);\n\t        }\n\t    }\n\t    setWindows();\n\t\n\t    this._window.getBounds(function (bounds) {\n\t        bounds.right = bounds.left + bounds.width;\n\t        bounds.bottom = bounds.top + bounds.height;\n\t        thisWindow._bounds.set(new _index2.BoundingBox(bounds));\n\t    });\n\t\n\t    // Setup _window event listeners:\n\t    // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\n\t    function onBoundsChange(event) {\n\t        event.right = event.left + event.width;\n\t        event.bottom = event.top + event.height;\n\t        thisWindow._bounds.set(new _index2.BoundingBox(event));\n\t\n\t        if (event.changeType !== 0) {\n\t            thisWindow.undock(); // Undock on resize. TODO: Allow resize with docking\n\t        }\n\t        if (event.changeType !== 1) {\n\t            thisWindow.emit('move'); // TODO: Pass what position it is at.\n\t        }\n\t    }\n\t    this._window.addEventListener('bounds-changing', onBoundsChange);\n\t    this._window.addEventListener('bounds-changed', onBoundsChange);\n\t\n\t    function onClose() {\n\t        // TODO: Is it possible that onClose might not be called when the window is closed?\n\t        //       What if this event is set up on a window that has closed already, and then this window closes?\n\t        thisWindow._isClosed = true;\n\t        _global2.default._windows.delete(thisWindow._id);\n\t\n\t        // Undock:\n\t        thisWindow.undock();\n\t\n\t        // Move children to parent:\n\t        var parent = thisWindow.getParent();\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = thisWindow.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var child = _step.value;\n\t\n\t                // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\n\t                // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\n\t                child.setParent(parent);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t\n\t        thisWindow.setParent(undefined); // Remove from parent\n\t\n\t        thisWindow.emit('close');\n\t        _global2.default._internalBus.emit('window-close', thisWindow);\n\t        thisWindow._window = undefined;\n\t        // TODO: Clean up ALL listeners\n\t    }\n\t    this._window.addEventListener('closed', onClose);\n\t\n\t    function onMinimized() {\n\t        thisWindow.emit('minimize');\n\t    }\n\t    this._window.addEventListener('minimized', onMinimized);\n\t\n\t    // Setup title element:\n\t    this._titleEl = this._window.contentWindow.document.createElement('title');\n\t    this._titleEl.innerText = this._title;\n\t    this._window.contentWindow.document.head.appendChild(this._titleEl);\n\t\n\t    this._ready = true;\n\t    this.emit('ready');\n\t    _global2.default._internalBus.emit('window-create', this);\n\t};\n\t\n\tvar Window = function (_EventHandler) {\n\t    _inherits(Window, _EventHandler);\n\t\n\t    function Window(config) {\n\t        _classCallCheck(this, Window);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Window.__proto__ || Object.getPrototypeOf(Window)).call(this, acceptedEventHandlers));\n\t        // Call the parent constructor:\n\t\n\t\n\t        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n\t        var isArgConfig = config.app_uuid === undefined;\n\t\n\t        // Setup private variables:\n\t        _this._bounds = new _index2.BoundingBox();\n\t        _this._ready = false;\n\t        // TODO: Identify current states.\n\t        _this._isClosed = false;\n\t        _this._isHidden = false;\n\t        _this._isMinimized = false;\n\t        _this._isMaximized = false;\n\t        _this._dockedGroup = [_this];\n\t        _this._children = [];\n\t        _this._parent = undefined;\n\t        _this._title = undefined;\n\t\n\t        if (isArgConfig) {\n\t            for (var prop in config) {\n\t                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n\t                    config[configMap[prop]] = config[prop];\n\t                    delete config[prop];\n\t                }\n\t            }\n\t            for (var _prop in defaultConfig) {\n\t                if (defaultConfig.hasOwnProperty(_prop)) {\n\t                    config[_prop] = config[_prop] || defaultConfig[_prop];\n\t                }\n\t            }\n\t            _this._id = (0, _index.getUniqueWindowName)();\n\t            _this._title = config.name == null ? _this._id : config.name;\n\t            config.name = _this._id; // Need name to be unique\n\t\n\t            if (config.parent) {\n\t                config.parent._children.push(_this);\n\t                _this._parent = config.parent;\n\t                // TODO: Emit event 'child-added' on parent\n\t                delete config.parent;\n\t            }\n\t\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _this._window = new fin.desktop.Window(config, _setupDOM.bind(_this), function (err) {\n\t                console.error(err, config);\n\t            });\n\t        } else {\n\t            _this._id = config._id || config.name;\n\t            _this._title = _this._id;\n\t            _this._window = config;\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _setupDOM.call(_this);\n\t        }\n\t\n\t        // TODO: Ensure docking system\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Window, [{\n\t        key: 'isReady',\n\t        value: function isReady() {\n\t            return this._ready;\n\t        }\n\t    }, {\n\t        key: 'onReady',\n\t        value: function onReady(callback) {\n\t            if (this.isClosed()) {\n\t                throw new Error('onReady can\\'t be called on a closed window');\n\t            }\n\t            if (this.isReady()) {\n\t                return callback.call(this);\n\t            }\n\t\n\t            this.once('ready', callback);\n\t        }\n\t    }, {\n\t        key: 'isClosed',\n\t        value: function isClosed() {\n\t            return this._isClosed;\n\t        }\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            return this._bounds.getPosition();\n\t        }\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            return this._bounds.getWidth();\n\t        }\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            return this._bounds.getHeight();\n\t        }\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            return this._bounds.getSize();\n\t        }\n\t    }, {\n\t        key: 'getBounds',\n\t        value: function getBounds() {\n\t            return this._bounds.clone();\n\t        }\n\t    }, {\n\t        key: 'getParent',\n\t        value: function getParent() {\n\t            return this._parent;\n\t        }\n\t    }, {\n\t        key: 'setParent',\n\t        value: function setParent(parent) {\n\t            // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\n\t\n\t            if (parent === this._parent) {\n\t                return;\n\t            }\n\t\n\t            if (this._parent) {\n\t                var index = this._parent._children.indexOf(this);\n\t\n\t                if (index >= 0) {\n\t                    this._parent._children.splice(index, 1);\n\t                }\n\t                // TODO: Emit event 'child-removed' on current parent.\n\t            }\n\t\n\t            if (parent) {\n\t                this._parent = parent;\n\t                this._parent._children.push(this);\n\t                // TODO: Emit event 'child-added on parent'.\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getChildren',\n\t        value: function getChildren() {\n\t            return this._children.slice();\n\t        }\n\t    }, {\n\t        key: 'addChild',\n\t        value: function addChild(child) {\n\t            child.setParent(this);\n\t        }\n\t    }, {\n\t        key: 'getTitle',\n\t        value: function getTitle() {\n\t            return this._title;\n\t        }\n\t    }, {\n\t        key: 'setTitle',\n\t        value: function setTitle(newTitle) {\n\t            if (!newTitle) {\n\t                throw new Error('setTitle requires one argument of type String');\n\t            }\n\t            this._titleEl.innerText = this._title = newTitle;\n\t        }\n\t    }, {\n\t        key: 'isHidden',\n\t        value: function isHidden() {\n\t            return this._isHidden;\n\t        }\n\t    }, {\n\t        key: 'isShown',\n\t        value: function isShown() {\n\t            return !this._isHidden;\n\t        }\n\t    }, {\n\t        key: 'isMinimized',\n\t        value: function isMinimized() {\n\t            return this._isMinimized;\n\t        }\n\t    }, {\n\t        key: 'isMaximized',\n\t        value: function isMaximized() {\n\t            return this._isMaximized;\n\t        }\n\t    }, {\n\t        key: 'isRestored',\n\t        value: function isRestored() {\n\t            return this.isShown() && !this.isMinimized() && !this.isMaximized();\n\t        }\n\t    }, {\n\t        key: 'close',\n\t        value: function close(callback) {\n\t            if (this.isClosed()) {\n\t                return callback && callback();\n\t            }\n\t            this._window.close(callback);\n\t        }\n\t    }, {\n\t        key: 'minimize',\n\t        value: function minimize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('minimize can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this._dockedGroup[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _window = _step2.value;\n\t\n\t                    _window._isMinimized = true;\n\t                    _window._window.minimize(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'maximize',\n\t        value: function maximize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('maximize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._isMaximized = true;\n\t            this._window.maximize(callback);\n\t        }\n\t    }, {\n\t        key: 'show',\n\t        value: function show(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('show can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this._dockedGroup[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var _window2 = _step3.value;\n\t\n\t                    _window2._isHidden = false;\n\t                    _window2._window.show(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hide',\n\t        value: function hide(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('hide can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = this._dockedGroup[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var _window3 = _step4.value;\n\t\n\t                    _window3._isHidden = true;\n\t                    _window3._window.hide(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('restore can\\'t be called on an unready window');\n\t            }\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion5 = true;\n\t            var _didIteratorError5 = false;\n\t            var _iteratorError5 = undefined;\n\t\n\t            try {\n\t                for (var _iterator5 = this._dockedGroup[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                    var _window4 = _step5.value;\n\t\n\t                    _window4._isHidden = false;\n\t                    _window4._isMinimized = false;\n\t                    _window4._isMaximized = false;\n\t                    _window4._window.restore(callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError5 = true;\n\t                _iteratorError5 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                        _iterator5.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError5) {\n\t                        throw _iteratorError5;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'bringToFront',\n\t        value: function bringToFront(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('bringToFront can\\'t be called on an unready window');\n\t            }\n\t            var thisWindow = this;\n\t\n\t            var beforeCallback = new _index.SyncCallback(function () {\n\t                thisWindow._window.bringToFront(callback);\n\t            });\n\t\n\t            var _iteratorNormalCompletion6 = true;\n\t            var _didIteratorError6 = false;\n\t            var _iteratorError6 = undefined;\n\t\n\t            try {\n\t                for (var _iterator6 = this._dockedGroup[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t                    var _window5 = _step6.value;\n\t\n\t                    if (_window5 !== this) {\n\t                        _window5._window.bringToFront(beforeCallback.ref());\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError6 = true;\n\t                _iteratorError6 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                        _iterator6.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError6) {\n\t                        throw _iteratorError6;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'focus',\n\t        value: function focus(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('focus can\\'t be called on an unready window');\n\t            }\n\t            var thisWindow = this;\n\t\n\t            var beforeCallback = new _index.SyncCallback(function () {\n\t                thisWindow._window.focus(callback);\n\t            });\n\t\n\t            var _iteratorNormalCompletion7 = true;\n\t            var _didIteratorError7 = false;\n\t            var _iteratorError7 = undefined;\n\t\n\t            try {\n\t                for (var _iterator7 = this._dockedGroup[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t                    var _window6 = _step7.value;\n\t\n\t                    if (_window6 !== this) {\n\t                        _window6._window.focus(beforeCallback.ref());\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError7 = true;\n\t                _iteratorError7 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                        _iterator7.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError7) {\n\t                        throw _iteratorError7;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('resize-before')) {\n\t                return;\n\t            } // Allow preventing resize\n\t            var size = new _index2.Position(width, height);\n\t\n\t            this._window.resizeTo(size.left, size.top, 'top-left', callback);\n\t        }\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(left, top).subtract(this.getPosition());\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion8 = true;\n\t            var _didIteratorError8 = false;\n\t            var _iteratorError8 = undefined;\n\t\n\t            try {\n\t                for (var _iterator8 = this._dockedGroup[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t                    var _window7 = _step8.value;\n\t\n\t                    var pos = _window7.getPosition().add(deltaPos);\n\t\n\t                    _window7._bounds.moveTo(pos);\n\t                    _window7._window.moveTo(pos.left, pos.top, callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError8 = true;\n\t                _iteratorError8 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t                        _iterator8.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError8) {\n\t                        throw _iteratorError8;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveBy can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(deltaLeft, deltaTop);\n\t\n\t            callback = new _index.SyncCallback(callback);\n\t            var _iteratorNormalCompletion9 = true;\n\t            var _didIteratorError9 = false;\n\t            var _iteratorError9 = undefined;\n\t\n\t            try {\n\t                for (var _iterator9 = this._dockedGroup[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t                    var _window8 = _step9.value;\n\t\n\t                    var pos = _window8.getPosition().add(deltaPos);\n\t\n\t                    _window8._bounds.moveTo(pos);\n\t                    _window8._window.moveTo(pos.left, pos.top, callback.ref());\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError9 = true;\n\t                _iteratorError9 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t                        _iterator9.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError9) {\n\t                        throw _iteratorError9;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setSize',\n\t        value: function setSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this._window.resizeTo(size.left, size.top, 'top-left', callback);\n\t        }\n\t    }, {\n\t        key: 'setBounds',\n\t        value: function setBounds(left, top, right, bottom, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var bounds = new _index2.BoundingBox(left, top, right, bottom);\n\t\n\t            this._window.setBounds(bounds.left, bounds.top, bounds.right, bounds.bottom, callback);\n\t        }\n\t    }, {\n\t        key: 'dock',\n\t        value: function dock(other) {\n\t            if (!this.emit('dock-before')) {\n\t                return;\n\t            } // Allow preventing dock\n\t            if (other === undefined) {\n\t                return;\n\t            } // Failed to find other. TODO: Return error\n\t\n\t            // If other is already in the group, return:\n\t            if (this._dockedGroup.indexOf(other) >= 0) {\n\t                return;\n\t            }\n\t\n\t            // Loop through all windows in otherGroup and add them to this's group:\n\t            var _iteratorNormalCompletion10 = true;\n\t            var _didIteratorError10 = false;\n\t            var _iteratorError10 = undefined;\n\t\n\t            try {\n\t                for (var _iterator10 = other._dockedGroup[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t                    var otherWin = _step10.value;\n\t\n\t                    this._dockedGroup.push(otherWin);\n\t                    // Sharing the array between window objects makes it easier to manage:\n\t                    otherWin._dockedGroup = this._dockedGroup;\n\t                }\n\t\n\t                // TODO: Check if otherGroup is touching\n\t            } catch (err) {\n\t                _didIteratorError10 = true;\n\t                _iteratorError10 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t                        _iterator10.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError10) {\n\t                        throw _iteratorError10;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'undock',\n\t        value: function undock(other) {\n\t            // Check to see if window is already undocked:\n\t            if (this._dockedGroup.length === 1) {\n\t                return;\n\t            }\n\t\n\t            // Undock this:\n\t            this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n\t            this._dockedGroup = [this];\n\t\n\t            // TODO: Redock those still touching, EXCEPT 'this'.\n\t        }\n\t    }, {\n\t        key: '_dragStart',\n\t        value: function _dragStart() {\n\t            if (!this.emit('drag-start')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            var _iteratorNormalCompletion11 = true;\n\t            var _didIteratorError11 = false;\n\t            var _iteratorError11 = undefined;\n\t\n\t            try {\n\t                for (var _iterator11 = this._dockedGroup[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t                    var _window9 = _step11.value;\n\t\n\t                    _window9._dragStartPos = _window9.getPosition();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError11 = true;\n\t                _iteratorError11 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t                        _iterator11.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError11) {\n\t                        throw _iteratorError11;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragBy',\n\t        value: function _dragBy(deltaLeft, deltaTop) {\n\t            if (!this.emit('drag-before')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            // Perform Snap:\n\t            var thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft, this._dragStartPos.top + deltaTop);\n\t            var snapDelta = new _index2.Vector(NaN, NaN);\n\t\n\t            var _iteratorNormalCompletion12 = true;\n\t            var _didIteratorError12 = false;\n\t            var _iteratorError12 = undefined;\n\t\n\t            try {\n\t                for (var _iterator12 = _global2.default._windows.values()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t                    var other = _step12.value;\n\t\n\t                    if (other._dockedGroup !== this._dockedGroup) {\n\t                        snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError12 = true;\n\t                _iteratorError12 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t                        _iterator12.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError12) {\n\t                        throw _iteratorError12;\n\t                    }\n\t                }\n\t            }\n\t\n\t            deltaLeft += snapDelta.left || 0;\n\t            deltaTop += snapDelta.top || 0;\n\t\n\t            var _iteratorNormalCompletion13 = true;\n\t            var _didIteratorError13 = false;\n\t            var _iteratorError13 = undefined;\n\t\n\t            try {\n\t                for (var _iterator13 = this._dockedGroup[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t                    var _other = _step13.value;\n\t\n\t                    var pos = _other._dragStartPos;\n\t\n\t                    // If other doesn't have a drag position, start it:\n\t                    if (pos === undefined) {\n\t                        pos = _other._dragStartPos = _other.getPosition();\n\t                        pos.left -= deltaLeft;\n\t                        pos.top -= deltaTop;\n\t                    }\n\t\n\t                    _other._window.moveTo(pos.left + deltaLeft, pos.top + deltaTop);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError13 = true;\n\t                _iteratorError13 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t                        _iterator13.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError13) {\n\t                        throw _iteratorError13;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragStop',\n\t        value: function _dragStop() {\n\t            // Dock to those it snapped to:\n\t            var thisBounds = this.getBounds();\n\t\n\t            var _iteratorNormalCompletion14 = true;\n\t            var _didIteratorError14 = false;\n\t            var _iteratorError14 = undefined;\n\t\n\t            try {\n\t                for (var _iterator14 = _global2.default._windows.values()[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n\t                    var other = _step14.value;\n\t\n\t                    if (thisBounds.isTouching(other.getBounds())) {\n\t                        this.dock(other);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError14 = true;\n\t                _iteratorError14 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion14 && _iterator14.return) {\n\t                        _iterator14.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError14) {\n\t                        throw _iteratorError14;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion15 = true;\n\t            var _didIteratorError15 = false;\n\t            var _iteratorError15 = undefined;\n\t\n\t            try {\n\t                for (var _iterator15 = this._dockedGroup[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n\t                    var _window10 = _step15.value;\n\t\n\t                    delete _window10._dragStartPos;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError15 = true;\n\t                _iteratorError15 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion15 && _iterator15.return) {\n\t                        _iterator15.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError15) {\n\t                        throw _iteratorError15;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.emit('drag-stop');\n\t        }\n\t    }], [{\n\t        key: 'getAll',\n\t        value: function getAll() {\n\t            return Array.from(_global2.default._windows.values());\n\t        }\n\t    }, {\n\t        key: 'getByID',\n\t        value: function getByID(id) {\n\t            return _global2.default._windows.get(id);\n\t        }\n\t    }, {\n\t        key: 'getCurrent',\n\t        value: function getCurrent() {\n\t            return Window.current;\n\t        }\n\t    }]);\n\t\n\t    return Window;\n\t}(_index.EventHandler);\n\t\n\tfunction setupCurrentWindow() {\n\t    Window.current = _global2.default._windows.get(currentWin.name) || new Window(currentWin);\n\t\n\t    // Setup handlers on this window:\n\t    var wX = 0;\n\t    var wY = 0;\n\t    var dragging = false;\n\t\n\t    window.addEventListener('mousedown', function (event) {\n\t        if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t            dragging = true;\n\t            wX = event.screenX;\n\t            wY = event.screenY;\n\t            Window.current._dragStart();\n\t        }\n\t    });\n\t\n\t    window.addEventListener('mousemove', function (event) {\n\t        if (dragging) {\n\t            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\n\t        }\n\t    });\n\t\n\t    window.addEventListener('mouseup', function () {\n\t        dragging = false;\n\t        Window.current._dragStop();\n\t    });\n\t}\n\t\n\t// Handle current window in this context:\n\t// TODO: Rewrite to remove setTimeout for the following:\n\tfin.desktop.main(_ready2.default.ref(function () {\n\t    currentWin = fin.desktop.Window.getCurrent();\n\t    var currentReady = _ready2.default.ref(setupCurrentWindow);\n\t\n\t    function getCurrent() {\n\t        if (_global2.default._windows) {\n\t            currentReady();\n\t        } else {\n\t            setTimeout(getCurrent, 5);\n\t        }\n\t    }\n\t    getCurrent();\n\t}));\n\t\n\t_global2.default.Window = Window;\n\texports.default = Window;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _global = __webpack_require__(22);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _ready = __webpack_require__(10);\n\t\n\tvar _ready2 = _interopRequireDefault(_ready);\n\t\n\tvar _Window = __webpack_require__(23);\n\t\n\tvar _Window2 = _interopRequireDefault(_Window);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * Message bus for application.\r\n\t * @namespace\r\n\t * @alias MessageBus\r\n\t */\n\t_global2.default.messagebus = function () {\n\t    // TODO: Utilize iframe communication? Or use messagebus that is currently shared in setup.js?\n\t    var wrappedListeners = {};\n\t    var windowWrappedListeners = {};\n\t\n\t    window.addEventListener('message', function (event) {\n\t        var message = event.data;\n\t        var win = _Window2.default.getByID(message.winID);\n\t\n\t        // Don't execute listeners when the sender is the same as the listener:\n\t        if (win._id === _Window2.default.current._id) {\n\t            return;\n\t        }\n\t\n\t        if (windowWrappedListeners[message.event] != null) {\n\t            // Check to see if the called window is being listened to directly:\n\t            if (windowWrappedListeners[message.event][message.winID] != null) {\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = windowWrappedListeners[message.event][message.winID][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var listener = _step.value;\n\t\n\t                        listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (wrappedListeners[message.event] != null) {\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = wrappedListeners[message.event][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _listener = _step2.value;\n\t\n\t                    _listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, false);\n\t\n\t    return {\n\t        /**\r\n\t         * @method\r\n\t         * @alias MessageBus.send\r\n\t         * @param {String} eventName - the event to send to\r\n\t         * @param {Window} [window=undefined] - the target window to send to (if not specified, sends to all windows)\r\n\t         * @param {...*} args Arguments to send to listeners\r\n\t         */\n\t        send: function send(eventName) {\n\t            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                args[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            // TODO: Check if ready? Dunno if needed\n\t            // TODO: Do we need to add a way to identify if a return is needed?\n\t            var curWin = _Window2.default.current;\n\t            var message = {\n\t                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n\t                winID: curWin._id,\n\t                event: eventName,\n\t                args: args // If the first arg is a window, it gets removed later.\n\t            };\n\t\n\t            if (args.length > 0 && args[0] instanceof _Window2.default) {\n\t                // Remove window from args in message:\n\t                var _window = args.shift(); // args is by reference in message currently\n\t\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (_window._id === curWin._id) {\n\t                    return;\n\t                }\n\t                // TODO: Save the id of message so we can get the response\n\t                _window._window.contentWindow.postMessage(message, '*');\n\t            } else {\n\t                var _iteratorNormalCompletion3 = true;\n\t                var _didIteratorError3 = false;\n\t                var _iteratorError3 = undefined;\n\t\n\t                try {\n\t                    for (var _iterator3 = _global2.default._windows.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                        var _window2 = _step3.value;\n\t\n\t                        if (curWin !== _window2) {\n\t                            // Don't send to current window\n\t                            _window2._window.contentWindow.postMessage(message, '*');\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError3 = true;\n\t                    _iteratorError3 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                            _iterator3.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError3) {\n\t                            throw _iteratorError3;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        /**\r\n\t         * @method\r\n\t         * @alias MessageBus.on\r\n\t         * @param {String} eventName - the event to listen to\r\n\t         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n\t         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n\t         */\n\t        on: function on(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                // Don't execute listeners when the sender is the same as the listener:\n\t                if (window._id === _Window2.default.current._id) {\n\t                    return;\n\t                }\n\t                // Replace window.name with some way to identify the unique window\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\n\t                winLisGroup[eventName].add(listener);\n\t                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                wrappedListeners[eventName].add(listener);\n\t            }\n\t        },\n\t        /**\r\n\t         * @method\r\n\t         * @alias MessageBus.off\r\n\t         * @param {String} eventName - the event to remove listener from\r\n\t         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n\t         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n\t         */\n\t        off: function off(eventName, window, listener) {\n\t            if (listener === undefined) {\n\t                listener = window;\n\t                window = undefined;\n\t            }\n\t\n\t            if (window !== undefined) {\n\t                // Replace window.name with some way to identify the unique window\n\t                var winLisGroup = windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {};\n\t\n\t                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\n\t                winLisGroup[eventName].delete(listener);\n\t            } else {\n\t                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n\t                wrappedListeners[eventName].delete(listener);\n\t            }\n\t        }\n\t    };\n\t}();\n\t\n\t// Notify everyone that windowmanager is setup for this window:\n\t_ready2.default._deref();\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _global = __webpack_require__(1);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction getBrowserInfo() {\n\t    // Credit: http://www.gregoryvarghese.com/how-to-get-browser-name-and-version-via-javascript/\n\t    var ua = navigator.userAgent;\n\t    var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\t    var tem = void 0;\n\t\n\t    if (/trident/i.test(M[1])) {\n\t        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\t        return { name: 'IE', version: tem[1] || '' };\n\t    }\n\t    if (M[1] === 'Chrome') {\n\t        tem = ua.match(/\\bOPR\\/(\\d+)/);\n\t        if (tem !== null) {\n\t            return { name: 'Opera', version: tem[1] };\n\t        }\n\t        tem = ua.match(/\\bedge\\/(\\d+)/i);\n\t        if (tem !== null) {\n\t            return { name: 'Edge', version: tem[1] };\n\t        }\n\t    }\n\t    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n\t    if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) {\n\t        M.splice(1, 1, tem[1]);\n\t    }\n\t    return {\n\t        name: M[0],\n\t        version: M[1]\n\t    };\n\t}\n\t\n\tvar browser = getBrowserInfo();\n\t\n\t_global2.default.runtime.name = browser.name;\n\t_global2.default.runtime.version = browser.version;\n\t_global2.default.runtime.isBrowser = true;\n\t_global2.default.runtime.isMain = window.parent === window;\n\t\n\ttry {\n\t    window.parent.document;\n\t} catch (e) {\n\t    // If the above access errors out, it's due to CORS violation.\n\t    // So assume this JavaScript window is the top-level window:\n\t    _global2.default.runtime.isMain = true;\n\t}\n\t\n\tif (_global2.default.runtime.isMain) {\n\t    (function () {\n\t        // This is the main/root window!\n\t        var nextZIndex = 1000; // TODO: Recycle Z-Indexes! In case of a (probably never) overflow!\n\t\n\t        _global2.default._launcher = window;\n\t        _global2.default._internalBus = new _index.EventHandler(Object.keys(_global2.default._eventListeners));\n\t        _global2.default._windows = new Map();\n\t\n\t        _global2.default._getNextZIndex = function () {\n\t            nextZIndex += 1;\n\t            return nextZIndex;\n\t        };\n\t    })();\n\t} else {\n\t    // This is a child window of root!\n\t    _global2.default._launcher = window.parent.windowmanager._launcher || window.parent;\n\t    _global2.default._internalBus = window.parent.windowmanager._internalBus;\n\t    _global2.default._windows = window.parent.windowmanager._windows;\n\t    _global2.default._getNextZIndex = window.parent.windowmanager._getNextZIndex;\n\t}\n\t\n\t// Wire the internal bus to emit events on windowmanager:\n\t_global2.default._internalBus.addPipe(_global2.default);\n\t\n\t// This is used to store info across windows:\n\t// Everything on here gets exported as windowmanager.\n\texports.default = _global2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _global = __webpack_require__(22);\n\t\n\tvar _global2 = _interopRequireDefault(_global);\n\t\n\tvar _index = __webpack_require__(2);\n\t\n\tvar _index2 = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar defaultConfig = {\n\t    width: 600,\n\t    height: 600,\n\t    frame: false,\n\t    resizable: true,\n\t    saveWindowState: false,\n\t    autoShow: true,\n\t    icon: location.href + 'favicon.ico',\n\t    url: '.',\n\t    minWidth: 100,\n\t    minHeight: 100,\n\t    maxWidth: Infinity,\n\t    maxHeight: Infinity\n\t};\n\tvar configMap = {};\n\tvar acceptedEventHandlers = ['ready', 'drag-start', 'drag-before', 'drag-stop', 'dock-before', 'move', 'move-before', 'resize-before', 'close', 'minimize'];\n\tvar transformPropNames = ['-ms-transform', '-moz-transform', '-o-transform', '-webkit-transform', 'transform'];\n\t\n\t/**\r\n\t * @callback Callback\r\n\t * @param {string|null} error - String on error, or null if no error\r\n\t * @param {object|null} result - Object on success, or null if error\r\n\t */\n\t\n\t/**\r\n\t * A Window class.\r\n\t * @extends EventHandler\r\n\t */\n\t\n\tvar Window = function (_EventHandler) {\n\t    _inherits(Window, _EventHandler);\n\t\n\t    /**\r\n\t     * Wraps a window object.\r\n\t     * @param {Object} config - Configuration\r\n\t     */\n\t    function Window(config) {\n\t        _classCallCheck(this, Window);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Window.__proto__ || Object.getPrototypeOf(Window)).call(this, acceptedEventHandlers));\n\t        // Call the parent constructor:\n\t\n\t\n\t        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n\t        var isArgConfig = !(config instanceof window.Window);\n\t\n\t        // Setup private variables:\n\t        _this._ready = false;\n\t        // TODO: Identify current states.\n\t        _this._isClosed = false;\n\t        _this._isHidden = false;\n\t        _this._isMinimized = false;\n\t        _this._isMaximized = false;\n\t        _this._dockedGroup = [_this];\n\t        _this._children = []; // TODO: Add way to remove or change heirarchy.\n\t        _this._parent = undefined;\n\t        _this._title = undefined;\n\t        _this._id = (0, _index.getUniqueWindowName)();\n\t\n\t        if (isArgConfig) {\n\t            for (var prop in config) {\n\t                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n\t                    config[configMap[prop]] = config[prop];\n\t                    delete config[prop];\n\t                }\n\t            }\n\t            for (var _prop in defaultConfig) {\n\t                if (defaultConfig.hasOwnProperty(_prop)) {\n\t                    config[_prop] = config[_prop] || defaultConfig[_prop];\n\t                }\n\t            }\n\t            _this._title = config.title == null ? _this._id : config.title;\n\t\n\t            if (config.parent) {\n\t                config.parent._children.push(_this);\n\t                _this._parent = config.parent;\n\t                // TODO: Emit event 'child-added' on parent\n\t                delete config.parent;\n\t            }\n\t\n\t            _this._minSize = new _index2.BoundingBox(config.minWidth, config.minHeight);\n\t            _this._maxSize = new _index2.BoundingBox(config.maxWidth, config.maxHeight);\n\t\n\t            var newWindow = _global2.default._launcher.document.createElement('iframe');\n\t\n\t            newWindow.src = config.url;\n\t            newWindow.style.position = 'absolute';\n\t            if (!Number.isFinite(config.left)) {\n\t                config.left = (_global2.default._launcher.innerWidth - config.width) / 2;\n\t            }\n\t            newWindow.style.left = config.left + 'px';\n\t            if (!Number.isFinite(config.top)) {\n\t                config.top = (_global2.default._launcher.innerHeight - config.height) / 2;\n\t            }\n\t            newWindow.style.top = config.top + 'px';\n\t            newWindow.style.width = config.width + 'px';\n\t            newWindow.style.height = config.height + 'px';\n\t            newWindow.style.minWidth = _this._minSize.left + 'px';\n\t            newWindow.style.minHeight = _this._minSize.top + 'px';\n\t            newWindow.style.maxWidth = _this._maxSize.left + 'px';\n\t            newWindow.style.maxHeight = _this._maxSize.top + 'px';\n\t            newWindow.style.margin = 0;\n\t            newWindow.style.padding = 0;\n\t            newWindow.style.border = 0;\n\t            newWindow.style.resize = 'both';\n\t            newWindow.style.overflow = 'auto';\n\t            _global2.default._launcher.document.body.appendChild(newWindow);\n\t\n\t            _this._window = newWindow;\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _this._ready = true;\n\t            _this.emit('ready');\n\t            _global2.default._internalBus.emit('window-create', _this);\n\t            _this.bringToFront();\n\t            _this.focus();\n\t        } else {\n\t            _this._minSize = new _index2.BoundingBox(defaultConfig.minWidth, defaultConfig.minHeight);\n\t            _this._maxSize = new _index2.BoundingBox(defaultConfig.maxWidth, defaultConfig.maxHeight);\n\t            _this._window = config.document.body;\n\t            _global2.default._windows.set(_this._id, _this);\n\t            _this._ready = true;\n\t        }\n\t        return _this;\n\t    }\n\t\n\t    /**\r\n\t     * Returns true if the {@link Window} instance is created, not closed, and ready for method calls.\r\n\t     * @returns {Boolean}\r\n\t     */\n\t\n\t\n\t    _createClass(Window, [{\n\t        key: 'isReady',\n\t        value: function isReady() {\n\t            return this._ready;\n\t        }\n\t\n\t        /**\r\n\t         * Calls a callback when window is ready and setup.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'onReady',\n\t        value: function onReady(callback) {\n\t            if (this.isClosed()) {\n\t                throw new Error('onReady can\\'t be called on a closed window');\n\t            }\n\t            if (this.isReady()) {\n\t                return callback.call(this);\n\t            }\n\t\n\t            this.once('ready', callback);\n\t        }\n\t\n\t        /**\r\n\t         * Returns whether window has been closed already.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isClosed',\n\t        value: function isClosed() {\n\t            return this._isClosed;\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's current position.\r\n\t         * @returns {Vector}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getPosition',\n\t        value: function getPosition() {\n\t            return new _index2.Position(this._window.getBoundingClientRect());\n\t        }\n\t    }, {\n\t        key: 'getMinWidth',\n\t        value: function getMinWidth() {\n\t            return this._minSize.left;\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's width.\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getWidth',\n\t        value: function getWidth() {\n\t            return this._window.getBoundingClientRect().width;\n\t        }\n\t    }, {\n\t        key: 'getMaxWidth',\n\t        value: function getMaxWidth() {\n\t            return this._maxSize.left;\n\t        }\n\t    }, {\n\t        key: 'getMinHeight',\n\t        value: function getMinHeight() {\n\t            return this._minSize.top;\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's height.\r\n\t         * @returns {Number}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getHeight',\n\t        value: function getHeight() {\n\t            return this._window.getBoundingClientRect().height;\n\t        }\n\t    }, {\n\t        key: 'getMaxHeight',\n\t        value: function getMaxHeight() {\n\t            return this._maxSize.top;\n\t        }\n\t    }, {\n\t        key: 'getMinSize',\n\t        value: function getMinSize() {\n\t            return this._minSize.clone();\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's size.\r\n\t         * @returns {Size}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getSize',\n\t        value: function getSize() {\n\t            var box = this._window.getBoundingClientRect();\n\t\n\t            return new _index2.Size(box.width, box.height);\n\t        }\n\t    }, {\n\t        key: 'getMaxSize',\n\t        value: function getMaxSize() {\n\t            return this._maxSize.clone();\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's bounding box.\r\n\t         * @returns {BoundingBox}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getBounds',\n\t        value: function getBounds() {\n\t            return new _index2.BoundingBox(this._window.getBoundingClientRect());\n\t        }\n\t    }, {\n\t        key: 'getParent',\n\t        value: function getParent() {\n\t            return this._parent;\n\t        }\n\t    }, {\n\t        key: 'setParent',\n\t        value: function setParent(parent) {\n\t            // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\n\t            if (parent === this._parent) {\n\t                return;\n\t            }\n\t\n\t            if (this._parent) {\n\t                var index = this._parent._children.indexOf(this);\n\t\n\t                if (index >= 0) {\n\t                    this._parent._children.splice(index, 1);\n\t                }\n\t                // TODO: Emit event 'child-removed' on current parent.\n\t            }\n\t\n\t            if (parent) {\n\t                this._parent = parent;\n\t                this._parent._children.push(this);\n\t                // TODO: Emit event 'child-added on parent'.\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getChildren',\n\t        value: function getChildren() {\n\t            return this._children.slice();\n\t        }\n\t    }, {\n\t        key: 'addChild',\n\t        value: function addChild(child) {\n\t            child.setParent(this);\n\t        }\n\t\n\t        /**\r\n\t         * Returns window's title.\r\n\t         * @returns {String}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getTitle',\n\t        value: function getTitle() {\n\t            return this._title;\n\t        }\n\t\n\t        /**\r\n\t         * Sets window's title.\r\n\t         * @param {String}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setTitle',\n\t        value: function setTitle(title) {\n\t            if (!title) {\n\t                throw new Error('setTitle requires one argument of type String');\n\t            }\n\t            this._title = title;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is hidden.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isHidden',\n\t        value: function isHidden() {\n\t            return this._isHidden;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is not hidden.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isShown',\n\t        value: function isShown() {\n\t            return !this._isHidden;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is minimized.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isMinimized',\n\t        value: function isMinimized() {\n\t            return this._isMinimized;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is maximized.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isMaximized',\n\t        value: function isMaximized() {\n\t            return this._isMaximized;\n\t        }\n\t\n\t        /**\r\n\t         * Returns true if window is not hidden or minimize or maximized.\r\n\t         * @returns {Boolean}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'isRestored',\n\t        value: function isRestored() {\n\t            return this.isShown() && !this.isMinimized() && !this.isMaximized();\n\t        }\n\t\n\t        /**\r\n\t         * Closes the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'close',\n\t        value: function close(callback) {\n\t            if (this.isClosed()) {\n\t                return callback && callback();\n\t            }\n\t\n\t            this._window.parentElement.removeChild(this._window);\n\t            _global2.default._windows.delete(this._id);\n\t\n\t            // Undock:\n\t            this.undock();\n\t\n\t            // Move children to parent:\n\t            var parent = this.getParent();\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var child = _step.value;\n\t\n\t                    // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\n\t                    // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\n\t                    child.setParent(parent);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.setParent(undefined); // Remove from parent\n\t\n\t            this._isClosed = true;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            this.emit('close');\n\t            _global2.default._internalBus.emit('window-close', this);\n\t        }\n\t\n\t        /**\r\n\t         * Minimizes the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'minimize',\n\t        value: function minimize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('minimize can\\'t be called on an unready window');\n\t            }\n\t\n\t            // TODO: What do we do on minimize in this runtime?\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this._dockedGroup[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _window = _step2.value;\n\t\n\t                    _window._isMinimized = true;\n\t                    _window.emit('minimize');\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Maximizes the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'maximize',\n\t        value: function maximize(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('maximize can\\'t be called on an unready window');\n\t            }\n\t\n\t            this._restoreBounds = this.getBounds();\n\t            this._window.style.left = 0;\n\t            this._window.style.top = 0;\n\t            this._window.style.width = '100%';\n\t            this._window.style.height = '100%';\n\t            this._isMaximized = true;\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Unhides the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'show',\n\t        value: function show(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('show can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this._dockedGroup[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var _window2 = _step3.value;\n\t\n\t                    _window2._window.style.display = '';\n\t                    _window2._isHidden = false;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Hides the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'hide',\n\t        value: function hide(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('hide can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = this._dockedGroup[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var _window3 = _step4.value;\n\t\n\t                    _window3._window.style.display = 'none';\n\t                    _window3._isHidden = true;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Restores the window instance from the minimized or maximized states.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'restore',\n\t        value: function restore(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('restore can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion5 = true;\n\t            var _didIteratorError5 = false;\n\t            var _iteratorError5 = undefined;\n\t\n\t            try {\n\t                for (var _iterator5 = this._dockedGroup[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                    var _window4 = _step5.value;\n\t\n\t                    if (_window4._isMaximized) {\n\t                        _window4._window.style.left = _window4._restoreBounds.left + 'px';\n\t                        _window4._window.style.top = _window4._restoreBounds.top + 'px';\n\t                        _window4._window.style.width = _window4._restoreBounds.getWidth() + 'px';\n\t                        _window4._window.style.height = _window4._restoreBounds.getHeight() + 'px';\n\t                        _window4._isHidden = false;\n\t                        _window4._isMinimized = false;\n\t                        _window4._isMaximized = false;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError5 = true;\n\t                _iteratorError5 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                        _iterator5.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError5) {\n\t                        throw _iteratorError5;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Brings the window instance to the front of all windows.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'bringToFront',\n\t        value: function bringToFront(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('bringToFront can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion6 = true;\n\t            var _didIteratorError6 = false;\n\t            var _iteratorError6 = undefined;\n\t\n\t            try {\n\t                for (var _iterator6 = this._dockedGroup[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t                    var _window5 = _step6.value;\n\t\n\t                    if (_window5 !== this) {\n\t                        _window5._window.style['z-index'] = _global2.default._getNextZIndex();\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError6 = true;\n\t                _iteratorError6 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                        _iterator6.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError6) {\n\t                        throw _iteratorError6;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this._window.style['z-index'] = _global2.default._getNextZIndex();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Sets focus to the window instance.\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'focus',\n\t        value: function focus(callback) {\n\t            if (!this._ready) {\n\t                throw new Error('focus can\\'t be called on an unready window');\n\t            }\n\t\n\t            var _iteratorNormalCompletion7 = true;\n\t            var _didIteratorError7 = false;\n\t            var _iteratorError7 = undefined;\n\t\n\t            try {\n\t                for (var _iterator7 = this._dockedGroup[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t                    var _window6 = _step7.value;\n\t\n\t                    if (_window6 !== this) {\n\t                        _window6._window.contentWindow.focus();\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError7 = true;\n\t                _iteratorError7 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                        _iterator7.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError7) {\n\t                        throw _iteratorError7;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this._window.contentWindow.focus();\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Resizes the window instance.\r\n\t         * @param {number} width\r\n\t         * @param {number} height\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'resizeTo',\n\t        value: function resizeTo(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('resize-before')) {\n\t                return;\n\t            } // Allow preventing resize\n\t            var size = new _index2.Position(width, height);\n\t\n\t            this.undock();\n\t            this._window.width = size.left + 'px';\n\t            this._window.height = size.top + 'px';\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Moves the window instance.\r\n\t         * @param {number} left\r\n\t         * @param {number} top\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveTo',\n\t        value: function moveTo(left, top, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveTo can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(left, top).subtract(this.getPosition());\n\t\n\t            var _iteratorNormalCompletion8 = true;\n\t            var _didIteratorError8 = false;\n\t            var _iteratorError8 = undefined;\n\t\n\t            try {\n\t                for (var _iterator8 = this._dockedGroup[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t                    var _window7 = _step8.value;\n\t\n\t                    var pos = _window7.getPosition().add(deltaPos);\n\t\n\t                    _window7._window.style.left = pos.left + 'px';\n\t                    _window7._window.style.top = pos.top + 'px';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError8 = true;\n\t                _iteratorError8 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t                        _iterator8.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError8) {\n\t                        throw _iteratorError8;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Moves the window instance relative to its current position.\r\n\t         * @param {number} deltaLeft\r\n\t         * @param {number} deltaTop\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'moveBy',\n\t        value: function moveBy(deltaLeft, deltaTop, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('moveBy can\\'t be called on an unready window');\n\t            }\n\t            if (!this.emit('move-before')) {\n\t                return;\n\t            } // Allow preventing move\n\t            var deltaPos = new _index2.Position(deltaLeft, deltaTop);\n\t\n\t            var _iteratorNormalCompletion9 = true;\n\t            var _didIteratorError9 = false;\n\t            var _iteratorError9 = undefined;\n\t\n\t            try {\n\t                for (var _iterator9 = this._dockedGroup[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t                    var _window8 = _step9.value;\n\t\n\t                    var pos = _window8.getPosition().add(deltaPos);\n\t\n\t                    _window8._window.style.left = pos.left + 'px';\n\t                    _window8._window.style.top = pos.top + 'px';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError9 = true;\n\t                _iteratorError9 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t                        _iterator9.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError9) {\n\t                        throw _iteratorError9;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            var _iteratorNormalCompletion10 = true;\n\t            var _didIteratorError10 = false;\n\t            var _iteratorError10 = undefined;\n\t\n\t            try {\n\t                for (var _iterator10 = this._dockedGroup[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n\t                    var _window9 = _step10.value;\n\t\n\t                    _window9.emit('move');\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError10 = true;\n\t                _iteratorError10 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n\t                        _iterator10.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError10) {\n\t                        throw _iteratorError10;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setMinSize',\n\t        value: function setMinSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMinSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._minSize.left = size.left;\n\t            this._minSize.top = size.top;\n\t            this._window.style.minWidth = this._minSize.left + 'px';\n\t            this._window.style.minHeight = this._minSize.top + 'px';\n\t            if (this.getWidth() < size.left || this.getHeight() < size.top) {\n\t                // Resize window to meet new min size:\n\t                // TODO: Take into account transform?\n\t                this._window.style.width = Math.max(this.getWidth(), size.left) + 'px';\n\t                this._window.style.height = Math.max(this.getHeight(), size.top) + 'px';\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t                this.emit('resize');\n\t            } else {\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setSize',\n\t        value: function setSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMaxSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, size.left)) + 'px';\n\t            this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, size.top)) + 'px';\n\t            // Clear transform:\n\t            var _iteratorNormalCompletion11 = true;\n\t            var _didIteratorError11 = false;\n\t            var _iteratorError11 = undefined;\n\t\n\t            try {\n\t                for (var _iterator11 = transformPropNames[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n\t                    var transformPropName = _step11.value;\n\t\n\t                    this._window.style[transformPropName] = '';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError11 = true;\n\t                _iteratorError11 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion11 && _iterator11.return) {\n\t                        _iterator11.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError11) {\n\t                        throw _iteratorError11;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            this.emit('resize');\n\t        }\n\t    }, {\n\t        key: 'forceScaledSize',\n\t        value: function forceScaledSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMaxSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(Math.min(this._maxSize.left, Math.max(this._minSize.left, width)), Math.min(this._maxSize.top, Math.max(this._minSize.top, height)));\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._window.style.width = size.left + 'px';\n\t            this._window.style.height = size.top + 'px';\n\t            // TODO: Calc transform:\n\t            var transform = Math.min(width / size.left, height / size.top);\n\t\n\t            var _iteratorNormalCompletion12 = true;\n\t            var _didIteratorError12 = false;\n\t            var _iteratorError12 = undefined;\n\t\n\t            try {\n\t                for (var _iterator12 = transformPropNames[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n\t                    var transformPropName = _step12.value;\n\t\n\t                    this._window.style[transformPropName] = 'scale(' + transform + ')';\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError12 = true;\n\t                _iteratorError12 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion12 && _iterator12.return) {\n\t                        _iterator12.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError12) {\n\t                        throw _iteratorError12;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t            this.emit('resize');\n\t        }\n\t    }, {\n\t        key: 'setMaxSize',\n\t        value: function setMaxSize(width, height, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('setMaxSize can\\'t be called on an unready window');\n\t            }\n\t            var size = new _index2.Size(width, height);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._maxSize.left = size.left;\n\t            this._maxSize.top = size.top;\n\t            this._window.style.maxWidth = this._maxSize.left + 'px';\n\t            this._window.style.maxHeight = this._maxSize.top + 'px';\n\t            if (this.getWidth() > size.left || this.getHeight() > size.top) {\n\t                // Resize window to meet new min size:\n\t                // TODO: Take into account transform?\n\t                this._window.style.width = Math.min(this.getWidth(), size.left) + 'px';\n\t                this._window.style.height = Math.min(this.getHeight(), size.top) + 'px';\n\t                // Clear transform:\n\t                var _iteratorNormalCompletion13 = true;\n\t                var _didIteratorError13 = false;\n\t                var _iteratorError13 = undefined;\n\t\n\t                try {\n\t                    for (var _iterator13 = transformPropNames[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n\t                        var transformPropName = _step13.value;\n\t\n\t                        this._window.style[transformPropName] = '';\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError13 = true;\n\t                    _iteratorError13 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion13 && _iterator13.return) {\n\t                            _iterator13.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError13) {\n\t                            throw _iteratorError13;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t                this.emit('resize');\n\t            } else {\n\t                if (callback) {\n\t                    callback();\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Sets the bounds of the window instance.\r\n\t         * @param {number} left\r\n\t         * @param {number} top\r\n\t         * @param {number} right\r\n\t         * @param {number} bottom\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'setBounds',\n\t        value: function setBounds(left, top, right, bottom, callback) {\n\t            if (!this._ready) {\n\t                throw new Error('resizeTo can\\'t be called on an unready window');\n\t            }\n\t            var bounds = new _index2.BoundingBox(left, top, right, bottom);\n\t\n\t            this.undock(); // TODO: Support changing size when docked.\n\t            this._window.style.left = bounds.left + 'px';\n\t            this._window.style.top = bounds.top + 'px';\n\t            // TODO: Take into account transform?\n\t            this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, bounds.getWidth())) + 'px';\n\t            this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, bounds.getHeight())) + 'px';\n\t            // Clear transform:\n\t            var _iteratorNormalCompletion14 = true;\n\t            var _didIteratorError14 = false;\n\t            var _iteratorError14 = undefined;\n\t\n\t            try {\n\t                for (var _iterator14 = transformPropNames[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n\t                    var transformPropName = _step14.value;\n\t\n\t                    this._window.style[transformPropName] = '';\n\t                }\n\t                // TODO: Events\n\t            } catch (err) {\n\t                _didIteratorError14 = true;\n\t                _iteratorError14 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion14 && _iterator14.return) {\n\t                        _iterator14.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError14) {\n\t                        throw _iteratorError14;\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (callback) {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Force docking this window to another. They don't need to be touching.\r\n\t         * @param {Window}\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'dock',\n\t        value: function dock(other) {\n\t            // TODO: Check if otherGroup is touching\n\t            if (!this.emit('dock-before')) {\n\t                return;\n\t            } // Allow preventing dock\n\t            if (other === undefined) {\n\t                return;\n\t            } // Failed to find other. TODO: Return error\n\t\n\t            // If other is already in the group, return:\n\t            if (this._dockedGroup.indexOf(other) >= 0) {\n\t                return;\n\t            }\n\t\n\t            // Loop through all windows in otherGroup and add them to this's group:\n\t            var _iteratorNormalCompletion15 = true;\n\t            var _didIteratorError15 = false;\n\t            var _iteratorError15 = undefined;\n\t\n\t            try {\n\t                for (var _iterator15 = other._dockedGroup[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n\t                    var otherWin = _step15.value;\n\t\n\t                    this._dockedGroup.push(otherWin);\n\t                    // Sharing the array between window objects makes it easier to manage:\n\t                    otherWin._dockedGroup = otherWin._dockedGroup;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError15 = true;\n\t                _iteratorError15 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion15 && _iterator15.return) {\n\t                        _iterator15.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError15) {\n\t                        throw _iteratorError15;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Force undocking this window from it's group.<br>\r\n\t         * TODO: Redock those still touching, EXCEPT 'this'.\r\n\t         * @param {Window}\r\n\t         * @param {Callback=}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'undock',\n\t        value: function undock(other) {\n\t            // Check to see if window is already undocked:\n\t            if (this._dockedGroup.length === 1) {\n\t                return;\n\t            }\n\t\n\t            // Undock this:\n\t            this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n\t            this._dockedGroup = [this];\n\t\n\t            // TODO: Redock those still touching, EXCEPT 'this'.\n\t        }\n\t    }, {\n\t        key: '_dragStart',\n\t        value: function _dragStart() {\n\t            if (!this.emit('drag-start')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            this.restore();\n\t            var _iteratorNormalCompletion16 = true;\n\t            var _didIteratorError16 = false;\n\t            var _iteratorError16 = undefined;\n\t\n\t            try {\n\t                for (var _iterator16 = this._dockedGroup[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n\t                    var _window10 = _step16.value;\n\t\n\t                    _window10._dragStartPos = _window10.getPosition();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError16 = true;\n\t                _iteratorError16 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion16 && _iterator16.return) {\n\t                        _iterator16.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError16) {\n\t                        throw _iteratorError16;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragBy',\n\t        value: function _dragBy(deltaLeft, deltaTop) {\n\t            if (!this.emit('drag-before')) {\n\t                return;\n\t            } // Allow preventing drag\n\t            // Perform Snap:\n\t            var thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft, this._dragStartPos.top + deltaTop);\n\t            var snapDelta = new _index2.Vector(NaN, NaN);\n\t\n\t            var _iteratorNormalCompletion17 = true;\n\t            var _didIteratorError17 = false;\n\t            var _iteratorError17 = undefined;\n\t\n\t            try {\n\t                for (var _iterator17 = _global2.default._windows.values()[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n\t                    var other = _step17.value;\n\t\n\t                    if (other._dockedGroup !== this._dockedGroup) {\n\t                        snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError17 = true;\n\t                _iteratorError17 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion17 && _iterator17.return) {\n\t                        _iterator17.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError17) {\n\t                        throw _iteratorError17;\n\t                    }\n\t                }\n\t            }\n\t\n\t            deltaLeft += snapDelta.left || 0;\n\t            deltaTop += snapDelta.top || 0;\n\t\n\t            var _iteratorNormalCompletion18 = true;\n\t            var _didIteratorError18 = false;\n\t            var _iteratorError18 = undefined;\n\t\n\t            try {\n\t                for (var _iterator18 = this._dockedGroup[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n\t                    var _other = _step18.value;\n\t\n\t                    var pos = _other._dragStartPos;\n\t\n\t                    // If other doesn't have a drag position, start it:\n\t                    if (pos === undefined) {\n\t                        pos = _other._dragStartPos = _other.getPosition();\n\t                        pos.left -= deltaLeft;\n\t                        pos.top -= deltaTop;\n\t                    }\n\t\n\t                    _other._window.style.left = pos.left + deltaLeft + 'px';\n\t                    _other._window.style.top = pos.top + deltaTop + 'px';\n\t                    _other.emit('move');\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError18 = true;\n\t                _iteratorError18 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion18 && _iterator18.return) {\n\t                        _iterator18.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError18) {\n\t                        throw _iteratorError18;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: '_dragStop',\n\t        value: function _dragStop() {\n\t            // Dock to those it snapped to:\n\t            var thisBounds = this.getBounds();\n\t\n\t            var _iteratorNormalCompletion19 = true;\n\t            var _didIteratorError19 = false;\n\t            var _iteratorError19 = undefined;\n\t\n\t            try {\n\t                for (var _iterator19 = _global2.default._windows.values()[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n\t                    var other = _step19.value;\n\t\n\t                    if (thisBounds.isTouching(other.getBounds())) {\n\t                        this.dock(other);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError19 = true;\n\t                _iteratorError19 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion19 && _iterator19.return) {\n\t                        _iterator19.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError19) {\n\t                        throw _iteratorError19;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion20 = true;\n\t            var _didIteratorError20 = false;\n\t            var _iteratorError20 = undefined;\n\t\n\t            try {\n\t                for (var _iterator20 = this._dockedGroup[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n\t                    var _window11 = _step20.value;\n\t\n\t                    delete _window11._dragStartPos;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError20 = true;\n\t                _iteratorError20 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion20 && _iterator20.return) {\n\t                        _iterator20.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError20) {\n\t                        throw _iteratorError20;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.emit('drag-stop');\n\t        }\n\t\n\t        /**\r\n\t         * Returns a list of all {@link Window} instances open.\r\n\t         * @returns {Window[]}\r\n\t         */\n\t\n\t    }], [{\n\t        key: 'getAll',\n\t        value: function getAll() {\n\t            return Array.from(_global2.default._windows.values());\n\t        }\n\t\n\t        /**\r\n\t         * Returns the {@link Window} instance that has `id`.\r\n\t         * @param {String|Number}\r\n\t         * @returns {Window|undefined}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getByID',\n\t        value: function getByID(id) {\n\t            return _global2.default._windows.get(id);\n\t        }\n\t\n\t        /**\r\n\t         * Returns the {@link Window} instance that calls this function.\r\n\t         * @returns {Window}\r\n\t         */\n\t\n\t    }, {\n\t        key: 'getCurrent',\n\t        value: function getCurrent() {\n\t            return Window.current;\n\t        }\n\t    }]);\n\t\n\t    return Window;\n\t}(_index.EventHandler);\n\t\n\t// Add launcher to list of windows:\n\t\n\t\n\tif (_global2.default.runtime.isMain) {\n\t    window.document.body.contentWindow = window;\n\t    Window.current = new Window(window); // Force add launcher to window list\n\t} else {\n\t    // No need to do this for child windows, since _windows is shared across windows.\n\t    // Handle current window in this context:\n\t    Window.current = function () {\n\t        var _iteratorNormalCompletion21 = true;\n\t        var _didIteratorError21 = false;\n\t        var _iteratorError21 = undefined;\n\t\n\t        try {\n\t            for (var _iterator21 = _global2.default._windows.values()[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n\t                var win = _step21.value;\n\t\n\t                if (win._window.contentWindow === window) {\n\t                    return win;\n\t                }\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError21 = true;\n\t            _iteratorError21 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion21 && _iterator21.return) {\n\t                    _iterator21.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError21) {\n\t                    throw _iteratorError21;\n\t                }\n\t            }\n\t        }\n\t    }();\n\t}\n\t\n\tif (!_global2.default.runtime.isMain) {\n\t    (function () {\n\t        // Setup handlers on this child window:\n\t        var wX = 0;\n\t        var wY = 0;\n\t        var dragging = false;\n\t\n\t        window.addEventListener('focus', function () {\n\t            Window.current.bringToFront();\n\t        });\n\t\n\t        window.addEventListener('mousedown', function (event) {\n\t            if (event.target.classList && event.target.classList.contains('window-drag')) {\n\t                dragging = true;\n\t                wX = event.screenX;\n\t                wY = event.screenY;\n\t                Window.current._dragStart();\n\t            }\n\t        });\n\t\n\t        window.addEventListener('mousemove', function (event) {\n\t            if (dragging) {\n\t                Window.current._dragBy(event.screenX - wX, event.screenY - wY);\n\t            }\n\t        });\n\t\n\t        window.addEventListener('mouseup', function () {\n\t            dragging = false;\n\t            Window.current._dragStop();\n\t        });\n\t    })();\n\t}\n\t\n\t_global2.default.Window = Window;\n\texports.default = Window;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// windowmanager.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 36987eb4db1c0f06de95","import windowmanager from './global';\nimport './runtime/index';\n\n// Make windowmanager global:\nif (typeof global !== 'undefined' && global) { global.windowmanager = windowmanager; }\nif (typeof window !== 'undefined' && window) { window.windowmanager = windowmanager; }\n\nexport default windowmanager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* global VERSION */\r\nimport { EventHandler } from './utils/index';\r\nimport geometry from './geometry/index';\r\n\r\nconst windowmanagerEventNames = ['window-create', 'window-close'];\r\n\r\n/**\r\n * A global variable exposed on windows to access the windowmanager-related API.\r\n * @namespace\r\n * @extends EventHandler\r\n * @property {string} version - version of windowmanager\r\n * @property {object} runtime - contains runtime-specific info\r\n * @property {string} runtime.name - name of runtime (ie. Chrome, IE, OpenFin, Electron, ect)\r\n * @property {string} runtime.version\r\n * @property {boolean} runtime.isBrowser - is this running in a browser\r\n * @property {boolean} runtime.isElectron - is this running in Electron\r\n * @property {boolean} runtime.isOpenFin - is this running in OpenFin\r\n * @property {boolean} runtime.isDesktop - is this a desktop OS\r\n * @property {boolean} runtime.isMobile - is this a mobile OS\r\n * @property {boolean} runtime.isMain - is this the main/startup window (Electron doesn't have one atm)\r\n * @property {Window} Window\r\n * @property {module:geometry} geometry\r\n * @property {MessageBus} messagebus - message bus for application\r\n */\r\nlet windowmanager = new EventHandler(windowmanagerEventNames);\r\n\r\nwindowmanager.version = VERSION;\r\n// runtime is set in the respective runtime\r\nwindowmanager.runtime = {\r\n    name: undefined,\r\n    version: undefined,\r\n    isBrowser: false,\r\n    isElectron: false,\r\n    isOpenFin: false,\r\n    isDesktop: false,\r\n    isMobile: false,\r\n    isMain: false\r\n};\r\n\r\n// Credit: http://stackoverflow.com/a/11381730\r\nif (typeof navigator !== 'undefined') {\r\n    /* eslint-disable max-len */\r\n    windowmanager.runtime.isMobile = (function (a) { return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)); })(navigator.userAgent || navigator.vendor || window.opera);\r\n    /* eslint-enable max-len */\r\n    windowmanager.runtime.isDesktop = !windowmanager.isMobile;\r\n}\r\n\r\n// Add geometry to global:\r\nwindowmanager.geometry = geometry;\r\n\r\n// messagebus is set in the respective runtime\r\n\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","import EventHandler from './EventHandler';\r\nimport SyncCallback from './SyncCallback';\r\n\r\nconst genUIDE7 = (() => {\r\n    let lut = [];\r\n\r\n    for (let i = 0; i < 256; i += 1) { lut[i] = (i < 16 ? '0' : '') + (i).toString(16); }\r\n\r\n    return () => {\r\n        let d0 = Math.random() * 0xffffffff | 0;\r\n        let d1 = Math.random() * 0xffffffff | 0;\r\n        let d2 = Math.random() * 0xffffffff | 0;\r\n        let d3 = Math.random() * 0xffffffff | 0;\r\n\r\n        return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' +\r\n            lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' +\r\n            lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] +\r\n            lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\r\n    };\r\n})();\r\n\r\nfunction getUniqueWindowName() {\r\n    return 'window' + genUIDE7() + (new Date()).getTime();\r\n};\r\n\r\nexport default {\r\n    getUniqueWindowName,\r\n    EventHandler,\r\n    SyncCallback\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","// TODO: Use class, rather than prototype.\r\n\r\n/**\r\n * An EventHandler\r\n * @constructor\r\n * @alias EventHandler\r\n * @param {string[]} [acceptedEventHandlers=[]] - String of allowed events.\r\n */\r\nfunction EventHandler(acceptedEventHandlers = []) {\r\n    this._eventListeners = {};\r\n    this._eventPipes = [];\r\n    // TODO: Look into making these special properties that can't be deleted?\r\n    for (const acceptedEventHandler of acceptedEventHandlers) {\r\n        this._eventListeners[acceptedEventHandler] = [];\r\n    }\r\n}\r\n\r\n/**\r\n * @method\r\n * @param {string}\r\n * @param {callback}\r\n */\r\nEventHandler.prototype.on = function (eventNames, eventListener) {\r\n    eventNames = eventNames.toLowerCase().split(' ');\r\n\r\n    for (const eventName of eventNames) {\r\n        // Check if this event can be subscribed to via this function:\r\n        if (this._eventListeners[eventName] === undefined) { continue; }\r\n\r\n        // Check if eventListener is a function:\r\n        if (!eventListener || typeof eventListener.constructor !== 'function') {\r\n            throw new Error('on requires argument \\'eventListener\\' of type Function');\r\n        }\r\n\r\n        // Check if eventListener is already added:\r\n        if (this._eventListeners[eventName].indexOf(eventListener) >= 0) { continue; }\r\n\r\n        // Add event listener:\r\n        this._eventListeners[eventName].push(eventListener);\r\n    }\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {string}\r\n * @param {callback}\r\n */\r\nEventHandler.prototype.once = function (eventName, eventListener) {\r\n    function onceListener() {\r\n        this.off(eventName, onceListener);\r\n        eventListener.apply(this, arguments);\r\n    }\r\n    this.on(eventName, onceListener);\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {string}\r\n * @param {callback}\r\n */\r\nEventHandler.prototype.off = function (eventNames, eventListener) {\r\n    eventNames = eventNames.toLowerCase().split(' ');\r\n\r\n    for (const eventName of eventNames) {\r\n        // If event listeners don't exist, bail:\r\n        if (this._eventListeners[eventName] === undefined) { return; }\r\n\r\n        // Check if eventListener is a function:\r\n        if (!eventListener || typeof eventListener.constructor !== 'function') {\r\n            throw new Error('off requires argument \\'eventListener\\' of type Function');\r\n        }\r\n\r\n        // Remove event listener, if exists:\r\n        const index = this._eventListeners[eventName].indexOf(eventListener);\r\n\r\n        if (index >= 0) { this._eventListeners[eventName].splice(index, 1); }\r\n    }\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {string}\r\n */\r\nEventHandler.prototype.clearEvent = function (eventNames) {\r\n    eventNames = eventNames.toLowerCase();\r\n\r\n    for (const eventName of eventNames) {\r\n        // If event listeners don't exist, bail:\r\n        if (this._eventListeners[eventName] === undefined) { return; }\r\n\r\n        this._eventListeners[eventName] = [];\r\n    }\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {string}\r\n * @param {...*} args - Arguments to pass to listeners\r\n * @returns {Boolean} true if all handlers return true, else false\r\n */\r\nEventHandler.prototype.emit = function (eventName, ...args) {\r\n    eventName = eventName.toLowerCase();\r\n\r\n    // If event listeners don't exist, bail:\r\n    if (this._eventListeners[eventName] === undefined) { return false; }\r\n\r\n    let returnVal = true;\r\n\r\n    for (const eventListener of this._eventListeners[eventName]) {\r\n        // Call listener with the 'this' context as the current window:\r\n        returnVal = returnVal && eventListener.apply(this, args) !== false;\r\n    }\r\n\r\n    for (const eventHandler of this._eventPipes) {\r\n        // Call handler with the 'this' context as the current window:\r\n        returnVal = returnVal && eventHandler.emit.apply(eventHandler, arguments) !== false;\r\n    }\r\n\r\n    return returnVal;\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {EventHandler}\r\n */\r\nEventHandler.prototype.addPipe = function (eventHandler) {\r\n    // Check if eventHandler is a EventHandler:\r\n    if (!eventHandler || !eventHandler.emit) {\r\n        throw new Error('addPipe requires argument \\'eventHandler\\' of type EventHandler');\r\n    }\r\n\r\n    // Check if eventHandler is already added:\r\n    if (this._eventPipes.indexOf(eventHandler) >= 0) { return; }\r\n\r\n    // Add event handler:\r\n    this._eventPipes.push(eventHandler);\r\n};\r\n\r\n/**\r\n * @method\r\n * @param {EventHandler}\r\n */\r\nEventHandler.prototype.removePipe = function (eventHandler) {\r\n    // Check if eventHandler is a EventHandler:\r\n    if (!eventHandler || !eventHandler.emit) {\r\n        throw new Error('removePipe requires argument \\'eventHandler\\' of type EventHandler');\r\n    }\r\n\r\n    // Check if eventHandler is already added:\r\n    if (this._eventPipes.indexOf(eventHandler) >= 0) { return; }\r\n\r\n    // Remove eventHandler, if exists:\r\n    const index = this._eventPipes.indexOf(eventHandler);\r\n\r\n    if (index >= 0) { this._eventPipes.splice(index, 1); }\r\n};\r\n\r\nexport default EventHandler;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/EventHandler.js","function SyncCallback(callback) {\r\n    if (!(this instanceof SyncCallback)) { return new SyncCallback(callback); }\r\n\r\n    this.callback = callback;\r\n    this.count = 0;\r\n}\r\n\r\nSyncCallback.prototype.ref = function (callback) {\r\n    let thisRef = this;\r\n\r\n    this.count += 1;\r\n    return function (...args) {\r\n        if (callback) { callback(...args); }\r\n        thisRef._deref();\r\n    };\r\n};\r\n\r\nSyncCallback.prototype._deref = function () {\r\n    this.count -= 1;\r\n    if (this.count <= 0) { this.callback(); }\r\n};\r\n\r\nexport default SyncCallback;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/SyncCallback.js","// TODO: Rewrite in class form, so can make use of get/set, and private.\r\n// TODO: Add asVector, asBoundingBox, asCollisionMesh to all classes (as a get),\r\n//       to easily coerce types!\r\n// TODO: Rewrite the classes to have more simplified functions (don't have complex\r\n//       functions that have very specific purposes).\r\n// TODO: Add proper argument checking! Not all methods have checks!\r\nimport Vector from './Vector';\r\nimport BoundingBox from './BoundingBox';\r\nimport CollisionMesh from './CollisionMesh';\r\n\r\nexport default {\r\n    Vector,\r\n    BoundingBox,\r\n    CollisionMesh,\r\n    /**\r\n     * A Position object. Alias of {@link Vector}.\r\n     * @class\r\n     * @see {@link Vector} for further information.\r\n     */\r\n    Position: Vector,\r\n    /**\r\n     * A Size object. Alias of {@link Vector}.\r\n     * @class\r\n     * @see {@link Vector} for further information.\r\n     */\r\n    Size: Vector\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/index.js","import BoundingBox from './BoundingBox';\r\nimport CollisionMesh from './CollisionMesh';\r\n\r\n/**\r\n * A Vector class.\r\n */\r\nclass Vector {\r\n    /**\r\n     * @param {Number} left - The position of the vector's x-axis.\r\n     * @param {Number} top - The position of the vector's y-axis.\r\n     * @returns {Vector} An instance of Vector\r\n     */\r\n    constructor(left, top) {\r\n        let obj = left;\r\n\r\n        if (obj && obj.constructor !== Number) {\r\n            // new Vector(obj)\r\n            this.left = obj.left;\r\n            this.top = obj.top;\r\n        } else {\r\n            // new Vector(left, top)\r\n            this.left = left;\r\n            this.top = top;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clone the current vector to a new object.\r\n     * @returns {Vector} A clone of this instance\r\n     */\r\n    clone() {\r\n        return new Vector(this);\r\n    }\r\n\r\n    /**\r\n     * Checks if any property on `this` is NaN.\r\n     * @returns {Boolean}\r\n     */\r\n    isNaN() {\r\n        return isNaN(this.left) || isNaN(this.top);\r\n    }\r\n\r\n    /**\r\n     * Resolve this object down to a {@link Vector} instance.\r\n     * Since this instance is already a vector, it returns itself.\r\n     * @returns {Vector} self\r\n     */\r\n    getVector() {\r\n        // We have this method, so any prototype in this script will return their position,\r\n        // and if they are one it will return itself.\r\n        // This simplifies code, and prevents having to do a ton of checks.\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a BoundingBox instance version of this vector similar to:<br>\r\n     * ```javascript\r\n     * new BoundingBox(Vector.left, Vector.top, Vector.left, Vector.top)\r\n     * ```\r\n     * @returns {BoundingBox}\r\n     */\r\n    getBoundingBox() {\r\n        // We have this method, so any prototype in this script will return their position,\r\n        // and if they are one it will return itself.\r\n        // This simplifies code, and prevents having to do a ton of checks.\r\n        return new BoundingBox(this.left, this.top, this.left, this.top);\r\n    }\r\n\r\n    /**\r\n     * Returns a {@link CollisionMesh} instance version of this vector similar to:<br>\r\n     * ```javascript\r\n     * new CollisionMesh(Vector.getBoundingBox())\r\n     * ```\r\n     * @returns {CollisionMesh}\r\n     */\r\n    getCollisionMesh() {\r\n        return new CollisionMesh(this.getBoundingBox());\r\n    }\r\n\r\n    /**\r\n     * Returns the squared distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    distanceSquared(other) {\r\n        let diff = other.subtract(this);\r\n\r\n        return diff.left * diff.left + diff.top * diff.top;\r\n    }\r\n\r\n    /**\r\n     * Returns the distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    distance(other) {\r\n        return Math.sqrt(this.distanceSquared(other));\r\n    }\r\n\r\n    /**\r\n     * Sets `this.left` to `other.left`, and sets `this.top` to `other.top`.\r\n     * @param {Vector}\r\n     * @returns {Vector} self\r\n     */\r\n    set(other) {\r\n        if (!other) { throw new Error(\"set requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        this.left = other.left;\r\n        this.top = other.top;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` to position at `left` and/or `top`.\r\n     * @param {Number} [left=null]\r\n     * @param {Number} [top=null]\r\n     * @returns {Vector} self\r\n     */\r\n    moveTo(left, top) {\r\n        if (left && left.constructor === Number) { this.left = left; }\r\n        if (top && top.constructor === Number) { this.top = top; }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n     * @param {Number} [deltaLeft=null]\r\n     * @param {Number} [deltaTop=null]\r\n     * @returns {Vector} self\r\n     */\r\n    moveBy(deltaLeft, deltaTop) {\r\n        if (deltaLeft && deltaLeft.constructor === Number) { this.left = deltaLeft; }\r\n        if (deltaTop && deltaTop.constructor === Number) { this.top = deltaTop; }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets `this`'s properties if `other`'s is smaller.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    setMin(other) {\r\n        if (!other) { throw new Error(\"setMin requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        if (Math.abs(other.left) < Math.abs(this.left) || isNaN(this.left)) { this.left = other.left; }\r\n        if (Math.abs(other.top) < Math.abs(this.top) || isNaN(this.top)) { this.top = other.top; }\r\n    }\r\n\r\n    /**\r\n     * Sets `this`'s properties if `other`'s is larger.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    setMax(other) {\r\n        if (!other) { throw new Error(\"setMax requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        if (Math.abs(other.left) > Math.abs(this.left) || isNaN(this.left)) { this.left = other.left; }\r\n        if (Math.abs(other.top) > Math.abs(this.top) || isNaN(this.top)) { this.top = other.top; }\r\n    }\r\n\r\n    /**\r\n     * Add `other` to `this`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    add(other) {\r\n        if (!other) { throw new Error(\"add requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        this.left += other.left;\r\n        this.top += other.top;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Subtract `other` from `this`.\r\n     * @param {Vector}\r\n     * @returns {Number}\r\n     */\r\n    subtract(other) {\r\n        if (!other) { throw new Error(\"subtract requires argument 'other'\"); }\r\n        other = other.getVector();\r\n\r\n        this.left -= other.left;\r\n        this.top -= other.top;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Vector;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/Vector.js","import Vector from './Vector';\r\nimport CollisionMesh from './CollisionMesh';\r\n\r\n// Utility functions:\r\nfunction minAbs(min, ...vals) {\r\n    let minAbs = Math.abs(min);\r\n\r\n    for (const val of vals) {\r\n        let argAbs = Math.abs(val);\r\n\r\n        if (argAbs < minAbs) {\r\n            min = val;\r\n            minAbs = argAbs;\r\n        }\r\n    }\r\n\r\n    return {\r\n        min: min,\r\n        abs: minAbs\r\n    };\r\n}\r\n\r\n/**\r\n * A BoundingBox class.\r\n */\r\nclass BoundingBox {\r\n    /**\r\n     * @param {number} left - The left position of x-axis.\r\n     * @param {number} top - The top position of y-axis.\r\n     * @param {number} right - The right position of x-axis.\r\n     * @param {number} bottom - The bottom position of y-axis.\r\n     */\r\n    constructor(left, top, right, bottom) {\r\n        let obj = left;\r\n\r\n        if (obj && obj.constructor !== Number) {\r\n            if (obj.getBoundingBox) { obj = obj.getBoundingBox(); }\r\n            // new BoundingBox(obj)\r\n            this.left = obj.left;\r\n            this.top = obj.top;\r\n            this.right = obj.right;\r\n            this.bottom = obj.bottom;\r\n        } else {\r\n            // new BoundingBox(left, top, right, bottom)\r\n            this.left = left;\r\n            this.top = top;\r\n            this.right = right;\r\n            this.bottom = bottom;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clone the current vector to a new object.\r\n     * @returns {BoundingBox} A clone of this instance\r\n     */\r\n    clone() {\r\n        return new BoundingBox(this);\r\n    }\r\n\r\n    /**\r\n     * Checks if any property on `this` is NaN.\r\n     * @returns {Boolean}\r\n     */\r\n    isNaN() {\r\n        return isNaN(this.left) || isNaN(this.top) || isNaN(this.right) || isNaN(this.bottom);\r\n    }\r\n\r\n    /**\r\n     * Returns the width of `this`.\r\n     * @returns {Number} width\r\n     */\r\n    getWidth() {\r\n        return Math.abs(this.right - this.left);\r\n    }\r\n\r\n    /**\r\n     * Returns the height of `this`.\r\n     * @returns {Number} height\r\n     */\r\n    getHeight() {\r\n        return Math.abs(this.bottom - this.top);\r\n    }\r\n\r\n    /**\r\n     * Returns the size of `this`.\r\n     * @returns {Vector} size\r\n     */\r\n    getSize() {\r\n        return new Vector(this.getWidth(), this.getHeight());\r\n    }\r\n\r\n    /**\r\n     * Returns the area of `this`.\r\n     * @returns {Number} area\r\n     */\r\n    getArea() {\r\n        return this.getWidth() * this.getHeight();\r\n    }\r\n\r\n    /**\r\n     * Returns the position of `this`.\r\n     * @returns {Vector} position\r\n     */\r\n    getPosition() {\r\n        return new Vector(this.left, this.top);\r\n    }\r\n\r\n    /**\r\n     * Resolve this object down to a {@link BoundingBox} instance.\r\n     * Since this instance is already a boundingbox, it returns itself.\r\n     * @returns {Vector} self\r\n     */\r\n    getBoundingBox() {\r\n        // We have this method, so any prototype in this script will return their bounding box,\r\n        // and if they are one it will return itself.\r\n        // This simplifies code, and prevents having to do a ton of checks.\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a {@link CollisionMesh} instance version of this boundingbox similar to:<br>\r\n     * ```javascript\r\n     * new CollisionMesh(BoundingBox)\r\n     * ```\r\n     * @returns {CollisionMesh}\r\n     */\r\n    getCollisionMesh() {\r\n        return new CollisionMesh(this);\r\n    }\r\n\r\n    /**\r\n     * Returns the center position of `this`.\r\n     * @returns {Vector} position\r\n     */\r\n    getCenterPosition() {\r\n        return new Vector(this.left + this.getWidth() / 2, this.top + this.getHeight() / 2);\r\n    }\r\n\r\n    /**\r\n     * Returns `this` subtract `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {Vector} position\r\n     */\r\n    difference(other) {\r\n        if (!other) { throw new Error(\"difference requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return new BoundingBox(this.left - other.left, this.top - other.top,\r\n                                this.right - other.right, this.bottom - other.bottom);\r\n    }\r\n\r\n    /**\r\n     * Returns a position, which if `this` is set to, `this` will be centered on `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {Vector} position\r\n     */\r\n    getCenteredOnPosition(other) {\r\n        if (!other) { throw new Error(\"getCenteredOnPosition requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return other.getCenterPosition().subtract(this.getCenterPosition().subtract(this.getPosition()));\r\n    }\r\n\r\n    /**\r\n     * Returns the intersection between `this` and `other`.\r\n     * This will return a {@link Vector} if they only intersect at a point.\r\n     * This will return a {@link BoundingBox} if they intersect over an area or line.\r\n     * This will return a undefined if they do not intersect.\r\n     * @param {BoundingBox}\r\n     * @returns {Vector|BoundingBox|undefined} intersection object\r\n     */\r\n    getIntersection(other) {\r\n        if (!other) { throw new Error(\"getIntersection requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        let left = Math.max(this.left, other.left),\r\n            top = Math.max(this.top, other.top),\r\n            right = Math.min(this.right, other.right),\r\n            bottom = Math.min(this.bottom, other.bottom);\r\n\r\n        if (left === right && top === bottom) {\r\n            return new Vector(left, top);\r\n        } else if (left <= right && top <= bottom) {\r\n            return new BoundingBox(left, top, right, bottom);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the squared distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number} squared distance\r\n     */\r\n    getDistanceSquaredToPoint(other) {\r\n        other = other.getVector();\r\n        let cLeft = (other.left <= this.left ? this.left : (other.left >= this.right ? this.right : other.left));\r\n        let cTop = (other.top <= this.top ? this.top : (other.top >= this.bottom ? this.bottom : other.top));\r\n        let cPos = new Vector(cLeft, cTop);\r\n\r\n        return cPos.distanceSquared(other);\r\n    }\r\n\r\n    /**\r\n     * Returns the distance between `this` and `other`.\r\n     * @param {Vector}\r\n     * @returns {Number} distance\r\n     */\r\n    getDistanceToPoint(other) {\r\n        return Math.sqrt(this.getDistanceSquaredToPoint(other));\r\n    }\r\n\r\n    /**\r\n     * Sets `this`'s properties to `other`'s properties.\r\n     * @param {BoundingBox}\r\n     * @returns {BoundingBox} self\r\n     */\r\n    set(other) {\r\n        if (!other) { throw new Error(\"set requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        this.left = other.left;\r\n        this.top = other.top;\r\n        this.right = other.right;\r\n        this.bottom = other.bottom;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` to position at `left` and/or `top`.\r\n     * @param {Number} [left=null]\r\n     * @param {Number} [top=null]\r\n     * @returns {BoundingBox} self\r\n     */\r\n    moveTo(left, top) {\r\n        if (left && left.constructor === Number) {\r\n            this.right = left + (this.right - this.left);\r\n            this.left = left;\r\n        }\r\n        if (top && top.constructor === Number) {\r\n            this.bottom = top + (this.bottom - this.top);\r\n            this.top = top;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\r\n     * @param {Number} [deltaLeft=null]\r\n     * @param {Number} [deltaTop=null]\r\n     * @returns {BoundingBox} self\r\n     */\r\n    moveBy(deltaLeft, deltaTop) {\r\n        if (deltaLeft && deltaLeft.constructor === Number) {\r\n            this.left += deltaLeft;\r\n            this.right += deltaLeft;\r\n        }\r\n        if (deltaTop && deltaTop.constructor === Number) {\r\n            this.top += deltaTop;\r\n            this.bottom += deltaTop;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Resize `this` to size `width` and/or `height`, anchored at `anchor`.\r\n     * @param {Number} [width=null]\r\n     * @param {Number} [height=null]\r\n     * @param {String} [anchor='top-left'] supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\"\r\n     * @returns {BoundingBox} self\r\n     */\r\n    resizeTo(width, height, anchor) {\r\n        // NOTE: anchor supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\". By default it is \"top-left\".\r\n        // NOTE: anchor also supports being passed as a position. Allowing the resize anchor to be anywhere other than\r\n        //       the predefined strings.\r\n        let curSize = this.getSize();\r\n        let newSize = new Vector(width || curSize.left, height || curSize.top);\r\n\r\n        anchor = anchor || 'top-left';\r\n        if (typeof anchor === 'string' || anchor instanceof String) {\r\n            let anchorStr = anchor;\r\n\r\n            anchor = this.getPosition();\r\n            if (anchorStr.indexOf('right') >= 0) { anchor.left += curSize.left; }\r\n            if (anchorStr.indexOf('bottom') >= 0) { anchor.top += curSize.top; }\r\n        }\r\n\r\n        this.left += (anchor.left - this.left) * (curSize.left - newSize.left) / curSize.left;\r\n        this.right += (anchor.left - this.right) * (curSize.left - newSize.left) / curSize.left;\r\n        this.top += (anchor.top - this.top) * (curSize.top - newSize.top) / curSize.top;\r\n        this.bottom += (anchor.top - this.bottom) * (curSize.top - newSize.top) / curSize.top;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` encapsulates `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {Boolean}\r\n     */\r\n    isContains(other) {\r\n        if (!other) { throw new Error(\"isContains requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return other.left >= this.left && other.right <= this.right &&\r\n            other.top >= this.top && other.bottom <= this.bottom;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` encapsulates at least one of `others`.\r\n     * @param {BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someContains(others) {\r\n        if (!others) { throw new Error(\"someContains requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"someContains requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isContains(others[index])) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` touches an edge of `other`, but does not intersect area.\r\n     * @param {BoundingBox}\r\n     * @returns {Boolean}\r\n     */\r\n    isTouching(other) {\r\n        if (!other) { throw new Error(\"isTouching requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return ((this.top <= other.bottom && this.bottom >= other.top) &&\r\n                (this.left === other.right || this.right === other.left)) ||\r\n                ((this.left <= other.right && this.right >= other.left) &&\r\n                (this.top === other.bottom || this.bottom === other.top));\r\n    }\r\n\r\n    /**\r\n     * If `this` touches one of `others`, but does not intersect area, then this returns the `this` edge name.\r\n     * @param {BoundingBox[]}\r\n     * @returns {String|undefined} edge name\r\n     */\r\n    getEdgeTouching(others) {\r\n        if (!others) { throw new Error(\"getEdgeTouching requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { others = [others]; }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            let other = others[index].getBoundingBox();\r\n\r\n            if (this.top <= other.bottom && this.bottom >= other.top) {\r\n                if (this.left === other.right) { return 'left'; }\r\n                if (this.right === other.left) { return 'right'; }\r\n            }\r\n            if (this.left <= other.right && this.right >= other.left) {\r\n                if (this.top === other.bottom) { return 'top'; }\r\n                if (this.bottom === other.top) { return 'bottom'; }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If `this` touches one of `others`, but does not intersect area, then this returns the `other` edge name.\r\n     * @param {BoundingBox[]}\r\n     * @returns {String|undefined} edge name\r\n     */\r\n    getOtherEdgeTouching(others) {\r\n        if (!others) { throw new Error(\"getOtherEdgeTouching requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { others = [others]; }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            let other = others[index].getBoundingBox();\r\n\r\n            if (this.top <= other.bottom && this.bottom >= other.top) {\r\n                if (this.left === other.right) { return 'right'; }\r\n                if (this.right === other.left) { return 'left'; }\r\n            }\r\n            if (this.left <= other.right && this.right >= other.left) {\r\n                if (this.top === other.bottom) { return 'bottom'; }\r\n                if (this.bottom === other.top) { return 'top'; }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines which edges of `this` is closest to `other`, returns all edges in sorted order by distance.\r\n     * @param {BoundingBox}\r\n     * @returns {String[]} edge names sorted from closest to furthest\r\n     */\r\n    getEdgeClosestOrder(other) {\r\n        if (!other) { throw new Error(\"getEdgeClosest requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n        let centerPos = this.getCenterPosition();\r\n        let dis = [];\r\n\r\n        dis.push({\r\n            'edge': 'left',\r\n            dis: other.getDistanceSquaredToPoint(this.left, centerPos.top)\r\n        });\r\n        dis.push({\r\n            'edge': 'top',\r\n            dis: other.getDistanceSquaredToPoint(centerPos.left, this.top)\r\n        });\r\n        dis.push({\r\n            'edge': 'right',\r\n            dis: other.getDistanceSquaredToPoint(this.right, centerPos.top)\r\n        });\r\n        dis.push({\r\n            'edge': 'bottom',\r\n            dis: other.getDistanceSquaredToPoint(centerPos.left, this.bottom)\r\n        });\r\n        dis.sort(function (a, b) {\r\n            return a.dis - b.dis;\r\n        });\r\n\r\n        return dis.map(function (dis) { return dis.edge; });\r\n    }\r\n\r\n    /**\r\n     * Determines which `this` edge is closest to `other`.\r\n     * @param {BoundingBox}\r\n     * @returns {String} edge name\r\n     */\r\n    getEdgeClosest(other) {\r\n        let edges = this.getEdgeClosestOrder(other);\r\n\r\n        return edges[0];\r\n    }\r\n\r\n    /**\r\n     * Returns a vector representing the delta position to add to `this` to snap to `other`.<br>\r\n     * Note: `snapDelta` may contain `NaN` for `left` or `right`\r\n     * @param {BoundingBox}\r\n     * @param {Number} [snapDistance=5] max distance to move `this`\r\n     * @returns {Vector} snapDelta\r\n     */\r\n    getSnapDelta(other, snapDistance) {\r\n        if (!other) { throw new Error(\"getSnapDelta requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n        snapDistance = snapDistance || 5;\r\n\r\n        let snapDelta = new Vector(NaN, NaN);\r\n\r\n        if (this.top <= other.bottom && this.bottom >= other.top) {\r\n            // Handle x-snap:\r\n            const leftRightDis = minAbs(other.left - this.right, other.right - this.left);\r\n\r\n            if (leftRightDis.abs <= snapDistance) { // this.LeftRightSnapTo(other)\r\n                snapDelta.left = leftRightDis.min;\r\n\r\n                // Handle y-subsnap:\r\n                const topBottomDis = minAbs(other.top - this.top, other.bottom - this.bottom);\r\n\r\n                if (topBottomDis.abs <= snapDistance) { // this.TopBottomSubSnapTo(other)\r\n                    snapDelta.top = topBottomDis.min;\r\n                }\r\n            }\r\n        } else if (this.left <= other.right && this.right >= other.left) {\r\n            // Handle y-snap:\r\n            const topBottomDis = minAbs(other.top - this.bottom, other.bottom - this.top);\r\n\r\n            if (topBottomDis.abs <= snapDistance) { // this.TopBottomSnapTo(other)\r\n                snapDelta.top = topBottomDis.min;\r\n\r\n                // Handle x-subsnap:\r\n                const leftRightDis = minAbs(other.left - this.left, other.right - this.right);\r\n\r\n                if (leftRightDis.abs <= snapDistance) { // this.LeftRightSubSnapTo(other)\r\n                    snapDelta.left = leftRightDis.min;\r\n                }\r\n            }\r\n        }\r\n\r\n        return snapDelta;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` touches an edge of one of `others`, but does not intersect area.\r\n     * @param {BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someTouching(others) {\r\n        if (!others) { throw new Error(\"someTouching requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"someTouching requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isTouching(others[index])) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` intersects an area of `others`, not an edge.\r\n     * @param {BoundingBox}\r\n     * @returns {Boolean}\r\n     */\r\n    isColliding(other) {\r\n        if (!other) { throw new Error(\"isColliding requires argument 'other'\"); }\r\n        other = other.getBoundingBox();\r\n\r\n        return this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top;\r\n    }\r\n\r\n    /**\r\n     * Determines if `this` intersects an area of one of `others`, not an edge.\r\n     * @param {BoundingBox[]}\r\n     * @returns {Boolean}\r\n     */\r\n    someColliding(others) {\r\n        if (!others) { throw new Error(\"someColliding requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"someColliding requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isColliding(others[index])) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns which of `other` that `this` intersects an area of, not an edge.\r\n     * @param {BoundingBox[]}\r\n     * @returns {BoundingBox|undefined}\r\n     */\r\n    getColliding(others) {\r\n        if (!others) { throw new Error(\"getColliding requires argument 'others'\"); }\r\n        if (others.constructor !== Array) { throw new Error(\"getColliding requires argument 'others' of type Array\"); }\r\n\r\n        for (let index = 0; index < others.length; index += 1) {\r\n            if (this.isColliding(others[index])) { return others[index]; }\r\n        }\r\n    }\r\n}\r\n\r\nexport default BoundingBox;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/BoundingBox.js","/* global fin */\r\nimport './ready';\r\n\r\n// TODO: Add runtime checks here for OpenFin and Electron\r\nlet runtime;\r\n\r\nif ((typeof process !== 'undefined' && process && process.versions && process.versions.electron) ||\r\n    (typeof window !== 'undefined' && window && window.nodeRequire && window.nodeRequire.runtime)) {\r\n    // We are running in an Electron Runtime:\r\n    runtime = require('./electron/index');\r\n} else if (typeof fin !== 'undefined' && fin && fin.desktop && fin.desktop.main) {\r\n    // We are running in an OpenFin Runtime:\r\n    runtime = require('./openfin/index');\r\n} else {\r\n    // We are running in an Browser Runtime:\r\n    runtime = require('./browser/index');\r\n}\r\n\r\nexport default runtime;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/index.js","import windowmanager from '../global';\r\nimport { SyncCallback } from '../utils/index';\r\n\r\nlet callbacks = [];\r\nlet isReady = false;\r\n\r\n/**\r\n * Executes callback when windowmanager is ready.\r\n * @memberof windowmanager\r\n * @method\r\n * @param {callback}\r\n */\r\nwindowmanager.onReady = function (callback) {\r\n    // Check if callback is not a function:\r\n    if (!(callback && callback.constructor && callback.call && callback.apply)) {\r\n        throw new Error('onReady expects a function passed as the callback argument!');\r\n    }\r\n\r\n    // Check if already ready:\r\n    if (isReady) { callback(); }\r\n\r\n    // Check to see if callback is already in callbacks:\r\n    if (callbacks.indexOf(callback) >= 0) { return; }\r\n\r\n    callbacks.push(callback);\r\n};\r\n\r\n/**\r\n * Returns if windowmanager is ready.\r\n * @memberof windowmanager\r\n * @method\r\n * @returns {Boolean}\r\n */\r\nwindowmanager.isReady = () => {\r\n    return isReady;\r\n};\r\n\r\nexport default new SyncCallback(function () {\r\n    isReady = true;\r\n    for (const callback of callbacks) { callback(); }\r\n    callbacks = [];\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/ready.js","import windowmanager from './global'; // Setup windowmanager runtime variables for Electron\r\n// TODO: Determine if renderer should be setup using the startup script, and have renderer be a NOOP\r\n\r\nif (windowmanager._isNode) {\r\n    // We are running in an Electron's main script:\r\n    require('./node/index');\r\n} else if (windowmanager._isRenderer) {\r\n    // We are running in an Electron renderer:\r\n    require('./renderer/index');\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/index.js","import windowmanager from '../../global';\r\nimport nodeRequire from './require';\r\n\r\nwindowmanager._isNode = false;\r\nwindowmanager._isStartup = false;\r\nwindowmanager._isRenderer = false;\r\nwindowmanager.runtime.name = 'Electron';\r\nwindowmanager.runtime.version = undefined;\r\nwindowmanager.runtime.isElectron = true;\r\n\r\n// Determine if this is node or renderer:\r\n// TODO: Clean up the following code to clearly identify the three potential states: node, startup, renderer\r\nif (typeof global !== 'undefined' && global) {\r\n    // We are running in an Electron Window Backend's Runtime:\r\n    const { BrowserWindow } = nodeRequire('electron');\r\n\r\n    // The following check works because BrowserWindow is not exposed to the window scripts:\r\n    windowmanager._isNode = (BrowserWindow != null);\r\n    windowmanager._isStartup = !windowmanager._isNode;\r\n    windowmanager.runtime.version = global.process.versions.electron;\r\n\r\n    // If is a window startup script:\r\n    if (windowmanager._isStartup) {\r\n        let _require = nodeRequire;\r\n\r\n        _require.runtime = windowmanager.runtime;\r\n        _require.workingDir = _require('path').dirname(_require.main.filename);\r\n        _require.windowmanagerPath = __filename; // Used so new windows know where to load windowmanager from.\r\n        global.nodeRequire = _require; // Used so windowmanager in a window can access electron.\r\n        // TODO: Determine if window can be set directly here.\r\n\r\n        process.once('loaded', function () {\r\n            // TODO: Is this needed?\r\n            global.nodeRequire = _require;\r\n        });\r\n    }\r\n} else if (typeof window !== 'undefined' && window) {\r\n    windowmanager._isRenderer = true;\r\n\r\n    if (window.nodeRequire != null) {\r\n        // We are running in an Electron Window's Runtime:\r\n        windowmanager.runtime = window.nodeRequire.runtime;\r\n        windowmanager._windows = new Map();\r\n    }\r\n}\r\n\r\n// This is used to store info across windows:\r\n// Everything on here gets exported as windowmanager.\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/global.js","// Exposes node require\r\nexport default eval('typeof require !== \\'undefined\\' && require'); // eslint-disable-line no-eval\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/require.js","import readySync from '../../ready';\r\nimport './Window'; // Setup window backend\r\n\r\n// TODO: Make scalejs.windowmanager the main.js script for Electron. Load the config.json\r\n\r\nreadySync._deref();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/node/index.js","import windowmanager from '../global';\r\nimport nodeRequire from '../require';\r\nconst { BrowserWindow } = nodeRequire('electron');\r\n\r\n// TODO: Give the node backend access to windowmanager Window-like functionality\r\n// This is Electron's main process:\r\nconst { Vector, BoundingBox } = windowmanager.geometry;\r\n\r\n// TODO: Solve event syncing between windows\r\nBrowserWindow.prototype._notifyReady = function () {\r\n    for (let other of BrowserWindow.getAllWindows()) {\r\n        other.webContents.send('window-create', this.id);\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._ensureDockSystem = function () {\r\n    // Make sure docked group exists:\r\n    if (this._dockedGroup === undefined) {\r\n        this._dockedGroup = [this];\r\n\r\n        this.on('closed', function () {\r\n            // Clean up the dock system when this window closes:\r\n            this.undock();\r\n        });\r\n\r\n        this.on('maximize', function () {\r\n            this.undock(); // TODO: Support changing size when docked.\r\n        });\r\n\r\n        this.on('minimize', function () {\r\n            this._dockMinimize();\r\n        });\r\n\r\n        this.on('restore', function () {\r\n            for (let other of this._dockedGroup) {\r\n                if (other !== this) {\r\n                    other.restore();\r\n                }\r\n            }\r\n        });\r\n\r\n        let lastBounds = this.getBounds();\r\n\r\n        this.on('move', function () {\r\n            const newBounds = this.getBounds();\r\n\r\n            // this._dockMoveTo(newBounds.x, newBounds.y, [lastBounds.x, lastBounds.y]);\r\n            lastBounds = newBounds;\r\n        });\r\n\r\n        this.on('resize', function () {\r\n            const newBounds = this.getBounds();\r\n\r\n            if (newBounds.width !== lastBounds.width || newBounds.height !== lastBounds.height) {\r\n                this.undock(); // TODO: Support changing size when docked.\r\n            }\r\n            // TODO: Handle resize positions of other docked windows\r\n            //       This requires reworking how windows are docked/connected\r\n            //       (they must be docked to edges of windows, not the windows themselves)\r\n            /* for (let index = 0; index < this._dockedGroup.length; index += 1) {\r\n                const other = this._dockedGroup[index];\r\n\r\n                if (other !== this) {\r\n                    other.setPosition()\r\n                }\r\n            }*/\r\n\r\n            lastBounds = newBounds;\r\n        });\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype.dock = function (otherID) {\r\n    this._ensureDockSystem();\r\n\r\n    // Resolve otherID, and fail if otherID doesn't exist.\r\n    const other = BrowserWindow.fromId(otherID);\r\n\r\n    if (other === undefined) { return; } // Failed to find other. TODO: Return error\r\n\r\n    // If other is already in the group, return:\r\n    if (this._dockedGroup.indexOf(other) >= 0) { return; }\r\n\r\n    // Make sure docked group exists:\r\n    other._ensureDockSystem();\r\n\r\n    // Loop through all windows in otherGroup and add them to this's group:\r\n    for (let otherWin of other._dockedGroup) {\r\n        this._dockedGroup.push(otherWin);\r\n        // Sharing the array between window objects makes it easier to manage:\r\n        otherWin._dockedGroup = this._dockedGroup;\r\n    }\r\n\r\n    // TODO: Check if otherGroup is touching\r\n};\r\n\r\nBrowserWindow.prototype.undock = function () {\r\n    this._ensureDockSystem();\r\n\r\n    // Check to see if window is already undocked:\r\n    if (this._dockedGroup.length === 1) { return; }\r\n\r\n    // Undock this:\r\n    this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\r\n    this._dockedGroup = [this];\r\n\r\n    // TODO: Redock those still touching, EXCEPT 'this'.\r\n};\r\n\r\nBrowserWindow.prototype._dockFocus = function () {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        if (window !== this) {\r\n            window.setAlwaysOnTop(true);\r\n            window.setAlwaysOnTop(false);\r\n        }\r\n    }\r\n    this.setAlwaysOnTop(true);\r\n    this.setAlwaysOnTop(false);\r\n};\r\n\r\nBrowserWindow.prototype._dragStart = function () {\r\n    // if (!this.emit('drag-start')) { return; } // Allow preventing drag\r\n    this._ensureDockSystem();\r\n\r\n    this.restore();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window._dragStartPos = window.getPosition();\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._getBounds = function () {\r\n    const bounds = this.getBounds();\r\n\r\n    return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\r\n};\r\n\r\nBrowserWindow.prototype._dragBy = function (deltaLeft, deltaTop) {\r\n    this._ensureDockSystem();\r\n\r\n    // Perform Snap:\r\n    const thisBounds = this._getBounds().moveTo(this._dragStartPos[0] + deltaLeft,\r\n                                                this._dragStartPos[1] + deltaTop);\r\n    let snapDelta = new Vector(NaN, NaN);\r\n\r\n    for (let other of BrowserWindow.getAllWindows()) {\r\n        if (other._dockedGroup !== this._dockedGroup) {\r\n            snapDelta.setMin(thisBounds.getSnapDelta(other._getBounds()));\r\n        }\r\n    }\r\n    deltaLeft += snapDelta.left || 0;\r\n    deltaTop += snapDelta.top || 0;\r\n\r\n    for (let other of this._dockedGroup) {\r\n        let pos = other._dragStartPos;\r\n\r\n        // If other doesn't have a drag position, start it:\r\n        if (pos === undefined) {\r\n            pos = other._dragStartPos = other.getPosition();\r\n            pos[0] -= deltaLeft;\r\n            pos[1] -= deltaTop;\r\n        }\r\n\r\n        other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dragStop = function () {\r\n    this._ensureDockSystem();\r\n\r\n    // Dock to those it snapped to:\r\n    const thisBounds = this._getBounds();\r\n\r\n    for (let other of BrowserWindow.getAllWindows()) {\r\n        if (thisBounds.isTouching(other._getBounds())) {\r\n            this.dock(other.id);\r\n        }\r\n    }\r\n\r\n    for (let window of this._dockedGroup) {\r\n        delete window._dragStartPos;\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockMoveTo = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    const oldPos = this.getPosition();\r\n    const deltaLeft = left - oldPos[0];\r\n    const deltaTop = top - oldPos[1];\r\n\r\n    for (let other of this._dockedGroup) {\r\n        const pos = other.getPosition();\r\n\r\n        other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockMinimize = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window.minimize();\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockHide = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window.hide();\r\n    }\r\n};\r\n\r\nBrowserWindow.prototype._dockShow = function (left, top) {\r\n    this._ensureDockSystem();\r\n\r\n    for (let window of this._dockedGroup) {\r\n        window.show();\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/node/Window.js","import windowmanager from '../global';\r\nimport readySync from '../../ready';\r\nimport Window from './Window';\r\nconst { ipcRenderer } = window.nodeRequire('electron');\r\n\r\nwindowmanager.messagebus = (() => {\r\n    // TODO: Optimize Electron's messagebus by keeping track of listeners\r\n    //       in the main process for early termination.\r\n    // TODO: Listener cleanup on this window, or other window close.\r\n    // TODO: Use a custom eventName, so to not collide with current ones.\r\n    let wrappedListeners = {};\r\n    let windowWrappedListeners = {};\r\n\r\n    function wrapListener(window, listener) {\r\n        return (_, message) => {\r\n            // If listener only listens from a specific window, check that this message is from that window:\r\n            if (window && window._id !== message.winID) { return; }\r\n\r\n            const fromWindow = windowmanager.Window.getByID(message.winID);\r\n\r\n            // Don't execute listeners when the sender is the same as the listener:\r\n            if (fromWindow._id === windowmanager.Window.current._id) { return; }\r\n\r\n            listener.apply(fromWindow, message.args);\r\n            // TODO: Send response if response is expected\r\n        };\r\n    }\r\n\r\n    return {\r\n        send: (eventName, ...args) => {\r\n            const curWin = windowmanager.Window.current;\r\n            const message = {\r\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\r\n                winID: curWin._id,\r\n                event: eventName,\r\n                args: args // If the first arg is a window, it gets removed later.\r\n            };\r\n\r\n            if (args.length > 0 && args[0] instanceof Window) {\r\n                // Remove window from args in message:\r\n                const window = args.shift(); // args is by reference in message currently\r\n\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === curWin._id) { return; }\r\n\r\n                window._window.webContents.send(eventName, message);\r\n            } else {\r\n                for (const window of windowmanager.Window.getAll()) {\r\n                    if (window !== curWin) {\r\n                        window._window.webContents.send(eventName, message);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        on: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            const onMessage = wrapListener(window, listener);\r\n\r\n            if (window !== undefined) {\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === windowmanager.Window.current._id) { return; }\r\n\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                winLisGroup[eventName].set(listener, onMessage);\r\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\r\n                wrappedListeners[eventName].set(listener, onMessage);\r\n            }\r\n            ipcRenderer.on(eventName, onMessage);\r\n        },\r\n        off: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                ipcRenderer.removeListener(eventName, winLisGroup[eventName].delete(listener));\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                ipcRenderer.removeListener(eventName, wrappedListeners[eventName].get(listener));\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nreadySync._deref();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/renderer/index.js","import windowmanager from '../global';\r\nimport { EventHandler } from '../../../utils/index';\r\nimport { BoundingBox, Position, Size } from '../../../geometry/index';\r\nconst { ipcRenderer, remote } = window.nodeRequire('electron');\r\nconst url = window.nodeRequire('url');\r\nconst BrowserWindow = remote.BrowserWindow;\r\n\r\nconst currentWin = remote.getCurrentWindow();\r\nconst defaultConfig = {\r\n    width: 600,\r\n    height: 600,\r\n    frame: false,\r\n    resizable: true,\r\n    hasShadow: false,\r\n    icon: 'favicon.ico',\r\n    webPreferences: {\r\n        nodeIntegration: false,\r\n        preload: window.nodeRequire.windowmanagerPath\r\n    }\r\n};\r\nconst configMap = {\r\n    left: 'x',\r\n    top: 'y'\r\n};\r\nconst acceptedEventHandlers = [\r\n    'ready',\r\n    'drag-start', 'drag-before', 'drag-stop',\r\n    'dock-before',\r\n    'move', 'move-before',\r\n    'resize-before', 'close', 'minimize'];\r\n\r\nclass Window extends EventHandler {\r\n    constructor(config) {\r\n        // Call the parent constructor:\r\n        super(acceptedEventHandlers);\r\n\r\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\r\n        const isArgConfig = (config.webContents === undefined); // TODO: Improve checking of arguments.\r\n\r\n        if (isArgConfig) {\r\n            for (const prop in config) {\r\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\r\n                    config[configMap[prop]] = config[prop];\r\n                    delete config[prop];\r\n                }\r\n            }\r\n            for (const prop in defaultConfig) {\r\n                if (defaultConfig.hasOwnProperty(prop)) {\r\n                    config[prop] = config[prop] || defaultConfig[prop];\r\n                }\r\n            }\r\n            let _url = config.url;\r\n\r\n            delete config.url;\r\n\r\n            this._window = new BrowserWindow(config);\r\n            this._id = this._window.id;\r\n            config.title = config.title == null ? this._id : config.title;\r\n            // The following logic works like (in logical if-order):\r\n            //       1. If url has 'http' or 'file' at start, then use url, no modification.\r\n            //       2. If url has no '/', take location.href and remove all stuff up till last /, then append url.\r\n            //       3. If url has '/':\r\n            //          a. If location.href has 'http', extract the root url (domain) and append url.\r\n            //          b. If location.href has 'file', take remote.getGlobal('workingDir'), and then append url.\r\n            // Resolve url:\r\n            if (!/^(file|http)/i.test(_url)) {\r\n                if (_url[0] !== '/') {\r\n                    _url = url.resolve(location.href, _url); // TODO: Is this unsafe with '..'?\r\n                } else if (/^http/i.test(location.href)) {\r\n                    _url = location.origin + _url; // TODO: Safe?\r\n                } else if (/^file/i.test(location.href)) {\r\n                    _url = remote.getGlobal('workingDir') + _url; // TODO: Safe?\r\n                }\r\n                // If can\\'t determine url to load, then attempt to just load the url.\r\n            }\r\n            this._window.loadURL(_url);\r\n            this._window.setTitle(config.title);\r\n        } else {\r\n            this._window = config;\r\n            this._id = this._window.id;\r\n        }\r\n        windowmanager._windows.set(this._id, this);\r\n        this._window._ensureDockSystem();\r\n\r\n        // Setup _window event listeners:\r\n        // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\r\n        const thisWindow = this;\r\n\r\n        function _onmove() {\r\n            thisWindow.emit('move'); // TODO: Pass what position it is at.\r\n        }\r\n        this._window.on('move', _onmove);\r\n\r\n        function _onminimize() {\r\n            thisWindow.emit('minimize'); // TODO: Pass what position it is at.\r\n        }\r\n        this._window.on('minimize', _onminimize);\r\n\r\n        function _onclose() {\r\n            window.removeEventListener('unload', _oncurrclose); // eslint-disable-line no-use-before-define\r\n            windowmanager._windows.delete(thisWindow._id);\r\n            thisWindow._isClosed = true;\r\n            thisWindow.emit('close');\r\n            thisWindow._window = undefined;\r\n            // TODO: Clean up ALL listeners\r\n        }\r\n\r\n        function _oncurrclose() {\r\n            windowmanager._windows.delete(thisWindow._id);\r\n            thisWindow._window.removeListener('move', _onmove);\r\n            thisWindow._window.removeListener('close', _onclose);\r\n            thisWindow._window.removeListener('minimize', _onminimize);\r\n        }\r\n\r\n        // Register _oncurrclose when page changes or window closes to clean up listeners:\r\n        window.addEventListener('unload', _oncurrclose);\r\n\r\n        // If window isn't currentWin, execute local event listeners:\r\n        if (this._window !== currentWin) {\r\n            this._window.on('close', _onclose);\r\n        }\r\n\r\n        this._isClosed = false;\r\n        this._ready = true;\r\n        if (isArgConfig) { this._window._notifyReady(); }\r\n    }\r\n\r\n    isReady() {\r\n        return this._window !== undefined && !this._isClosed();\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\r\n        if (this.isReady()) { return callback.call(this); }\r\n\r\n        this.once('ready', callback);\r\n    }\r\n\r\n    isClosed() {\r\n        return this._isClosed;\r\n    }\r\n\r\n    getPosition() {\r\n        const pos = this._window.getPosition();\r\n\r\n        return new Position(pos[0], pos[1]);\r\n    }\r\n\r\n    getWidth() {\r\n        const size = this._window.getSize();\r\n\r\n        return size[0];\r\n    }\r\n\r\n    getHeight() {\r\n        const size = this._window.getSize();\r\n\r\n        return size[1];\r\n    }\r\n\r\n    getSize() {\r\n        const size = this._window.getSize();\r\n\r\n        return new Position(size[0], size[1]);\r\n    }\r\n\r\n    getBounds() {\r\n        const bounds = this._window.getBounds();\r\n\r\n        return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\r\n    }\r\n\r\n    getTitle() {\r\n        return this._window.getTitle();\r\n    }\r\n\r\n    setTitle(newTitle) {\r\n        if (!newTitle) { throw new Error('setTitle requires one argument of type String'); }\r\n        this._window.setTitle(newTitle);\r\n    }\r\n\r\n    isHidden() {\r\n        return !this.isShown();\r\n    }\r\n\r\n    isShown() {\r\n        return this._window.isVisible();\r\n    }\r\n\r\n    isMinimized() {\r\n        return this._window.isMinimized();\r\n    }\r\n\r\n    isMaximized() {\r\n        return this._window.isMaximized();\r\n    }\r\n\r\n    isRestored() {\r\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\r\n    }\r\n\r\n    close(callback) {\r\n        if (this.isClosed()) { return callback && callback(); }\r\n\r\n        this._window.close();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    minimize(callback) {\r\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\r\n\r\n        this._window._dockMinimize();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    maximize(callback) {\r\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\r\n\r\n        this._window.maximize();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    show(callback) {\r\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\r\n\r\n        this._window._dockShow();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    hide(callback) {\r\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\r\n\r\n        this._window._dockHide();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    restore(callback) {\r\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\r\n\r\n        this._window.restore();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    bringToFront(callback) {\r\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\r\n\r\n        this._window.setAlwaysOnTop(true);\r\n        this._window.setAlwaysOnTop(false);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    focus(callback) {\r\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\r\n\r\n        this._window.focus();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    resizeTo(width, height, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        const size = new Position(width, height);\r\n\r\n        this._window.setSize(size.left, size.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    moveTo(left, top, callback) {\r\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\r\n        const pos = new Position(left, top);\r\n\r\n        this._window._dockMoveTo(pos.left, pos.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    moveBy(deltaLeft, deltaTop, callback) {\r\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\r\n        const bounds = this.getBounds();\r\n        const deltaPos = new Position(deltaLeft, deltaTop);\r\n\r\n        this._window._dockMoveTo(bounds.left + deltaPos.left, bounds.top + deltaPos.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    setSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this._window.setSize(size.left, size.top);\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    setBounds(left, top, right, bottom, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        const bounds = new BoundingBox(left, top, right, bottom);\r\n\r\n        this._window.setBounds({\r\n            x: bounds.left,\r\n            y: bounds.top,\r\n            width: bounds.getWidth(),\r\n            height: bounds.getHeight()\r\n        });\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    dock(other) {\r\n        this._window.dock(other._window.id);\r\n    }\r\n\r\n    undock() {\r\n        this._window.undock();\r\n    }\r\n\r\n    static getAll() {\r\n        return Array.from(windowmanager._windows.values());\r\n    }\r\n\r\n    static getByID(id) {\r\n        return windowmanager._windows.get(id);\r\n    }\r\n\r\n    static getCurrent() {\r\n        return Window.current;\r\n    }\r\n}\r\n\r\n// Handle current window in this context:\r\nWindow.current = new Window(currentWin);\r\n\r\n(function () {\r\n    // Setup handlers on this window:\r\n    let wX = 0;\r\n    let wY = 0;\r\n    let dragging = false;\r\n\r\n    Window.current._window.on('focus', function () {\r\n        if (Window.current._window == null) { return; }\r\n\r\n        Window.current._window._dockFocus();\r\n    });\r\n\r\n    window.addEventListener('mousedown', function (event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            dragging = true;\r\n            wX = event.screenX;\r\n            wY = event.screenY;\r\n            Window.current._window._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mousemove', function (event) {\r\n        if (dragging) {\r\n            Window.current._window._dragBy(event.screenX - wX, event.screenY - wY);\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mouseup', function () {\r\n        dragging = false;\r\n        Window.current._window._dragStop();\r\n    });\r\n\r\n    // Add context menu:\r\n    let Menu = remote.Menu;\r\n    let MenuItem = remote.MenuItem;\r\n    let rightClickPosition = null;\r\n    let menu = new Menu();\r\n\r\n    menu.append(new MenuItem({\r\n        label: 'Reload',\r\n        accelerator: 'CmdOrCtrl+R',\r\n        click: function () {\r\n            Window.current._window.reload();\r\n        }\r\n    }));\r\n    menu.append(new MenuItem({\r\n        label: 'Reload app and restart children',\r\n        click: function () {\r\n            // Close ALL windows:\r\n            for (const window of windowmanager._windows.values()) {\r\n                window.close();\r\n            }\r\n            // Relaunch app:\r\n            remote.app.relaunch();\r\n            remote.app.exit(0);\r\n        }\r\n    }));\r\n    menu.append(new MenuItem({ type: 'separator' }));\r\n    menu.append(new MenuItem({\r\n        label: 'Inspect Element',\r\n        accelerator: 'CmdOrCtrl+Shift+I',\r\n        click: function () {\r\n            Window.current._window.inspectElement(rightClickPosition.x, rightClickPosition.y);\r\n        }\r\n    }));\r\n\r\n    window.addEventListener('contextmenu', function (event) {\r\n        event.preventDefault();\r\n        rightClickPosition = { x: event.x, y: event.y };\r\n        menu.popup(Window.current._window);\r\n    }, false);\r\n})();\r\n\r\nfunction resolveWindowWithID(id) {\r\n    let window = windowmanager._windows.get(id);\r\n\r\n    if (window) return window;\r\n\r\n    // Window isn't registered yet in windowmanager, so do so:\r\n    let electronWin = BrowserWindow.fromId(id);\r\n\r\n    if (electronWin !== null) {\r\n        return new Window(electronWin);\r\n    }\r\n}\r\n\r\n// Add other browser windows to global windows:\r\nfor (let other of BrowserWindow.getAllWindows()) {\r\n    resolveWindowWithID(other.id);\r\n}\r\n\r\nipcRenderer.on('window-create', function (event, otherID) {\r\n    windowmanager.emit('window-create', resolveWindowWithID(otherID));\r\n});\r\n\r\nwindowmanager.Window = Window;\r\nexport default Window;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/renderer/Window.js","/* global fin */\r\nimport windowmanager from './global';\r\nimport Window from './Window';\r\n\r\nconst APP_UUID = 'app_uuid';\r\n\r\nwindowmanager.messagebus = (() => {\r\n    let wrappedListeners = {};\r\n    let windowWrappedListeners = {};\r\n\r\n    function wrapListener(listener) {\r\n        return (message) => {\r\n            const window = Window.getByID(message.winID);\r\n\r\n            // Don't execute listeners when the sender is the same as the listener:\r\n            if (window._id === Window.current._id) { return; }\r\n\r\n            listener.apply(window, message.args);\r\n            // TODO: Send response if response is expected\r\n        };\r\n    }\r\n\r\n    return {\r\n        send: (eventName, ...args) => {\r\n            // TODO: Check if ready? Dunno if needed\r\n            const curWin = Window.current;\r\n            const message = {\r\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\r\n                winID: curWin._id,\r\n                event: eventName,\r\n                args: args // If the first arg is a window, it gets removed later.\r\n            };\r\n\r\n            if (args.length > 0 && args[0] instanceof Window) {\r\n                // Remove window from args in message:\r\n                const window = args.shift(); // args is by reference in message currently\r\n\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === curWin._id) { return; }\r\n\r\n                fin.desktop.InterApplicationBus.send(Window.current._window[APP_UUID], window._id,\r\n                                                        eventName, message);\r\n            } else {\r\n                // TODO: Possibly switch the below out for a loop through all windows?\r\n                fin.desktop.InterApplicationBus.send(Window.current._window[APP_UUID], eventName, message);\r\n            }\r\n        },\r\n        on: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            const onMessage = wrapListener(listener);\r\n\r\n            if (window !== undefined) {\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === Window.current._id) { return; }\r\n\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                winLisGroup[eventName].set(listener, onMessage);\r\n                fin.desktop.InterApplicationBus.subscribe(Window.current._window[APP_UUID], window._id,\r\n                                                            eventName, onMessage);\r\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\r\n                wrappedListeners[eventName].set(listener, onMessage);\r\n                fin.desktop.InterApplicationBus.subscribe(Window.current._window[APP_UUID], eventName, onMessage);\r\n            }\r\n        },\r\n        off: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                fin.desktop.InterApplicationBus.unsubscribe(Window.current._window[APP_UUID], window._window._id,\r\n                                                eventName, winLisGroup[eventName].delete(listener));\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                // delete on a Map returns the deleted value (desired onMessage):\r\n                fin.desktop.InterApplicationBus.unsubscribe(Window.current._window[APP_UUID], eventName,\r\n                                                            wrappedListeners[eventName].delete(listener));\r\n            }\r\n        }\r\n    };\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/index.js","/* global fin */\r\nimport windowmanager from '../../global';\r\nimport readySync from '../ready';\r\nimport { EventHandler } from '../../utils/index';\r\n\r\nwindowmanager.runtime.name = 'OpenFin';\r\nwindowmanager.runtime.version = undefined;\r\nwindowmanager.runtime.isOpenFin = true;\r\n\r\nlet setVersion = readySync.ref(function (version) {\r\n    windowmanager.runtime.version = version;\r\n});\r\n\r\nfin.desktop.main(readySync.ref(function () {\r\n    fin.desktop.System.getVersion(setVersion); // TODO: Handle errorCallback\r\n\r\n    let app = fin.desktop.Application.getCurrent();\r\n    let mainWindow = app.getWindow().contentWindow;\r\n\r\n    if (mainWindow === window) {\r\n        windowmanager.runtime.isMain = true;\r\n        windowmanager._internalBus = new EventHandler(Object.keys(windowmanager._eventListeners));\r\n        windowmanager._windows = new Map();\r\n    } // children get the above in the constructor of the Window.\r\n\r\n    // Wire the internal bus to emit events on windowmanager:\r\n    windowmanager._internalBus.addPipe(windowmanager);\r\n}));\r\n\r\n// This is used to store info across windows:\r\n// Everything on here gets exported as windowmanager.\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/global.js","/* global fin */\r\nimport windowmanager from './global';\r\nimport readySync from '../ready';\r\nimport { EventHandler, getUniqueWindowName, SyncCallback } from '../../utils/index';\r\nimport { BoundingBox, Position, Size, Vector } from '../../geometry/index';\r\n\r\nconst defaultConfig = {\r\n    defaultWidth: 600,\r\n    defaultHeight: 600,\r\n    frame: false,\r\n    resizable: true,\r\n    saveWindowState: false,\r\n    autoShow: true,\r\n    icon: location.href + 'favicon.ico'\r\n};\r\nconst configMap = {\r\n    title: 'name',\r\n    left: 'defaultLeft',\r\n    top: 'defaultTop',\r\n    width: 'defaultWidth',\r\n    height: 'defaultHeight'\r\n};\r\nconst acceptedEventHandlers = [\r\n    'ready',\r\n    'drag-start', 'drag-before', 'drag-stop',\r\n    'dock-before',\r\n    'move', 'move-before',\r\n    'resize-before', 'close', 'minimize'];\r\nlet currentWin;\r\n\r\nfunction _setupDOM() {\r\n    let thisWindow = this;\r\n\r\n    // TODO: Rewrite to remove setTimeout for the following:\r\n    function setWindows() {\r\n        if (thisWindow._window.contentWindow.windowmanager) {\r\n            thisWindow._window.contentWindow.windowmanager._windows = windowmanager._windows;\r\n            thisWindow._window.contentWindow.windowmanager._internalBus = windowmanager._internalBus;\r\n        } else {\r\n            setTimeout(setWindows, 5);\r\n        }\r\n    }\r\n    setWindows();\r\n\r\n    this._window.getBounds(function (bounds) {\r\n        bounds.right = bounds.left + bounds.width;\r\n        bounds.bottom = bounds.top + bounds.height;\r\n        thisWindow._bounds.set(new BoundingBox(bounds));\r\n    });\r\n\r\n    // Setup _window event listeners:\r\n    // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\r\n    function onBoundsChange(event) {\r\n        event.right = event.left + event.width;\r\n        event.bottom = event.top + event.height;\r\n        thisWindow._bounds.set(new BoundingBox(event));\r\n\r\n        if (event.changeType !== 0) {\r\n            thisWindow.undock(); // Undock on resize. TODO: Allow resize with docking\r\n        }\r\n        if (event.changeType !== 1) {\r\n            thisWindow.emit('move'); // TODO: Pass what position it is at.\r\n        }\r\n    }\r\n    this._window.addEventListener('bounds-changing', onBoundsChange);\r\n    this._window.addEventListener('bounds-changed', onBoundsChange);\r\n\r\n    function onClose() {\r\n        // TODO: Is it possible that onClose might not be called when the window is closed?\r\n        //       What if this event is set up on a window that has closed already, and then this window closes?\r\n        thisWindow._isClosed = true;\r\n        windowmanager._windows.delete(thisWindow._id);\r\n\r\n        // Undock:\r\n        thisWindow.undock();\r\n\r\n        // Move children to parent:\r\n        const parent = thisWindow.getParent();\r\n\r\n        for (const child of thisWindow.getChildren()) {\r\n            // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\r\n            // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\r\n            child.setParent(parent);\r\n        }\r\n        thisWindow.setParent(undefined); // Remove from parent\r\n\r\n        thisWindow.emit('close');\r\n        windowmanager._internalBus.emit('window-close', thisWindow);\r\n        thisWindow._window = undefined;\r\n        // TODO: Clean up ALL listeners\r\n    }\r\n    this._window.addEventListener('closed', onClose);\r\n\r\n    function onMinimized() {\r\n        thisWindow.emit('minimize');\r\n    }\r\n    this._window.addEventListener('minimized', onMinimized);\r\n\r\n    // Setup title element:\r\n    this._titleEl = this._window.contentWindow.document.createElement('title');\r\n    this._titleEl.innerText = this._title;\r\n    this._window.contentWindow.document.head.appendChild(this._titleEl);\r\n\r\n    this._ready = true;\r\n    this.emit('ready');\r\n    windowmanager._internalBus.emit('window-create', this);\r\n};\r\n\r\nclass Window extends EventHandler {\r\n    constructor(config) {\r\n        // Call the parent constructor:\r\n        super(acceptedEventHandlers);\r\n\r\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\r\n        const isArgConfig = (config.app_uuid === undefined);\r\n\r\n        // Setup private variables:\r\n        this._bounds = new BoundingBox();\r\n        this._ready = false;\r\n        // TODO: Identify current states.\r\n        this._isClosed = false;\r\n        this._isHidden = false;\r\n        this._isMinimized = false;\r\n        this._isMaximized = false;\r\n        this._dockedGroup = [this];\r\n        this._children = [];\r\n        this._parent = undefined;\r\n        this._title = undefined;\r\n\r\n        if (isArgConfig) {\r\n            for (const prop in config) {\r\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\r\n                    config[configMap[prop]] = config[prop];\r\n                    delete config[prop];\r\n                }\r\n            }\r\n            for (const prop in defaultConfig) {\r\n                if (defaultConfig.hasOwnProperty(prop)) {\r\n                    config[prop] = config[prop] || defaultConfig[prop];\r\n                }\r\n            }\r\n            this._id = getUniqueWindowName();\r\n            this._title = config.name == null ? this._id : config.name;\r\n            config.name = this._id; // Need name to be unique\r\n\r\n            if (config.parent) {\r\n                config.parent._children.push(this);\r\n                this._parent = config.parent;\r\n                // TODO: Emit event 'child-added' on parent\r\n                delete config.parent;\r\n            }\r\n\r\n            windowmanager._windows.set(this._id, this);\r\n            this._window = new fin.desktop.Window(config, _setupDOM.bind(this), function (err) {\r\n                console.error(err, config);\r\n            });\r\n        } else {\r\n            this._id = config._id || config.name;\r\n            this._title = this._id;\r\n            this._window = config;\r\n            windowmanager._windows.set(this._id, this);\r\n            _setupDOM.call(this);\r\n        }\r\n\r\n        // TODO: Ensure docking system\r\n    }\r\n\r\n    isReady() {\r\n        return this._ready;\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\r\n        if (this.isReady()) { return callback.call(this); }\r\n\r\n        this.once('ready', callback);\r\n    }\r\n\r\n    isClosed() {\r\n        return this._isClosed;\r\n    }\r\n\r\n    getPosition() {\r\n        return this._bounds.getPosition();\r\n    }\r\n\r\n    getWidth() {\r\n        return this._bounds.getWidth();\r\n    }\r\n\r\n    getHeight() {\r\n        return this._bounds.getHeight();\r\n    }\r\n\r\n    getSize() {\r\n        return this._bounds.getSize();\r\n    }\r\n\r\n    getBounds() {\r\n        return this._bounds.clone();\r\n    }\r\n\r\n    getParent() {\r\n        return this._parent;\r\n    }\r\n\r\n    setParent(parent) {\r\n        // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\r\n\r\n        if (parent === this._parent) { return; }\r\n\r\n        if (this._parent) {\r\n            const index = this._parent._children.indexOf(this);\r\n\r\n            if (index >= 0) { this._parent._children.splice(index, 1); }\r\n            // TODO: Emit event 'child-removed' on current parent.\r\n        }\r\n\r\n        if (parent) {\r\n            this._parent = parent;\r\n            this._parent._children.push(this);\r\n            // TODO: Emit event 'child-added on parent'.\r\n        }\r\n    }\r\n\r\n    getChildren() {\r\n        return this._children.slice();\r\n    }\r\n\r\n    addChild(child) {\r\n        child.setParent(this);\r\n    }\r\n\r\n    getTitle() {\r\n        return this._title;\r\n    }\r\n\r\n    setTitle(newTitle) {\r\n        if (!newTitle) { throw new Error('setTitle requires one argument of type String'); }\r\n        this._titleEl.innerText = this._title = newTitle;\r\n    }\r\n\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n\r\n    isShown() {\r\n        return !this._isHidden;\r\n    }\r\n\r\n    isMinimized() {\r\n        return this._isMinimized;\r\n    }\r\n\r\n    isMaximized() {\r\n        return this._isMaximized;\r\n    }\r\n\r\n    isRestored() {\r\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\r\n    }\r\n\r\n    close(callback) {\r\n        if (this.isClosed()) { return callback && callback(); }\r\n        this._window.close(callback);\r\n    }\r\n\r\n    minimize(callback) {\r\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isMinimized = true;\r\n            window._window.minimize(callback.ref());\r\n        }\r\n    }\r\n\r\n    maximize(callback) {\r\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\r\n\r\n        this._isMaximized = true;\r\n        this._window.maximize(callback);\r\n    }\r\n\r\n    show(callback) {\r\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isHidden = false;\r\n            window._window.show(callback.ref());\r\n        }\r\n    }\r\n\r\n    hide(callback) {\r\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isHidden = true;\r\n            window._window.hide(callback.ref());\r\n        }\r\n    }\r\n\r\n    restore(callback) {\r\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            window._isHidden = false;\r\n            window._isMinimized = false;\r\n            window._isMaximized = false;\r\n            window._window.restore(callback.ref());\r\n        }\r\n    }\r\n\r\n    bringToFront(callback) {\r\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\r\n        let thisWindow = this;\r\n\r\n        let beforeCallback = new SyncCallback(function () {\r\n            thisWindow._window.bringToFront(callback);\r\n        });\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) {\r\n                window._window.bringToFront(beforeCallback.ref());\r\n            }\r\n        }\r\n    }\r\n\r\n    focus(callback) {\r\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\r\n        let thisWindow = this;\r\n\r\n        let beforeCallback = new SyncCallback(function () {\r\n            thisWindow._window.focus(callback);\r\n        });\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) {\r\n                window._window.focus(beforeCallback.ref());\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeTo(width, height, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('resize-before')) { return; } // Allow preventing resize\r\n        let size = new Position(width, height);\r\n\r\n        this._window.resizeTo(size.left, size.top, 'top-left', callback);\r\n    }\r\n\r\n    moveTo(left, top, callback) {\r\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = (new Position(left, top)).subtract(this.getPosition());\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._bounds.moveTo(pos);\r\n            window._window.moveTo(pos.left, pos.top, callback.ref());\r\n        }\r\n    }\r\n\r\n    moveBy(deltaLeft, deltaTop, callback) {\r\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = new Position(deltaLeft, deltaTop);\r\n\r\n        callback = new SyncCallback(callback);\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._bounds.moveTo(pos);\r\n            window._window.moveTo(pos.left, pos.top, callback.ref());\r\n        }\r\n    }\r\n\r\n    setSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this._window.resizeTo(size.left, size.top, 'top-left', callback);\r\n    }\r\n\r\n    setBounds(left, top, right, bottom, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        let bounds = new BoundingBox(left, top, right, bottom);\r\n\r\n        this._window.setBounds(bounds.left, bounds.top, bounds.right, bounds.bottom, callback);\r\n    }\r\n\r\n    dock(other) {\r\n        if (!this.emit('dock-before')) { return; } // Allow preventing dock\r\n        if (other === undefined) { return; } // Failed to find other. TODO: Return error\r\n\r\n        // If other is already in the group, return:\r\n        if (this._dockedGroup.indexOf(other) >= 0) { return; }\r\n\r\n        // Loop through all windows in otherGroup and add them to this's group:\r\n        for (let otherWin of other._dockedGroup) {\r\n            this._dockedGroup.push(otherWin);\r\n            // Sharing the array between window objects makes it easier to manage:\r\n            otherWin._dockedGroup = this._dockedGroup;\r\n        }\r\n\r\n        // TODO: Check if otherGroup is touching\r\n    }\r\n\r\n    undock(other) {\r\n        // Check to see if window is already undocked:\r\n        if (this._dockedGroup.length === 1) { return; }\r\n\r\n        // Undock this:\r\n        this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\r\n        this._dockedGroup = [this];\r\n\r\n        // TODO: Redock those still touching, EXCEPT 'this'.\r\n    }\r\n\r\n    _dragStart() {\r\n        if (!this.emit('drag-start')) { return; } // Allow preventing drag\r\n        for (let window of this._dockedGroup) {\r\n            window._dragStartPos = window.getPosition();\r\n        }\r\n    }\r\n\r\n    _dragBy(deltaLeft, deltaTop) {\r\n        if (!this.emit('drag-before')) { return; } // Allow preventing drag\r\n        // Perform Snap:\r\n        const thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft,\r\n                                                    this._dragStartPos.top + deltaTop);\r\n        let snapDelta = new Vector(NaN, NaN);\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (other._dockedGroup !== this._dockedGroup) {\r\n                snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\r\n            }\r\n        }\r\n        deltaLeft += snapDelta.left || 0;\r\n        deltaTop += snapDelta.top || 0;\r\n\r\n        for (let other of this._dockedGroup) {\r\n            let pos = other._dragStartPos;\r\n\r\n            // If other doesn't have a drag position, start it:\r\n            if (pos === undefined) {\r\n                pos = other._dragStartPos = other.getPosition();\r\n                pos.left -= deltaLeft;\r\n                pos.top -= deltaTop;\r\n            }\r\n\r\n            other._window.moveTo(pos.left + deltaLeft, pos.top + deltaTop);\r\n        }\r\n    }\r\n\r\n    _dragStop() {\r\n        // Dock to those it snapped to:\r\n        const thisBounds = this.getBounds();\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (thisBounds.isTouching(other.getBounds())) {\r\n                this.dock(other);\r\n            }\r\n        }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            delete window._dragStartPos;\r\n        }\r\n\r\n        this.emit('drag-stop');\r\n    }\r\n\r\n    static getAll() {\r\n        return Array.from(windowmanager._windows.values());\r\n    }\r\n\r\n    static getByID(id) {\r\n        return windowmanager._windows.get(id);\r\n    }\r\n\r\n    static getCurrent() {\r\n        return Window.current;\r\n    }\r\n}\r\n\r\nfunction setupCurrentWindow() {\r\n    Window.current = windowmanager._windows.get(currentWin.name) || new Window(currentWin);\r\n\r\n    // Setup handlers on this window:\r\n    let wX = 0;\r\n    let wY = 0;\r\n    let dragging = false;\r\n\r\n    window.addEventListener('mousedown', function (event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            dragging = true;\r\n            wX = event.screenX;\r\n            wY = event.screenY;\r\n            Window.current._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mousemove', function (event) {\r\n        if (dragging) {\r\n            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mouseup', function () {\r\n        dragging = false;\r\n        Window.current._dragStop();\r\n    });\r\n}\r\n\r\n// Handle current window in this context:\r\n// TODO: Rewrite to remove setTimeout for the following:\r\nfin.desktop.main(readySync.ref(function () {\r\n    currentWin = fin.desktop.Window.getCurrent();\r\n    let currentReady = readySync.ref(setupCurrentWindow);\r\n\r\n    function getCurrent() {\r\n        if (windowmanager._windows) {\r\n            currentReady();\r\n        } else {\r\n            setTimeout(getCurrent, 5);\r\n        }\r\n    }\r\n    getCurrent();\r\n}));\r\n\r\nwindowmanager.Window = Window;\r\nexport default Window;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/Window.js","import windowmanager from './global';\r\nimport readySync from '../ready';\r\nimport Window from './Window';\r\n\r\n/**\r\n * Message bus for application.\r\n * @namespace\r\n * @alias MessageBus\r\n */\r\nwindowmanager.messagebus = (() => {\r\n    // TODO: Utilize iframe communication? Or use messagebus that is currently shared in setup.js?\r\n    let wrappedListeners = {};\r\n    let windowWrappedListeners = {};\r\n\r\n    window.addEventListener('message', function (event) {\r\n        const message = event.data;\r\n        const win = Window.getByID(message.winID);\r\n\r\n        // Don't execute listeners when the sender is the same as the listener:\r\n        if (win._id === Window.current._id) { return; }\r\n\r\n        if (windowWrappedListeners[message.event] != null) {\r\n            // Check to see if the called window is being listened to directly:\r\n            if (windowWrappedListeners[message.event][message.winID] != null) {\r\n                for (const listener of windowWrappedListeners[message.event][message.winID]) {\r\n                    listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\r\n                }\r\n            }\r\n        }\r\n        if (wrappedListeners[message.event] != null) {\r\n            for (const listener of wrappedListeners[message.event]) {\r\n                listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\r\n            }\r\n        }\r\n    }, false);\r\n\r\n    return {\r\n        /**\r\n         * @method\r\n         * @alias MessageBus.send\r\n         * @param {String} eventName - the event to send to\r\n         * @param {Window} [window=undefined] - the target window to send to (if not specified, sends to all windows)\r\n         * @param {...*} args Arguments to send to listeners\r\n         */\r\n        send: (eventName, ...args) => {\r\n            // TODO: Check if ready? Dunno if needed\r\n            // TODO: Do we need to add a way to identify if a return is needed?\r\n            const curWin = Window.current;\r\n            const message = {\r\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\r\n                winID: curWin._id,\r\n                event: eventName,\r\n                args: args // If the first arg is a window, it gets removed later.\r\n            };\r\n\r\n            if (args.length > 0 && args[0] instanceof Window) {\r\n                // Remove window from args in message:\r\n                const window = args.shift(); // args is by reference in message currently\r\n\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === curWin._id) { return; }\r\n                // TODO: Save the id of message so we can get the response\r\n                window._window.contentWindow.postMessage(message, '*');\r\n            } else {\r\n                for (const window of windowmanager._windows.values()) {\r\n                    if (curWin !== window) { // Don't send to current window\r\n                        window._window.contentWindow.postMessage(message, '*');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @method\r\n         * @alias MessageBus.on\r\n         * @param {String} eventName - the event to listen to\r\n         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n         */\r\n        on: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                // Don't execute listeners when the sender is the same as the listener:\r\n                if (window._id === Window.current._id) { return; }\r\n                // Replace window.name with some way to identify the unique window\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\r\n                winLisGroup[eventName].add(listener);\r\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                wrappedListeners[eventName].add(listener);\r\n            }\r\n        },\r\n        /**\r\n         * @method\r\n         * @alias MessageBus.off\r\n         * @param {String} eventName - the event to remove listener from\r\n         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\r\n         * @param {Function} listener - the callback function to call when event is triggered for this window\r\n         */\r\n        off: (eventName, window, listener) => {\r\n            if (listener === undefined) {\r\n                listener = window;\r\n                window = undefined;\r\n            }\r\n\r\n            if (window !== undefined) {\r\n                // Replace window.name with some way to identify the unique window\r\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\r\n\r\n                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\r\n                winLisGroup[eventName].delete(listener);\r\n            } else {\r\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\r\n                wrappedListeners[eventName].delete(listener);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n// Notify everyone that windowmanager is setup for this window:\r\nreadySync._deref();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/index.js","import windowmanager from '../../global';\r\nimport { EventHandler } from '../../utils/index';\r\n\r\nfunction getBrowserInfo() {\r\n    // Credit: http://www.gregoryvarghese.com/how-to-get-browser-name-and-version-via-javascript/\r\n    let ua = navigator.userAgent;\r\n    let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\r\n    let tem;\r\n\r\n    if (/trident/i.test(M[1])) {\r\n        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n        return { name: 'IE', version: (tem[1] || '') };\r\n    }\r\n    if (M[1] === 'Chrome') {\r\n        tem = ua.match(/\\bOPR\\/(\\d+)/);\r\n        if (tem !== null) { return { name: 'Opera', version: tem[1] }; }\r\n        tem = ua.match(/\\bedge\\/(\\d+)/i);\r\n        if (tem !== null) { return { name: 'Edge', version: tem[1] }; }\r\n    }\r\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\r\n    if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) { M.splice(1, 1, tem[1]); }\r\n    return {\r\n        name: M[0],\r\n        version: M[1]\r\n    };\r\n}\r\n\r\nlet browser = getBrowserInfo();\r\n\r\nwindowmanager.runtime.name = browser.name;\r\nwindowmanager.runtime.version = browser.version;\r\nwindowmanager.runtime.isBrowser = true;\r\nwindowmanager.runtime.isMain = (window.parent === window);\r\n\r\ntry {\r\n    window.parent.document;\r\n} catch (e) {\r\n    // If the above access errors out, it's due to CORS violation.\r\n    // So assume this JavaScript window is the top-level window:\r\n    windowmanager.runtime.isMain = true;\r\n}\r\n\r\nif (windowmanager.runtime.isMain) {\r\n    // This is the main/root window!\r\n    let nextZIndex = 1000; // TODO: Recycle Z-Indexes! In case of a (probably never) overflow!\r\n\r\n    windowmanager._launcher = window;\r\n    windowmanager._internalBus = new EventHandler(Object.keys(windowmanager._eventListeners));\r\n    windowmanager._windows = new Map();\r\n\r\n    windowmanager._getNextZIndex = () => {\r\n        nextZIndex += 1;\r\n        return nextZIndex;\r\n    };\r\n} else {\r\n    // This is a child window of root!\r\n    windowmanager._launcher = window.parent.windowmanager._launcher || window.parent;\r\n    windowmanager._internalBus = window.parent.windowmanager._internalBus;\r\n    windowmanager._windows = window.parent.windowmanager._windows;\r\n    windowmanager._getNextZIndex = window.parent.windowmanager._getNextZIndex;\r\n}\r\n\r\n// Wire the internal bus to emit events on windowmanager:\r\nwindowmanager._internalBus.addPipe(windowmanager);\r\n\r\n// This is used to store info across windows:\r\n// Everything on here gets exported as windowmanager.\r\nexport default windowmanager;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/global.js","import windowmanager from './global';\r\nimport { EventHandler, getUniqueWindowName } from '../../utils/index';\r\nimport { BoundingBox, Position, Size, Vector } from '../../geometry/index';\r\n\r\nconst defaultConfig = {\r\n    width: 600,\r\n    height: 600,\r\n    frame: false,\r\n    resizable: true,\r\n    saveWindowState: false,\r\n    autoShow: true,\r\n    icon: location.href + 'favicon.ico',\r\n    url: '.',\r\n    minWidth: 100,\r\n    minHeight: 100,\r\n    maxWidth: Infinity,\r\n    maxHeight: Infinity\r\n};\r\nconst configMap = {\r\n};\r\nconst acceptedEventHandlers = [\r\n    'ready',\r\n    'drag-start', 'drag-before', 'drag-stop',\r\n    'dock-before',\r\n    'move', 'move-before',\r\n    'resize-before', 'close', 'minimize'];\r\nconst transformPropNames = ['-ms-transform', '-moz-transform', '-o-transform',\r\n    '-webkit-transform', 'transform'];\r\n\r\n/**\r\n * @callback Callback\r\n * @param {string|null} error - String on error, or null if no error\r\n * @param {object|null} result - Object on success, or null if error\r\n */\r\n\r\n/**\r\n * A Window class.\r\n * @extends EventHandler\r\n */\r\nclass Window extends EventHandler {\r\n    /**\r\n     * Wraps a window object.\r\n     * @param {Object} config - Configuration\r\n     */\r\n    constructor(config) {\r\n        // Call the parent constructor:\r\n        super(acceptedEventHandlers);\r\n\r\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\r\n        const isArgConfig = !(config instanceof window.Window);\r\n\r\n        // Setup private variables:\r\n        this._ready = false;\r\n        // TODO: Identify current states.\r\n        this._isClosed = false;\r\n        this._isHidden = false;\r\n        this._isMinimized = false;\r\n        this._isMaximized = false;\r\n        this._dockedGroup = [this];\r\n        this._children = []; // TODO: Add way to remove or change heirarchy.\r\n        this._parent = undefined;\r\n        this._title = undefined;\r\n        this._id = getUniqueWindowName();\r\n\r\n        if (isArgConfig) {\r\n            for (const prop in config) {\r\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\r\n                    config[configMap[prop]] = config[prop];\r\n                    delete config[prop];\r\n                }\r\n            }\r\n            for (const prop in defaultConfig) {\r\n                if (defaultConfig.hasOwnProperty(prop)) {\r\n                    config[prop] = config[prop] || defaultConfig[prop];\r\n                }\r\n            }\r\n            this._title = config.title == null ? this._id : config.title;\r\n\r\n            if (config.parent) {\r\n                config.parent._children.push(this);\r\n                this._parent = config.parent;\r\n                // TODO: Emit event 'child-added' on parent\r\n                delete config.parent;\r\n            }\r\n\r\n            this._minSize = new BoundingBox(config.minWidth, config.minHeight);\r\n            this._maxSize = new BoundingBox(config.maxWidth, config.maxHeight);\r\n\r\n            let newWindow = windowmanager._launcher.document.createElement('iframe');\r\n\r\n            newWindow.src = config.url;\r\n            newWindow.style.position = 'absolute';\r\n            if (!Number.isFinite(config.left)) {\r\n                config.left = (windowmanager._launcher.innerWidth - config.width) / 2;\r\n            }\r\n            newWindow.style.left = config.left + 'px';\r\n            if (!Number.isFinite(config.top)) {\r\n                config.top = (windowmanager._launcher.innerHeight - config.height) / 2;\r\n            }\r\n            newWindow.style.top = config.top + 'px';\r\n            newWindow.style.width = config.width + 'px';\r\n            newWindow.style.height = config.height + 'px';\r\n            newWindow.style.minWidth = this._minSize.left + 'px';\r\n            newWindow.style.minHeight = this._minSize.top + 'px';\r\n            newWindow.style.maxWidth = this._maxSize.left + 'px';\r\n            newWindow.style.maxHeight = this._maxSize.top + 'px';\r\n            newWindow.style.margin = 0;\r\n            newWindow.style.padding = 0;\r\n            newWindow.style.border = 0;\r\n            newWindow.style.resize = 'both';\r\n            newWindow.style.overflow = 'auto';\r\n            windowmanager._launcher.document.body.appendChild(newWindow);\r\n\r\n            this._window = newWindow;\r\n            windowmanager._windows.set(this._id, this);\r\n            this._ready = true;\r\n            this.emit('ready');\r\n            windowmanager._internalBus.emit('window-create', this);\r\n            this.bringToFront();\r\n            this.focus();\r\n        } else {\r\n            this._minSize = new BoundingBox(defaultConfig.minWidth, defaultConfig.minHeight);\r\n            this._maxSize = new BoundingBox(defaultConfig.maxWidth, defaultConfig.maxHeight);\r\n            this._window = config.document.body;\r\n            windowmanager._windows.set(this._id, this);\r\n            this._ready = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the {@link Window} instance is created, not closed, and ready for method calls.\r\n     * @returns {Boolean}\r\n     */\r\n    isReady() {\r\n        return this._ready;\r\n    }\r\n\r\n    /**\r\n     * Calls a callback when window is ready and setup.\r\n     * @param {Callback=}\r\n     */\r\n    onReady(callback) {\r\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\r\n        if (this.isReady()) { return callback.call(this); }\r\n\r\n        this.once('ready', callback);\r\n    }\r\n\r\n    /**\r\n     * Returns whether window has been closed already.\r\n     * @returns {Boolean}\r\n     */\r\n    isClosed() {\r\n        return this._isClosed;\r\n    }\r\n\r\n    /**\r\n     * Returns window's current position.\r\n     * @returns {Vector}\r\n     */\r\n    getPosition() {\r\n        return new Position(this._window.getBoundingClientRect());\r\n    }\r\n\r\n    getMinWidth() {\r\n        return this._minSize.left;\r\n    }\r\n\r\n    /**\r\n     * Returns window's width.\r\n     * @returns {Number}\r\n     */\r\n    getWidth() {\r\n        return this._window.getBoundingClientRect().width;\r\n    }\r\n\r\n    getMaxWidth() {\r\n        return this._maxSize.left;\r\n    }\r\n\r\n    getMinHeight() {\r\n        return this._minSize.top;\r\n    }\r\n\r\n    /**\r\n     * Returns window's height.\r\n     * @returns {Number}\r\n     */\r\n    getHeight() {\r\n        return this._window.getBoundingClientRect().height;\r\n    }\r\n\r\n    getMaxHeight() {\r\n        return this._maxSize.top;\r\n    }\r\n\r\n    getMinSize() {\r\n        return this._minSize.clone();\r\n    }\r\n\r\n    /**\r\n     * Returns window's size.\r\n     * @returns {Size}\r\n     */\r\n    getSize() {\r\n        let box = this._window.getBoundingClientRect();\r\n\r\n        return new Size(box.width, box.height);\r\n    }\r\n\r\n    getMaxSize() {\r\n        return this._maxSize.clone();\r\n    }\r\n\r\n    /**\r\n     * Returns window's bounding box.\r\n     * @returns {BoundingBox}\r\n     */\r\n    getBounds() {\r\n        return new BoundingBox(this._window.getBoundingClientRect());\r\n    }\r\n\r\n    getParent() {\r\n        return this._parent;\r\n    }\r\n\r\n    setParent(parent) {\r\n        // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\r\n        if (parent === this._parent) { return; }\r\n\r\n        if (this._parent) {\r\n            const index = this._parent._children.indexOf(this);\r\n\r\n            if (index >= 0) { this._parent._children.splice(index, 1); }\r\n            // TODO: Emit event 'child-removed' on current parent.\r\n        }\r\n\r\n        if (parent) {\r\n            this._parent = parent;\r\n            this._parent._children.push(this);\r\n            // TODO: Emit event 'child-added on parent'.\r\n        }\r\n    }\r\n\r\n    getChildren() {\r\n        return this._children.slice();\r\n    }\r\n\r\n    addChild(child) {\r\n        child.setParent(this);\r\n    }\r\n\r\n    /**\r\n     * Returns window's title.\r\n     * @returns {String}\r\n     */\r\n    getTitle() {\r\n        return this._title;\r\n    }\r\n\r\n    /**\r\n     * Sets window's title.\r\n     * @param {String}\r\n     */\r\n    setTitle(title) {\r\n        if (!title) { throw new Error('setTitle requires one argument of type String'); }\r\n        this._title = title;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is hidden.\r\n     * @returns {Boolean}\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is not hidden.\r\n     * @returns {Boolean}\r\n     */\r\n    isShown() {\r\n        return !this._isHidden;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is minimized.\r\n     * @returns {Boolean}\r\n     */\r\n    isMinimized() {\r\n        return this._isMinimized;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is maximized.\r\n     * @returns {Boolean}\r\n     */\r\n    isMaximized() {\r\n        return this._isMaximized;\r\n    }\r\n\r\n    /**\r\n     * Returns true if window is not hidden or minimize or maximized.\r\n     * @returns {Boolean}\r\n     */\r\n    isRestored() {\r\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\r\n    }\r\n\r\n    /**\r\n     * Closes the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    close(callback) {\r\n        if (this.isClosed()) { return callback && callback(); }\r\n\r\n        this._window.parentElement.removeChild(this._window);\r\n        windowmanager._windows.delete(this._id);\r\n\r\n        // Undock:\r\n        this.undock();\r\n\r\n        // Move children to parent:\r\n        const parent = this.getParent();\r\n\r\n        for (const child of this.getChildren()) {\r\n            // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\r\n            // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\r\n            child.setParent(parent);\r\n        }\r\n        this.setParent(undefined); // Remove from parent\r\n\r\n        this._isClosed = true;\r\n        if (callback) { callback(); }\r\n        this.emit('close');\r\n        windowmanager._internalBus.emit('window-close', this);\r\n    }\r\n\r\n    /**\r\n     * Minimizes the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    minimize(callback) {\r\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\r\n\r\n        // TODO: What do we do on minimize in this runtime?\r\n        for (let window of this._dockedGroup) {\r\n            window._isMinimized = true;\r\n            window.emit('minimize');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Maximizes the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    maximize(callback) {\r\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\r\n\r\n        this._restoreBounds = this.getBounds();\r\n        this._window.style.left = 0;\r\n        this._window.style.top = 0;\r\n        this._window.style.width = '100%';\r\n        this._window.style.height = '100%';\r\n        this._isMaximized = true;\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Unhides the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    show(callback) {\r\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            window._window.style.display = '';\r\n            window._isHidden = false;\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Hides the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    hide(callback) {\r\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            window._window.style.display = 'none';\r\n            window._isHidden = true;\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Restores the window instance from the minimized or maximized states.\r\n     * @param {Callback=}\r\n     */\r\n    restore(callback) {\r\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window._isMaximized) {\r\n                window._window.style.left = window._restoreBounds.left + 'px';\r\n                window._window.style.top = window._restoreBounds.top + 'px';\r\n                window._window.style.width = window._restoreBounds.getWidth() + 'px';\r\n                window._window.style.height = window._restoreBounds.getHeight() + 'px';\r\n                window._isHidden = false;\r\n                window._isMinimized = false;\r\n                window._isMaximized = false;\r\n            }\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Brings the window instance to the front of all windows.\r\n     * @param {Callback=}\r\n     */\r\n    bringToFront(callback) {\r\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) {\r\n                window._window.style['z-index'] = windowmanager._getNextZIndex();\r\n            }\r\n        }\r\n        this._window.style['z-index'] = windowmanager._getNextZIndex();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Sets focus to the window instance.\r\n     * @param {Callback=}\r\n     */\r\n    focus(callback) {\r\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            if (window !== this) { window._window.contentWindow.focus(); }\r\n        }\r\n        this._window.contentWindow.focus();\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Resizes the window instance.\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {Callback=}\r\n     */\r\n    resizeTo(width, height, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('resize-before')) { return; } // Allow preventing resize\r\n        let size = new Position(width, height);\r\n\r\n        this.undock();\r\n        this._window.width = size.left + 'px';\r\n        this._window.height = size.top + 'px';\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Moves the window instance.\r\n     * @param {number} left\r\n     * @param {number} top\r\n     * @param {Callback=}\r\n     */\r\n    moveTo(left, top, callback) {\r\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = (new Position(left, top)).subtract(this.getPosition());\r\n\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._window.style.left = pos.left + 'px';\r\n            window._window.style.top = pos.top + 'px';\r\n        }\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Moves the window instance relative to its current position.\r\n     * @param {number} deltaLeft\r\n     * @param {number} deltaTop\r\n     * @param {Callback=}\r\n     */\r\n    moveBy(deltaLeft, deltaTop, callback) {\r\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\r\n        if (!this.emit('move-before')) { return; } // Allow preventing move\r\n        let deltaPos = new Position(deltaLeft, deltaTop);\r\n\r\n        for (let window of this._dockedGroup) {\r\n            let pos = window.getPosition().add(deltaPos);\r\n\r\n            window._window.style.left = pos.left + 'px';\r\n            window._window.style.top = pos.top + 'px';\r\n        }\r\n        if (callback) { callback(); }\r\n        for (let window of this._dockedGroup) {\r\n            window.emit('move');\r\n        }\r\n    }\r\n\r\n    setMinSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMinSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._minSize.left = size.left;\r\n        this._minSize.top = size.top;\r\n        this._window.style.minWidth = this._minSize.left + 'px';\r\n        this._window.style.minHeight = this._minSize.top + 'px';\r\n        if (this.getWidth() < size.left || this.getHeight() < size.top) {\r\n            // Resize window to meet new min size:\r\n            // TODO: Take into account transform?\r\n            this._window.style.width = Math.max(this.getWidth(), size.left) + 'px';\r\n            this._window.style.height = Math.max(this.getHeight(), size.top) + 'px';\r\n            if (callback) { callback(); }\r\n            this.emit('resize');\r\n        } else {\r\n            if (callback) { callback(); }\r\n        }\r\n    }\r\n\r\n    setSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, size.left)) + 'px';\r\n        this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, size.top)) + 'px';\r\n        // Clear transform:\r\n        for (let transformPropName of transformPropNames) {\r\n            this._window.style[transformPropName] = '';\r\n        }\r\n        if (callback) { callback(); }\r\n        this.emit('resize');\r\n    }\r\n\r\n    forceScaledSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\r\n        const size = new Size(Math.min(this._maxSize.left, Math.max(this._minSize.left, width)),\r\n                            Math.min(this._maxSize.top, Math.max(this._minSize.top, height)));\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._window.style.width = size.left + 'px';\r\n        this._window.style.height = size.top + 'px';\r\n        // TODO: Calc transform:\r\n        let transform = Math.min(width / size.left, height / size.top);\r\n\r\n        for (let transformPropName of transformPropNames) {\r\n            this._window.style[transformPropName] = 'scale(' + transform + ')';\r\n        }\r\n        if (callback) { callback(); }\r\n        this.emit('resize');\r\n    }\r\n\r\n    setMaxSize(width, height, callback) {\r\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\r\n        const size = new Size(width, height);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._maxSize.left = size.left;\r\n        this._maxSize.top = size.top;\r\n        this._window.style.maxWidth = this._maxSize.left + 'px';\r\n        this._window.style.maxHeight = this._maxSize.top + 'px';\r\n        if (this.getWidth() > size.left || this.getHeight() > size.top) {\r\n            // Resize window to meet new min size:\r\n            // TODO: Take into account transform?\r\n            this._window.style.width = Math.min(this.getWidth(), size.left) + 'px';\r\n            this._window.style.height = Math.min(this.getHeight(), size.top) + 'px';\r\n            // Clear transform:\r\n            for (let transformPropName of transformPropNames) {\r\n                this._window.style[transformPropName] = '';\r\n            }\r\n            if (callback) { callback(); }\r\n            this.emit('resize');\r\n        } else {\r\n            if (callback) { callback(); }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the bounds of the window instance.\r\n     * @param {number} left\r\n     * @param {number} top\r\n     * @param {number} right\r\n     * @param {number} bottom\r\n     * @param {Callback=}\r\n     */\r\n    setBounds(left, top, right, bottom, callback) {\r\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\r\n        let bounds = new BoundingBox(left, top, right, bottom);\r\n\r\n        this.undock(); // TODO: Support changing size when docked.\r\n        this._window.style.left = bounds.left + 'px';\r\n        this._window.style.top = bounds.top + 'px';\r\n        // TODO: Take into account transform?\r\n        this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, bounds.getWidth())) + 'px';\r\n        this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, bounds.getHeight())) + 'px';\r\n        // Clear transform:\r\n        for (let transformPropName of transformPropNames) {\r\n            this._window.style[transformPropName] = '';\r\n        }\r\n        // TODO: Events\r\n        if (callback) { callback(); }\r\n    }\r\n\r\n    /**\r\n     * Force docking this window to another. They don't need to be touching.\r\n     * @param {Window}\r\n     * @param {Callback=}\r\n     */\r\n    dock(other) {\r\n        // TODO: Check if otherGroup is touching\r\n        if (!this.emit('dock-before')) { return; } // Allow preventing dock\r\n        if (other === undefined) { return; } // Failed to find other. TODO: Return error\r\n\r\n        // If other is already in the group, return:\r\n        if (this._dockedGroup.indexOf(other) >= 0) { return; }\r\n\r\n        // Loop through all windows in otherGroup and add them to this's group:\r\n        for (let otherWin of other._dockedGroup) {\r\n            this._dockedGroup.push(otherWin);\r\n            // Sharing the array between window objects makes it easier to manage:\r\n            otherWin._dockedGroup = otherWin._dockedGroup;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Force undocking this window from it's group.<br>\r\n     * TODO: Redock those still touching, EXCEPT 'this'.\r\n     * @param {Window}\r\n     * @param {Callback=}\r\n     */\r\n    undock(other) {\r\n        // Check to see if window is already undocked:\r\n        if (this._dockedGroup.length === 1) { return; }\r\n\r\n        // Undock this:\r\n        this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\r\n        this._dockedGroup = [this];\r\n\r\n        // TODO: Redock those still touching, EXCEPT 'this'.\r\n    }\r\n\r\n    _dragStart() {\r\n        if (!this.emit('drag-start')) { return; } // Allow preventing drag\r\n        this.restore();\r\n        for (let window of this._dockedGroup) {\r\n            window._dragStartPos = window.getPosition();\r\n        }\r\n    }\r\n\r\n    _dragBy(deltaLeft, deltaTop) {\r\n        if (!this.emit('drag-before')) { return; } // Allow preventing drag\r\n        // Perform Snap:\r\n        const thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft,\r\n                                                    this._dragStartPos.top + deltaTop);\r\n        let snapDelta = new Vector(NaN, NaN);\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (other._dockedGroup !== this._dockedGroup) {\r\n                snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\r\n            }\r\n        }\r\n        deltaLeft += snapDelta.left || 0;\r\n        deltaTop += snapDelta.top || 0;\r\n\r\n        for (let other of this._dockedGroup) {\r\n            let pos = other._dragStartPos;\r\n\r\n            // If other doesn't have a drag position, start it:\r\n            if (pos === undefined) {\r\n                pos = other._dragStartPos = other.getPosition();\r\n                pos.left -= deltaLeft;\r\n                pos.top -= deltaTop;\r\n            }\r\n\r\n            other._window.style.left = (pos.left + deltaLeft) + 'px';\r\n            other._window.style.top = (pos.top + deltaTop) + 'px';\r\n            other.emit('move');\r\n        }\r\n    }\r\n\r\n    _dragStop() {\r\n        // Dock to those it snapped to:\r\n        const thisBounds = this.getBounds();\r\n\r\n        for (const other of windowmanager._windows.values()) {\r\n            if (thisBounds.isTouching(other.getBounds())) {\r\n                this.dock(other);\r\n            }\r\n        }\r\n\r\n        for (let window of this._dockedGroup) {\r\n            delete window._dragStartPos;\r\n        }\r\n\r\n        this.emit('drag-stop');\r\n    }\r\n\r\n    /**\r\n     * Returns a list of all {@link Window} instances open.\r\n     * @returns {Window[]}\r\n     */\r\n    static getAll() {\r\n        return Array.from(windowmanager._windows.values());\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link Window} instance that has `id`.\r\n     * @param {String|Number}\r\n     * @returns {Window|undefined}\r\n     */\r\n    static getByID(id) {\r\n        return windowmanager._windows.get(id);\r\n    }\r\n\r\n    /**\r\n     * Returns the {@link Window} instance that calls this function.\r\n     * @returns {Window}\r\n     */\r\n    static getCurrent() {\r\n        return Window.current;\r\n    }\r\n}\r\n\r\n// Add launcher to list of windows:\r\nif (windowmanager.runtime.isMain) {\r\n    window.document.body.contentWindow = window;\r\n    Window.current = new Window(window); // Force add launcher to window list\r\n} else {\r\n    // No need to do this for child windows, since _windows is shared across windows.\r\n    // Handle current window in this context:\r\n    Window.current = (function () {\r\n        for (let win of windowmanager._windows.values()) {\r\n            if (win._window.contentWindow === window) { return win; }\r\n        }\r\n    })();\r\n}\r\n\r\nif (!windowmanager.runtime.isMain) {\r\n    // Setup handlers on this child window:\r\n    let wX = 0;\r\n    let wY = 0;\r\n    let dragging = false;\r\n\r\n    window.addEventListener('focus', function () {\r\n        Window.current.bringToFront();\r\n    });\r\n\r\n    window.addEventListener('mousedown', function (event) {\r\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\r\n            dragging = true;\r\n            wX = event.screenX;\r\n            wY = event.screenY;\r\n            Window.current._dragStart();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mousemove', function (event) {\r\n        if (dragging) {\r\n            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mouseup', function () {\r\n        dragging = false;\r\n        Window.current._dragStop();\r\n    });\r\n}\r\n\r\nwindowmanager.Window = Window;\r\nexport default Window;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/Window.js"],"sourceRoot":""}