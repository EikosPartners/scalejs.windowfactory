if("undefined"!=typeof define&&define&&define("scalejs.windowfactory/geometry",[],function(){"use strict";function a(b,c){if(!(this instanceof a))return new a(b,c);var d=b;null!=d&&d.constructor!==Number?(this.left=d.left,this.top=d.top):(this.left=b,this.top=c)}function b(a,c,d,e){if(!(this instanceof b))return new b(a,c,d,e);var f=a;null!=f&&f.constructor!==Number?(null!=f.getBoundingBox&&(f=f.getBoundingBox()),this.left=f.left,this.top=f.top,this.right=f.right,this.bottom=f.bottom):(this.left=a,this.top=c,this.right=d,this.bottom=e)}function c(a,d){if(!(this instanceof c))return new c(a);if(d=d||{},null==a)throw"CollisionMesh constructor requires argument 'boxes'";a.constructor!==Array&&(a=[a]),this.boxes=[];for(var e=0;e<a.length;e+=1)a[e].constructor===b?this.boxes.push(a[e]):a[e].constructor===c?this.boxes=this.boxes.concat(a[e].boxes):this.boxes=this.boxes.concat(a[e].getCollisionMesh(d).boxes)}return a.prototype.clone=function(){return new a(this)},a.prototype.getVector=function(){return this},a.prototype.getBoundingBox=function(){return new b(this.left,this.top,this.left,this.top)},a.prototype.getCollisionMesh=function(){return new c(this.getBoundingBox())},a.prototype.distanceSquared=function(b,c){var d=new a(b,c),e=d.subtract(this);return e.left*e.left+e.top*e.top},a.prototype.distance=function(a,b){return Math.sqrt(this.distanceSquared(a,b))},a.prototype.set=function(b){if(null==b)throw"set requires argument 'other'";if(b=b.getVector(),b.constructor!==a)throw"set requires argument 'other' to resolve to type Vector";return this.left=b.left,this.top=b.top,this},a.prototype.add=function(b){if(null==b)throw"add requires argument 'other'";if(b=b.getVector(),b.constructor!==a)throw"add requires argument 'other' to resolve to type Vector";return this.left+=b.left,this.top+=b.top,this},a.prototype.subtract=function(b){if(null==b)throw"subtract requires argument 'other'";if(b=b.getVector(),b.constructor!==a)throw"subtract requires argument 'other' to resolve to type Vector";return this.left-=b.left,this.top-=b.top,this},a.prototype.moveTo=function(a,b){return null!=a&&a.constructor===Number&&(this.left=a),null!=b&&b.constructor===Number&&(this.top=b),this},b.prototype.clone=function(){return new b(this)},b.prototype.isNaN=function(){return isNaN(this.left)||isNaN(this.top)||isNaN(this.right)||isNaN(this.bottom)},b.prototype.getWidth=function(){return Math.abs(this.right-this.left)},b.prototype.getHeight=function(){return Math.abs(this.bottom-this.top)},b.prototype.getSize=function(){return new a(this.getWidth(),this.getHeight())},b.prototype.getArea=function(){return this.getWidth()*this.getHeight()},b.prototype.getPosition=function(){return new a(this.left,this.top)},b.prototype.getBoundingBox=function(){return this},b.prototype.getCollisionMesh=function(){return new c(this)},b.prototype.getCenterPosition=function(){return new a(this.left+this.getWidth()/2,this.top+this.getHeight()/2)},b.prototype.difference=function(a){if(null==a)throw"difference requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"difference requires argument 'other' to resolve to type BoundingBox";return b(this.left-a.left,this.top-a.top,this.right-a.right,this.bottom-a.bottom)},b.prototype.getCenteredOnPosition=function(a){if(null==a)throw"getCenteredOnPosition requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"getCenteredOnPosition requires argument 'other' to resolve to type BoundingBox";return a.getCenterPosition().subtract(this.getCenterPosition().subtract(this.getPosition()))},b.prototype.getIntersection=function(a){if(null==a)throw"getIntersection requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"getIntersection requires argument 'other' to resolve to type BoundingBox";var c=Math.max(this.left,a.left),d=Math.max(this.top,a.top),e=Math.min(this.right,a.right),f=Math.min(this.bottom,a.bottom);return e>c&&f>d||c===e&&f>d||d===f&&e>c?new b(c,d,e,f):c===e&&d===f?new Position(c,d):void 0},b.prototype.getDistanceSquaredToPoint=function(b,c){var d=new a(b,c),e=d.left<=this.left?this.left:d.left>=this.right?this.right:d.left,f=d.top<=this.top?this.top:d.top>=this.bottom?this.bottom:d.top,g=new a(e,f);return g.distanceSquared(d)},b.prototype.getDistanceToPoint=function(a,b){return Math.sqrt(this.getDistanceSquaredToPoint(a,b))},b.prototype.set=function(a,c,d,e){var f=new b(a,c,d,e);return null!=f.left&&(this.left=f.left),null!=f.top&&(this.top=f.top),null!=f.right&&(this.right=f.right),null!=f.bottom&&(this.bottom=f.bottom),this},b.prototype.moveTo=function(b,c){var d=new a(b,c);return null!=d.left&&(this.right=d.left+(this.right-this.left),this.left=d.left),null!=d.top&&(this.bottom=d.top+(this.bottom-this.top),this.top=d.top),this},b.prototype.moveBy=function(b,c){var d=new a(b,c);return null!=d.left&&(this.left+=d.left,this.right+=d.left),null!=d.top&&(this.top+=d.top,this.bottom+=d.top),this},b.prototype.resizeTo=function(b,c,d){var e=this.getSize(),f=new a(b||e.left,c||e.top);if(d=d||"top-left","string"==typeof d||d instanceof String){var g=d;d=this.getPosition(),g.indexOf("right")>=0&&(d.left+=e.left),g.indexOf("bottom")>=0&&(d.top+=e.top)}return this.left+=(d.left-this.left)*(e.left-f.left)/e.left,this.right+=(d.left-this.right)*(e.left-f.left)/e.left,this.top+=(d.top-this.top)*(e.top-f.top)/e.top,this.bottom+=(d.top-this.bottom)*(e.top-f.top)/e.top,this},b.prototype.isContains=function(a){if(null==a)throw"isContains requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isContains requires argument 'other' to resolve to type BoundingBox";return a.left>=this.left&&a.right<=this.right&&a.top>=this.top&&a.bottom<=this.bottom},b.prototype.someContains=function(a){if(null==a)throw"someContains requires argument 'others'";if(a.constructor!==Array)throw"someContains requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isContains(a[b]))return!0;return!1},b.prototype.isTouching=function(a){if(null==a)throw"isTouching requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isTouching requires argument 'other' to resolve to type BoundingBox";return this.top<=a.bottom&&this.bottom>=a.top&&(this.left===a.right||this.right===a.left)||this.left<=a.right&&this.right>=a.left&&(this.top===a.bottom||this.bottom===a.top)},b.prototype.getEdgeTouching=function(a){if(null==a)throw"getEdgeTouching requires argument 'others'";a.constructor!==Array&&(a=[a]);for(var b=0;b<a.length;b+=1){var c=a[b].getBoundingBox();if(this.top<=c.bottom&&this.bottom>=c.top){if(this.left===c.right)return"left";if(this.right===c.left)return"right"}if(this.left<=c.right&&this.right>=c.left){if(this.top===c.bottom)return"top";if(this.bottom===c.top)return"bottom"}}},b.prototype.getOtherEdgeTouching=function(a){if(null==a)throw"getOtherEdgeTouching requires argument 'others'";a.constructor!==Array&&(a=[a]);for(var b=0;b<a.length;b+=1){var c=a[b].getBoundingBox();if(this.top<=c.bottom&&this.bottom>=c.top){if(this.left===c.right)return"right";if(this.right===c.left)return"left"}if(this.left<=c.right&&this.right>=c.left){if(this.top===c.bottom)return"bottom";if(this.bottom===c.top)return"top"}}},b.prototype.getEdgeClosestOrder=function(a){if(null==a)throw"getEdgeClosest requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"getEdgeClosest requires argument 'other' to resolve to type BoundingBox";var c=this.getCenterPosition(),d=[];return d.push({edge:"left",dis:a.getDistanceSquaredToPoint(this.left,c.top)}),d.push({edge:"top",dis:a.getDistanceSquaredToPoint(c.left,this.top)}),d.push({edge:"right",dis:a.getDistanceSquaredToPoint(this.right,c.top)}),d.push({edge:"bottom",dis:a.getDistanceSquaredToPoint(c.left,this.bottom)}),d.sort(function(a,b){return a.dis-b.dis}),d.map(function(a){return a.edge})},b.prototype.getEdgeClosest=function(a){var b=this.getEdgeClosestOrder(a);return b[0]},b.prototype.someTouching=function(a){if(null==a)throw"someTouching requires argument 'others'";if(a.constructor!==Array)throw"someTouching requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isTouching(a[b]))return!0;return!1},b.prototype.isColliding=function(a){if(null==a)throw"isColliding requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isColliding requires argument 'other' to resolve to type BoundingBox";return this.left<a.right&&this.right>a.left&&this.top<a.bottom&&this.bottom>a.top},b.prototype.someColliding=function(a){if(null==a)throw"someColliding requires argument 'others'";if(a.constructor!==Array)throw"someColliding requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isColliding(a[b]))return!0;return!1},b.prototype.getColliding=function(a){if(null==a)throw"getColliding requires argument 'others'";if(a.constructor!==Array)throw"getColliding requires argument 'others' of type Array";for(var b=0;b<a.length;b+=1)if(this.isColliding(a[b]))return a[b]},b.prototype.isTouchingEdge=function(a){if(null==a)throw"isTouchingEdge requires argument 'other'";if(a=a.getBoundingBox(),a.constructor!==b)throw"isTouchingEdge requires argument 'other' to resolve to type BoundingBox";return this.left===a.right||this.right===a.left||this.top===a.bottom||this.bottom===a.top},c.prototype.clone=function(){for(var a=[],b=0;b<this.boxes;b+=1)a[b]=this.boxes[b].clone();return new c(a)},c.prototype.getWidth=function(){if(0===this.boxes.length)return 0;for(var a=this.boxes[0].left,b=this.boxes[0].right,c=1;c<this.boxes.length;c+=1)a=Math.min(a,this.boxes[c].left),b=Math.max(b,this.boxes[c].right);return b-a},c.prototype.getHeight=function(){if(0===this.boxes.length)return 0;for(var a=this.boxes[0].top,b=this.boxes[0].bottom,c=1;c<this.boxes.length;c+=1)a=Math.min(a,this.boxes[c].top),b=Math.max(b,this.boxes[c].bottom);return b-a},c.prototype.getSize=function(){return new a(this.getWidth(),this.getHeight())},c.prototype.getPosition=function(){return new a(this.getBoundingBox())},c.prototype.getBoundingBox=function(){if(0===this.boxes.length)return 0;for(var a=this.boxes[0].left,c=this.boxes[0].top,d=this.boxes[0].right,e=this.boxes[0].bottom,f=1;f<this.boxes.length;f+=1)a=Math.min(a,this.boxes[f].left),c=Math.min(c,this.boxes[f].top),d=Math.max(d,this.boxes[f].right),e=Math.max(e,this.boxes[f].bottom);return new b(a,c,d,e)},c.prototype.getCollisionMesh=function(){return this},c.prototype.moveTo=function(b,c){var d=new a(b,c);return this.moveBy(d.subtract(this.getPosition())),this},c.prototype.moveBy=function(b,c){for(var d=new a(b||0,c||0),e=0;e<this.boxes.length;e+=1)this.boxes[e].moveBy(d);return this},c.prototype.isContains=function(a){if(null==a)throw"isContains requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"isContains requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1)if(this.boxes[b].someContains(a.boxes))return!0;return!1},c.prototype.someContains=function(a){if(null==a)throw"someContains requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"someContains requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1)if(this.boxes[b].someContains(a.boxes))return!0;return!1},c.prototype.isTouching=function(a){if(null==a)throw"isTouching requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"isTouching requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1)if(this.boxes[b].someTouching(a.boxes))return!0;return!1},c.prototype.someTouching=function(a){if(null==a)throw"someTouching requires argument 'others'";if(a.constructor!==Array)throw"someTouching requires argument 'others' to resolve to type Array";for(var b=0;b<a.length;b+=1)if(this.isTouching(a[b]))return!0;return!1},c.prototype.isColliding=function(a){if(null==a)throw"isColliding requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"isColliding requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1)if(this.boxes[b].someColliding(a.boxes))return!0;return!1},c.prototype.someColliding=function(a){if(null==a)throw"someColliding requires argument 'others'";if(a.constructor!==Array)throw"someColliding requires argument 'others' to resolve to type Array";for(var b=0;b<a.length;b+=1)for(var c=0;c<this.boxes.length;c+=1)if(this.boxes[c].isColliding(a[b]))return!0;return!1},c.prototype.getColliding=function(a){if(null==a)throw"getColliding requires argument 'other'";if(a=a.constructor===Array?new c(a):a.getCollisionMesh(),a.constructor!==c)throw"getColliding requires argument 'other' to resolve to type CollisionMesh";for(var b=0;b<this.boxes.length;b+=1){var d=this.boxes[b].getColliding(a.boxes);if(d)return d}},{Vector:a,Position:a,Size:a,BoundingBox:b,CollisionMesh:c}}),"undefined"!=typeof define&&define&&define("scalejs.windowfactory/electron/Window",["../geometry"],function(a){"use strict";function b(a){if(!(this instanceof b))return new b(a);null==a&&(a={});var c=null==a.webContents;if(c){for(var d in g)null==a[d]&&(a[d]=g[d]);this._window=new f(a),this._ready=!0}else this._window=a,this._ready=!0}if("undefined"!=typeof nodeRequire&&nodeRequire&&nodeRequire.electron){const c=(a.Vector,a.Position),d=(a.Size,a.BoundingBox),e=nodeRequire("electron").remote,f=e.BrowseWindow,g={width:600,height:600,frame:!1,resizable:!1,hasShadow:!1};return g.__proto__=null,b.prototype.getPosition=function(){var a=this._window.getPosition();return new c(a[0],a[1])},b.prototype.getWidth=function(){var a=this._window.getSize();return a[0]},b.prototype.getHeight=function(){var a=this._window.getSize();return a[1]},b.prototype.getSize=function(){var a=this._window.getSize();return new c(a[0],a[1])},b.prototype.getBounds=function(){var a=this._window.getBounds();return new d(a.x,a.y,a.x+a.width,a.y+a.height)},b.prototype.close=function(a){this._window.close(),a&&a()},b.prototype.minimize=function(){if(!this._ready)throw"minimize can't be called on an unready window";this._window.minimize(),callback&&callback()},b.prototype.maximize=function(){if(!this._ready)throw"maximize can't be called on an unready window";this._window.maximize(),callback&&callback()},b.prototype.show=function(){if(!this._ready)throw"show can't be called on an unready window";this._window.show(),callback&&callback()},b.prototype.hide=function(){if(!this._ready)throw"hide can't be called on an unready window";this._window.hide(),callback&&callback()},b.prototype.restore=function(){if(!this._ready)throw"restore can't be called on an unready window";this._window.restore(),callback&&callback()},b.prototype.bringToFront=function(){if(!this._ready)throw"bringToFront can't be called on an unready window";this._window.setAlwaysOnTop(!0),this._window.setAlwaysOnTop(!1),callback&&callback()},b.prototype.focus=function(){if(!this._ready)throw"focus can't be called on an unready window";this._window.focus(),callback&&callback()},b.prototype.resizeTo=function(a,b,d){if(!this._ready)throw"resizeTo can't be called on an unready window";var e=new c(a,b);this._window.setSize(e.left,e.top),d&&d()},b.prototype.moveTo=function(a,b,d){if(!this._ready)throw"moveTo can't be called on an unready window";new c(a,b);this._window.setPosition(a,b),d&&d()},b.prototype.moveBy=function(a,b,d){if(!this._ready)throw"moveBy can't be called on an unready window";var e=this.getBounds(),f=new c(a,b);this._window.setPosition(e.left+f.left,e.top+f.top),d&&d()},b.prototype.setBounds=function(a,b,c,e,f){if(!this._ready)throw"resizeTo can't be called on an unready window";new d(a,b,c,e);this._window.setSize({x:a,y:b,width:c-a,height:e-b}),f&&f()},b}}),"undefined"!=typeof define&&define&&define("scalejs.windowfactory/electron/windowfactory",["./Window"],function(a){"use strict";function b(){return d}if("undefined"!=typeof nodeRequire&&nodeRequire&&nodeRequire.electron){const c=nodeRequire("electron").remote;var d=new a(c.getCurrentWindow());return function(){var a=0,b=0,c=!1;window.addEventListener("mousedown",function(d){d.target.classList.contains("window-drag")&&(c=!0,a=d.pageX,b=d.pageY)}),window.addEventListener("mousemove",function(e){c&&d.moveTo(e.screenX-a,e.screenY-b)}),window.addEventListener("mouseup",function(){c=!1})}(),{Window:a,getCurrentWindow:b,runtime:"Electron",runtimeVersion:nodeRequire.electron}}}),"undefined"!=typeof define&&define&&define("scalejs.windowfactory/openfin/Window",["../geometry"],function(a){"use strict";function b(){function a(a){b._bounds.set(a.left,a.top,a.left+a.width,a.top+a.height)}var b=this;this._window.getBounds(function(a){b._bounds.set(a.left,a.top,a.left+a.width,a.top+a.height)}),this._window.addEventListener("bounds-changing",a),this._window.addEventListener("bounds-changed",a),this._ready=!0}function c(a){if(!(this instanceof c))return new c(a);null==a&&(a={});var d=null==a.app_uuid;if(this._bounds=new e,d){for(var h in f)null==a[h]&&(a[h]=f[h]);for(var h in a)void 0!==g[h]&&(a[g[h]]=a[h],delete a[h]);this._window=new fin.desktop.Window(a,b.bind(this),function(b){console.error(b,a)})}else this._window=a,b.call(this)}if("undefined"!=typeof fin&&fin&&fin.desktop&&fin.desktop.getVersion()){var d=(a.Vector,a.Position),e=(a.Size,a.BoundingBox),f={width:600,height:600,frame:!1,resizable:!1,saveWindowState:!1};f.__proto__=null;var g={width:"defaultWidth",height:"defaultHeight"};return g.__proto__=null,c.prototype.getPosition=function(){return this._bounds.getPosition()},c.prototype.getWidth=function(){return this._bounds.getWidth()},c.prototype.getHeight=function(){return this._bounds.getHeight()},c.prototype.getSize=function(){return this._bounds.getSize()},c.prototype.getBounds=function(){return this._bounds.clone()},c.prototype.close=function(a){this._window.close(a)},c.prototype.minimize=function(a){if(!this._ready)throw"minimize can't be called on an unready window";this._window.minimize(a)},c.prototype.maximize=function(a){if(!this._ready)throw"maximize can't be called on an unready window";this._window.maximize(a)},c.prototype.show=function(a){if(!this._ready)throw"show can't be called on an unready window";this._window.show(a)},c.prototype.hide=function(a){if(!this._ready)throw"hide can't be called on an unready window";this._window.hide(a)},c.prototype.restore=function(a){if(!this._ready)throw"restore can't be called on an unready window";this._window.restore(a)},c.prototype.bringToFront=function(a){if(!this._ready)throw"bringToFront can't be called on an unready window";this._window.bringToFront(a)},c.prototype.focus=function(a){if(!this._ready)throw"focus can't be called on an unready window";this._window.focus(a)},c.prototype.resizeTo=function(a,b,c){if(!this._ready)throw"resizeTo can't be called on an unready window";var e=new d(a,b);this._window.resizeTo(e.left,e.top,"top-left",c)},c.prototype.moveTo=function(a,b,c){if(!this._ready)throw"moveTo can't be called on an unready window";var e=new d(a,b);this._window.setPosition(e.left,e.top,c)},c.prototype.moveBy=function(a,b,c){if(!this._ready)throw"moveBy can't be called on an unready window";var e=this.getBounds(),f=new d(a,b);this._window.setPosition(e.left+f.left,e.top+f.top,c)},c.prototype.setBounds=function(a,b,c,d,f){if(!this._ready)throw"resizeTo can't be called on an unready window";var g=new e(a,b,c,d);this._window.setBounds(g.left,g.top,g.right,g.bottom,f)},c}}),"undefined"!=typeof define&&define&&define("scalejs.windowfactory/openfin/windowfactory",["./Window"],function(a){"use strict";function b(){return c}if("undefined"!=typeof fin&&fin&&fin.desktop&&fin.desktop.getVersion()){var c=new a(fin.desktop.Window.getCurrent());return function(){var a=0,b=0,d=!1;window.addEventListener("mousedown",function(c){c.target.classList.contains("window-drag")&&(d=!0,a=c.pageX,b=c.pageY)}),window.addEventListener("mousemove",function(e){d&&c.moveTo(e.screenX-a,e.screenY-b)}),window.addEventListener("mouseup",function(){d=!1})}(),{getCurrentWindow:b,runtime:"OpenFin",runtimeVersion:fin.desktop.getVersion()}}}),"undefined"!=typeof define&&define)define("scalejs.windowfactory",["scalejs!core","./scalejs.windowfactory/electron/windowfactory","./scalejs.windowfactory/openfin/windowfactory"],function(a,b,c){"use strict";var d=b||c;return a.registerExtension({windowfactory:d}),"undefined"!=typeof window&&window&&(window.windowfactory=d),"undefined"!=typeof global&&global&&(global.windowfactory=d),d});else if("undefined"!=typeof process&&process){require.electron=process.versions.electron;const _require=require;process.once("loaded",function(){global.nodeRequire=_require})}