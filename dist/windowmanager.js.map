{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 46861d18feb3ef3517f1","webpack:///./src/index.js","webpack:///./src/global.js","webpack:///./src/utils/index.js","webpack:///./src/utils/EventHandler.js","webpack:///./src/utils/SyncCallback.js","webpack:///./src/geometry/index.js","webpack:///./src/geometry/Vector.js","webpack:///./src/geometry/BoundingBox.js","webpack:///./src/geometry/CollisionMesh.js","webpack:///./src/runtime/index.js","webpack:///./src/runtime/ready.js","webpack:///./src/runtime/electron/index.js","webpack:///./src/runtime/electron/global.js","webpack:///./src/runtime/electron/require.js","webpack:///./src/runtime/electron/node/index.js","webpack:///./src/runtime/electron/node/Window.js","webpack:///./src/runtime/electron/renderer/index.js","webpack:///./src/runtime/electron/renderer/Window.js","webpack:///./src/runtime/openfin/index.js","webpack:///./src/runtime/openfin/global.js","webpack:///./src/runtime/openfin/Window.js","webpack:///./src/runtime/browser/index.js","webpack:///./src/runtime/browser/global.js","webpack:///./src/runtime/browser/Window.js"],"names":["global","windowmanager","window","windowmanagerEventNames","version","runtime","name","undefined","isBrowser","isElectron","isOpenFin","isDesktop","isMobile","isMain","navigator","a","test","substr","userAgent","vendor","opera","geometry","genUIDE7","lut","i","toString","d0","Math","random","d1","d2","d3","getUniqueWindowName","Date","getTime","EventHandler","SyncCallback","acceptedEventHandlers","_eventListeners","_eventPipes","acceptedEventHandler","prototype","on","eventNames","eventListener","toLowerCase","split","eventName","constructor","Error","indexOf","push","once","onceListener","off","apply","arguments","index","splice","clearEvent","emit","args","returnVal","eventHandler","addPipe","removePipe","callback","count","ref","thisRef","_deref","BoundingBox","CollisionMesh","Position","Size","Vector","left","top","obj","Number","isNaN","getBoundingBox","other","diff","subtract","sqrt","distanceSquared","getVector","deltaLeft","deltaTop","abs","minAbs","min","vals","val","argAbs","right","bottom","getWidth","getHeight","getCenterPosition","getPosition","max","cLeft","cTop","cPos","getDistanceSquaredToPoint","width","height","anchor","curSize","getSize","newSize","String","anchorStr","others","Array","length","isContains","centerPos","dis","sort","b","map","edge","edges","getEdgeClosestOrder","snapDistance","snapDelta","NaN","leftRightDis","topBottomDis","isTouching","isColliding","boxes","opts","box","concat","getCollisionMesh","clone","newPosition","moveBy","otherBox","contained","thisBox","someContains","someTouching","someColliding","collided","getColliding","process","versions","electron","nodeRequire","require","fin","desktop","main","callbacks","isReady","onReady","call","_isNode","_isRenderer","_isStartup","BrowserWindow","_require","workingDir","dirname","filename","windowmanagerPath","__filename","_windows","Map","eval","_notifyReady","getAllWindows","webContents","send","id","_ensureDockSystem","_dockedGroup","undock","_dockMinimize","restore","lastBounds","getBounds","newBounds","dock","otherID","fromId","otherWin","_dockFocus","setAlwaysOnTop","_dragStart","_dragStartPos","_getBounds","bounds","x","y","_dragBy","thisBounds","moveTo","setMin","getSnapDelta","pos","setPosition","_dragStop","_dockMoveTo","oldPos","minimize","_dockHide","hide","_dockShow","show","ipcRenderer","messagebus","wrappedListeners","windowWrappedListeners","wrapListener","listener","_","message","_id","winID","fromWindow","Window","getByID","current","curWin","event","shift","_window","getAll","onMessage","winLisGroup","set","removeListener","delete","Set","get","remote","url","currentWin","getCurrentWindow","defaultConfig","frame","resizable","hasShadow","icon","webPreferences","nodeIntegration","preload","configMap","config","isArgConfig","prop","hasOwnProperty","_url","title","resolve","location","href","origin","getGlobal","loadURL","setTitle","thisWindow","_onmove","_onminimize","_onclose","removeEventListener","_oncurrclose","_isClosed","addEventListener","_ready","isClosed","size","getTitle","newTitle","isShown","isVisible","isMinimized","isMaximized","close","maximize","focus","setSize","deltaPos","setBounds","from","values","wX","wY","dragging","onDragStart","target","classList","contains","preventDefault","screenX","screenY","touches","onDragEnd","Menu","MenuItem","rightClickPosition","menu","append","label","accelerator","click","reload","app","relaunch","exit","type","inspectElement","popup","resolveWindowWithID","electronWin","APP_UUID","InterApplicationBus","subscribe","unsubscribe","setVersion","System","getVersion","Application","getCurrent","mainWindow","getWindow","contentWindow","_internalBus","Object","keys","defaultWidth","defaultHeight","saveWindowState","autoShow","_setupDOM","setWindows","setTimeout","_bounds","onBoundsChange","changeType","onClose","parent","getParent","getChildren","child","setParent","onMinimized","_titleEl","document","createElement","innerText","_title","head","appendChild","app_uuid","_isHidden","_isMinimized","_isMaximized","_children","_parent","bind","err","console","error","slice","beforeCallback","bringToFront","resizeTo","add","setupCurrentWindow","currentReady","data","win","postMessage","getBrowserInfo","ua","M","match","tem","exec","appName","appVersion","browser","e","nextZIndex","_Map","_map","create","key","value","_launcher","_getNextZIndex","minWidth","minHeight","maxWidth","Infinity","maxHeight","transformPropNames","_minSize","_maxSize","newWindow","src","style","position","isFinite","innerWidth","innerHeight","margin","padding","border","resize","overflow","body","getBoundingClientRect","parentElement","removeChild","_restoreBounds","display","transformPropName","transform"],"mappings":"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","file":"windowmanager.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"windowmanager\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"windowmanager\"] = factory();\n\telse\n\t\troot[\"windowmanager\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 46861d18feb3ef3517f1","import windowmanager from './global';\nimport './runtime/index';\n\n// Make windowmanager global:\nif (typeof global !== 'undefined' && global) { global.windowmanager = windowmanager; }\nif (typeof window !== 'undefined' && window) { window.windowmanager = windowmanager; }\n\nexport default windowmanager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* global VERSION */\nimport { EventHandler } from './utils/index';\nimport geometry from './geometry/index';\n\nconst windowmanagerEventNames = ['window-create', 'window-close'];\n\n/**\n * A global variable exposed on windows to access the windowmanager-related API.\n * @namespace\n * @extends EventHandler\n * @property {String} version - version of windowmanager\n * @property {Object} runtime - contains runtime-specific info\n * @property {String} runtime.name - name of runtime (ie. Chrome, IE, OpenFin, Electron, ect)\n * @property {String} runtime.version\n * @property {Boolean} runtime.isBrowser - is this running in a browser\n * @property {Boolean} runtime.isElectron - is this running in Electron\n * @property {Boolean} runtime.isOpenFin - is this running in OpenFin\n * @property {Boolean} runtime.isDesktop - is this a desktop OS\n * @property {Boolean} runtime.isMobile - is this a mobile OS\n * @property {Boolean} runtime.isMain - is this the main/startup window (Electron doesn't have one atm)\n * @property {Window} Window\n * @property {geometry} geometry\n * @property {messagebus} messagebus - message bus for application\n */\nlet windowmanager = new EventHandler(windowmanagerEventNames);\n\nwindowmanager.version = VERSION;\n// runtime is set in the respective runtime\nwindowmanager.runtime = {\n    name: undefined,\n    version: undefined,\n    isBrowser: false,\n    isElectron: false,\n    isOpenFin: false,\n    isDesktop: false,\n    isMobile: false,\n    isMain: false\n};\n\n// Credit: http://stackoverflow.com/a/11381730\nif (typeof navigator !== 'undefined') {\n    /* eslint-disable max-len */\n    windowmanager.runtime.isMobile = (function (a) { return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)); })(navigator.userAgent || navigator.vendor || window.opera);\n    /* eslint-enable max-len */\n    windowmanager.runtime.isDesktop = !windowmanager.isMobile;\n}\n\n// Add geometry to global:\nwindowmanager.geometry = geometry;\n\n// messagebus is set in the respective runtime\n\nexport default windowmanager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/global.js","import EventHandler from './EventHandler';\nimport SyncCallback from './SyncCallback';\n\nconst genUIDE7 = (() => {\n    let lut = [];\n\n    for (let i = 0; i < 256; i += 1) { lut[i] = (i < 16 ? '0' : '') + (i).toString(16); }\n\n    return () => {\n        let d0 = Math.random() * 0xffffffff | 0;\n        let d1 = Math.random() * 0xffffffff | 0;\n        let d2 = Math.random() * 0xffffffff | 0;\n        let d3 = Math.random() * 0xffffffff | 0;\n\n        return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' +\n            lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' +\n            lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] +\n            lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];\n    };\n})();\n\nfunction getUniqueWindowName() {\n    return 'window' + genUIDE7() + (new Date()).getTime();\n};\n\nexport default {\n    getUniqueWindowName,\n    EventHandler,\n    SyncCallback\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/index.js","// TODO: Use class, rather than prototype.\n\n/**\n * An EventHandler\n * @constructor\n * @alias EventHandler\n * @param {String[]} [acceptedEventHandlers=[]] - String of allowed events.\n */\nfunction EventHandler(acceptedEventHandlers = []) {\n    this._eventListeners = {};\n    this._eventPipes = [];\n    // TODO: Look into making these special properties that can't be deleted?\n    for (const acceptedEventHandler of acceptedEventHandlers) {\n        this._eventListeners[acceptedEventHandler] = [];\n    }\n}\n\n/**\n * @method\n * @param {String}\n * @param {callback}\n */\nEventHandler.prototype.on = function (eventNames, eventListener) {\n    eventNames = eventNames.toLowerCase().split(' ');\n\n    for (const eventName of eventNames) {\n        // Check if this event can be subscribed to via this function:\n        if (this._eventListeners[eventName] === undefined) { continue; }\n\n        // Check if eventListener is a function:\n        if (!eventListener || typeof eventListener.constructor !== 'function') {\n            throw new Error('on requires argument \\'eventListener\\' of type Function');\n        }\n\n        // Check if eventListener is already added:\n        if (this._eventListeners[eventName].indexOf(eventListener) >= 0) { continue; }\n\n        // Add event listener:\n        this._eventListeners[eventName].push(eventListener);\n    }\n};\n\n/**\n * @method\n * @param {String}\n * @param {callback}\n */\nEventHandler.prototype.once = function (eventName, eventListener) {\n    function onceListener() {\n        this.off(eventName, onceListener);\n        eventListener.apply(this, arguments);\n    }\n    this.on(eventName, onceListener);\n};\n\n/**\n * @method\n * @param {String}\n * @param {callback}\n */\nEventHandler.prototype.off = function (eventNames, eventListener) {\n    eventNames = eventNames.toLowerCase().split(' ');\n\n    for (const eventName of eventNames) {\n        // If event listeners don't exist, bail:\n        if (this._eventListeners[eventName] === undefined) { return; }\n\n        // Check if eventListener is a function:\n        if (!eventListener || typeof eventListener.constructor !== 'function') {\n            throw new Error('off requires argument \\'eventListener\\' of type Function');\n        }\n\n        // Remove event listener, if exists:\n        const index = this._eventListeners[eventName].indexOf(eventListener);\n\n        if (index >= 0) { this._eventListeners[eventName].splice(index, 1); }\n    }\n};\n\n/**\n * @method\n * @param {String}\n */\nEventHandler.prototype.clearEvent = function (eventNames) {\n    eventNames = eventNames.toLowerCase();\n\n    for (const eventName of eventNames) {\n        // If event listeners don't exist, bail:\n        if (this._eventListeners[eventName] === undefined) { return; }\n\n        this._eventListeners[eventName] = [];\n    }\n};\n\n/**\n * @method\n * @param {String}\n * @param {...*} args - Arguments to pass to listeners\n * @returns {Boolean} true if all handlers return true, else false\n */\nEventHandler.prototype.emit = function (eventName, ...args) {\n    eventName = eventName.toLowerCase();\n\n    // If event listeners don't exist, bail:\n    if (this._eventListeners[eventName] === undefined) { return false; }\n\n    let returnVal = true;\n\n    for (const eventListener of this._eventListeners[eventName]) {\n        // Call listener with the 'this' context as the current window:\n        returnVal = returnVal && eventListener.apply(this, args) !== false;\n    }\n\n    for (const eventHandler of this._eventPipes) {\n        // Call handler with the 'this' context as the current window:\n        returnVal = returnVal && eventHandler.emit.apply(eventHandler, arguments) !== false;\n    }\n\n    return returnVal;\n};\n\n/**\n * @method\n * @param {EventHandler}\n */\nEventHandler.prototype.addPipe = function (eventHandler) {\n    // Check if eventHandler is a EventHandler:\n    if (!eventHandler || !eventHandler.emit) {\n        throw new Error('addPipe requires argument \\'eventHandler\\' of type EventHandler');\n    }\n\n    // Check if eventHandler is already added:\n    if (this._eventPipes.indexOf(eventHandler) >= 0) { return; }\n\n    // Add event handler:\n    this._eventPipes.push(eventHandler);\n};\n\n/**\n * @method\n * @param {EventHandler}\n */\nEventHandler.prototype.removePipe = function (eventHandler) {\n    // Check if eventHandler is a EventHandler:\n    if (!eventHandler || !eventHandler.emit) {\n        throw new Error('removePipe requires argument \\'eventHandler\\' of type EventHandler');\n    }\n\n    // Check if eventHandler is already added:\n    if (this._eventPipes.indexOf(eventHandler) >= 0) { return; }\n\n    // Remove eventHandler, if exists:\n    const index = this._eventPipes.indexOf(eventHandler);\n\n    if (index >= 0) { this._eventPipes.splice(index, 1); }\n};\n\nexport default EventHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/EventHandler.js","function SyncCallback(callback) {\n    if (!(this instanceof SyncCallback)) { return new SyncCallback(callback); }\n\n    this.callback = callback;\n    this.count = 0;\n}\n\nSyncCallback.prototype.ref = function (callback) {\n    let thisRef = this;\n\n    this.count += 1;\n    return function (...args) {\n        if (callback) { callback(...args); }\n        thisRef._deref();\n    };\n};\n\nSyncCallback.prototype._deref = function () {\n    this.count -= 1;\n    if (this.count <= 0) { this.callback(); }\n};\n\nexport default SyncCallback;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/SyncCallback.js","// TODO: Rewrite in class form, so can make use of get/set, and private.\n// TODO: Add asVector, asBoundingBox, asCollisionMesh to all classes (as a get),\n//       to easily coerce types!\n// TODO: Rewrite the classes to have more simplified functions (don't have complex\n//       functions that have very specific purposes).\n// TODO: Add proper argument checking! Not all methods have checks!\nimport Vector from './Vector';\nimport BoundingBox from './BoundingBox';\nimport CollisionMesh from './CollisionMesh';\n\n/**\n * A library to handler geometry calculations.\n * @namespace\n * @alias geometry\n * @property {BoundingBox}\n * @property {CollisionMesh}\n * @property {Position}\n * @property {Size}\n * @property {Vector}\n */\nexport default {\n    BoundingBox,\n    CollisionMesh,\n    /**\n     * A Position object. Alias of {@link Vector}.\n     * @class\n     * @alias Position\n     * @see {@link Vector} for further information.\n     */\n    Position: Vector,\n    /**\n     * A Size object. Alias of {@link Vector}.\n     * @class\n     * @alias Size\n     * @see {@link Vector} for further information.\n     */\n    Size: Vector,\n    Vector\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/index.js","import BoundingBox from './BoundingBox';\nimport CollisionMesh from './CollisionMesh';\n\n/**\n * A Vector class.\n */\nclass Vector {\n    /**\n     * @param {Number} left - The position of the vector's x-axis.\n     * @param {Number} top - The position of the vector's y-axis.\n     * @returns {Vector} An instance of Vector\n     */\n    constructor(left, top) {\n        let obj = left;\n\n        if (obj && obj.constructor !== Number) {\n            // new Vector(obj)\n            this.left = obj.left;\n            this.top = obj.top;\n        } else {\n            // new Vector(left, top)\n            this.left = left;\n            this.top = top;\n        }\n    }\n\n    /**\n     * Clone the current vector to a new object.\n     * @returns {Vector} A clone of this instance\n     */\n    clone() {\n        return new Vector(this);\n    }\n\n    /**\n     * Checks if any property on `this` is NaN.\n     * @returns {Boolean}\n     */\n    isNaN() {\n        return isNaN(this.left) || isNaN(this.top);\n    }\n\n    /**\n     * Resolve this object down to a {@link Vector} instance.\n     * Since this instance is already a vector, it returns itself.\n     * @returns {Vector} self\n     */\n    getVector() {\n        // We have this method, so any prototype in this script will return their position,\n        // and if they are one it will return itself.\n        // This simplifies code, and prevents having to do a ton of checks.\n        return this;\n    }\n\n    /**\n     * Returns a BoundingBox instance version of this vector similar to:<br>\n     * ```javascript\n     * new BoundingBox(Vector.left, Vector.top, Vector.left, Vector.top)\n     * ```\n     * @returns {BoundingBox}\n     */\n    getBoundingBox() {\n        // We have this method, so any prototype in this script will return their position,\n        // and if they are one it will return itself.\n        // This simplifies code, and prevents having to do a ton of checks.\n        return new BoundingBox(this.left, this.top, this.left, this.top);\n    }\n\n    /**\n     * Returns a {@link CollisionMesh} instance version of this vector similar to:<br>\n     * ```javascript\n     * new CollisionMesh(Vector.getBoundingBox())\n     * ```\n     * @returns {CollisionMesh}\n     */\n    getCollisionMesh() {\n        return new CollisionMesh(this.getBoundingBox());\n    }\n\n    /**\n     * Returns the squared distance between `this` and `other`.\n     * @param {Vector}\n     * @returns {Number}\n     */\n    distanceSquared(other) {\n        let diff = other.subtract(this);\n\n        return diff.left * diff.left + diff.top * diff.top;\n    }\n\n    /**\n     * Returns the distance between `this` and `other`.\n     * @param {Vector}\n     * @returns {Number}\n     */\n    distance(other) {\n        return Math.sqrt(this.distanceSquared(other));\n    }\n\n    /**\n     * Sets `this.left` to `other.left`, and sets `this.top` to `other.top`.\n     * @param {Vector}\n     * @returns {Vector} self\n     */\n    set(other) {\n        if (!other) { throw new Error(\"set requires argument 'other'\"); }\n        other = other.getVector();\n\n        this.left = other.left;\n        this.top = other.top;\n        return this;\n    }\n\n    /**\n     * Move `this` to position at `left` and/or `top`.\n     * @param {Number} [left=null]\n     * @param {Number} [top=null]\n     * @returns {Vector} self\n     */\n    moveTo(left, top) {\n        if (left && left.constructor === Number) { this.left = left; }\n        if (top && top.constructor === Number) { this.top = top; }\n        return this;\n    }\n\n    /**\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\n     * @param {Number} [deltaLeft=null]\n     * @param {Number} [deltaTop=null]\n     * @returns {Vector} self\n     */\n    moveBy(deltaLeft, deltaTop) {\n        if (deltaLeft && deltaLeft.constructor === Number) { this.left = deltaLeft; }\n        if (deltaTop && deltaTop.constructor === Number) { this.top = deltaTop; }\n        return this;\n    }\n\n    /**\n     * Sets `this`'s properties if `other`'s is smaller.\n     * @param {Vector}\n     * @returns {Number}\n     */\n    setMin(other) {\n        if (!other) { throw new Error(\"setMin requires argument 'other'\"); }\n        other = other.getVector();\n\n        if (Math.abs(other.left) < Math.abs(this.left) || isNaN(this.left)) { this.left = other.left; }\n        if (Math.abs(other.top) < Math.abs(this.top) || isNaN(this.top)) { this.top = other.top; }\n    }\n\n    /**\n     * Sets `this`'s properties if `other`'s is larger.\n     * @param {Vector}\n     * @returns {Number}\n     */\n    setMax(other) {\n        if (!other) { throw new Error(\"setMax requires argument 'other'\"); }\n        other = other.getVector();\n\n        if (Math.abs(other.left) > Math.abs(this.left) || isNaN(this.left)) { this.left = other.left; }\n        if (Math.abs(other.top) > Math.abs(this.top) || isNaN(this.top)) { this.top = other.top; }\n    }\n\n    /**\n     * Add `other` to `this`.\n     * @param {Vector}\n     * @returns {Number}\n     */\n    add(other) {\n        if (!other) { throw new Error(\"add requires argument 'other'\"); }\n        other = other.getVector();\n\n        this.left += other.left;\n        this.top += other.top;\n        return this;\n    };\n\n    /**\n     * Subtract `other` from `this`.\n     * @param {Vector}\n     * @returns {Number}\n     */\n    subtract(other) {\n        if (!other) { throw new Error(\"subtract requires argument 'other'\"); }\n        other = other.getVector();\n\n        this.left -= other.left;\n        this.top -= other.top;\n        return this;\n    }\n}\n\nexport default Vector;\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/Vector.js","// TODO: Utilize ES6 features (like for loops)\nimport Vector from './Vector';\nimport CollisionMesh from './CollisionMesh';\n\n// Utility functions:\nfunction minAbs(min, ...vals) {\n    let minAbs = Math.abs(min);\n\n    for (const val of vals) {\n        let argAbs = Math.abs(val);\n\n        if (argAbs < minAbs) {\n            min = val;\n            minAbs = argAbs;\n        }\n    }\n\n    return {\n        min: min,\n        abs: minAbs\n    };\n}\n\n/**\n * A BoundingBox class.\n */\nclass BoundingBox {\n    /**\n     * @param {Number} left - The left position of x-axis.\n     * @param {Number} top - The top position of y-axis.\n     * @param {Number} right - The right position of x-axis.\n     * @param {Number} bottom - The bottom position of y-axis.\n     */\n    constructor(left, top, right, bottom) {\n        let obj = left;\n\n        if (obj && obj.constructor !== Number) {\n            if (obj.getBoundingBox) { obj = obj.getBoundingBox(); }\n            // new BoundingBox(obj)\n            this.left = obj.left;\n            this.top = obj.top;\n            this.right = obj.right;\n            this.bottom = obj.bottom;\n        } else {\n            // new BoundingBox(left, top, right, bottom)\n            this.left = left;\n            this.top = top;\n            this.right = right;\n            this.bottom = bottom;\n        }\n    }\n\n    /**\n     * Clone the current boundingbox to a new object.\n     * @returns {BoundingBox} A clone of this instance\n     */\n    clone() {\n        return new BoundingBox(this);\n    }\n\n    /**\n     * Checks if any property on `this` is NaN.\n     * @returns {Boolean}\n     */\n    isNaN() {\n        return isNaN(this.left) || isNaN(this.top) || isNaN(this.right) || isNaN(this.bottom);\n    }\n\n    /**\n     * Returns the width of `this`.\n     * @returns {Number} width\n     */\n    getWidth() {\n        return Math.abs(this.right - this.left);\n    }\n\n    /**\n     * Returns the height of `this`.\n     * @returns {Number} height\n     */\n    getHeight() {\n        return Math.abs(this.bottom - this.top);\n    }\n\n    /**\n     * Returns the size of `this`.\n     * @returns {Vector} size\n     */\n    getSize() {\n        return new Vector(this.getWidth(), this.getHeight());\n    }\n\n    /**\n     * Returns the area of `this`.\n     * @returns {Number} area\n     */\n    getArea() {\n        return this.getWidth() * this.getHeight();\n    }\n\n    /**\n     * Returns the position of `this`.\n     * @returns {Vector} position\n     */\n    getPosition() {\n        return new Vector(this.left, this.top);\n    }\n\n    /**\n     * Resolve this object down to a {@link BoundingBox} instance.\n     * Since this instance is already a boundingbox, it returns itself.\n     * @returns {BoundingBox} self\n     */\n    getBoundingBox() {\n        // We have this method, so any prototype in this script will return their bounding box,\n        // and if they are one it will return itself.\n        // This simplifies code, and prevents having to do a ton of checks.\n        return this;\n    }\n\n    /**\n     * Returns a {@link CollisionMesh} instance version of this boundingbox similar to:<br>\n     * ```javascript\n     * new CollisionMesh(BoundingBox)\n     * ```\n     * @returns {CollisionMesh}\n     */\n    getCollisionMesh() {\n        return new CollisionMesh(this);\n    }\n\n    /**\n     * Returns the center position of `this`.\n     * @returns {Vector} position\n     */\n    getCenterPosition() {\n        return new Vector(this.left + this.getWidth() / 2, this.top + this.getHeight() / 2);\n    }\n\n    /**\n     * Returns `this` subtract `other`.\n     * @param {BoundingBox}\n     * @returns {Vector} position\n     */\n    difference(other) {\n        if (!other) { throw new Error(\"difference requires argument 'other'\"); }\n        other = other.getBoundingBox();\n\n        return new BoundingBox(this.left - other.left, this.top - other.top,\n                                this.right - other.right, this.bottom - other.bottom);\n    }\n\n    /**\n     * Returns a position, which if `this` is set to, `this` will be centered on `other`.\n     * @param {BoundingBox}\n     * @returns {Vector} position\n     */\n    getCenteredOnPosition(other) {\n        if (!other) { throw new Error(\"getCenteredOnPosition requires argument 'other'\"); }\n        other = other.getBoundingBox();\n\n        return other.getCenterPosition().subtract(this.getCenterPosition().subtract(this.getPosition()));\n    }\n\n    /**\n     * Returns the intersection between `this` and `other`.\n     * This will return a {@link Vector} if they only intersect at a point.\n     * This will return a {@link BoundingBox} if they intersect over an area or line.\n     * This will return a undefined if they do not intersect.\n     * @param {BoundingBox}\n     * @returns {Vector|BoundingBox|undefined} intersection object\n     */\n    getIntersection(other) {\n        if (!other) { throw new Error(\"getIntersection requires argument 'other'\"); }\n        other = other.getBoundingBox();\n\n        let left = Math.max(this.left, other.left),\n            top = Math.max(this.top, other.top),\n            right = Math.min(this.right, other.right),\n            bottom = Math.min(this.bottom, other.bottom);\n\n        if (left === right && top === bottom) {\n            return new Vector(left, top);\n        } else if (left <= right && top <= bottom) {\n            return new BoundingBox(left, top, right, bottom);\n        }\n    }\n\n    /**\n     * Returns the squared distance between `this` and `other`.\n     * @param {Vector}\n     * @returns {Number} squared distance\n     */\n    getDistanceSquaredToPoint(other) {\n        other = other.getVector();\n        let cLeft = (other.left <= this.left ? this.left : (other.left >= this.right ? this.right : other.left));\n        let cTop = (other.top <= this.top ? this.top : (other.top >= this.bottom ? this.bottom : other.top));\n        let cPos = new Vector(cLeft, cTop);\n\n        return cPos.distanceSquared(other);\n    }\n\n    /**\n     * Returns the distance between `this` and `other`.\n     * @param {Vector}\n     * @returns {Number} distance\n     */\n    getDistanceToPoint(other) {\n        return Math.sqrt(this.getDistanceSquaredToPoint(other));\n    }\n\n    /**\n     * Sets `this`'s properties to `other`'s properties.\n     * @param {BoundingBox}\n     * @returns {BoundingBox} self\n     */\n    set(other) {\n        if (!other) { throw new Error(\"set requires argument 'other'\"); }\n        other = other.getBoundingBox();\n\n        this.left = other.left;\n        this.top = other.top;\n        this.right = other.right;\n        this.bottom = other.bottom;\n        return this;\n    }\n\n    /**\n     * Move `this` to position at `left` and/or `top`.\n     * @param {Number} [left=null]\n     * @param {Number} [top=null]\n     * @returns {BoundingBox} self\n     */\n    moveTo(left, top) {\n        if (left && left.constructor === Number) {\n            this.right = left + (this.right - this.left);\n            this.left = left;\n        }\n        if (top && top.constructor === Number) {\n            this.bottom = top + (this.bottom - this.top);\n            this.top = top;\n        }\n        return this;\n    }\n\n    /**\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\n     * @param {Number} [deltaLeft=null]\n     * @param {Number} [deltaTop=null]\n     * @returns {BoundingBox} self\n     */\n    moveBy(deltaLeft, deltaTop) {\n        if (deltaLeft && deltaLeft.constructor === Number) {\n            this.left += deltaLeft;\n            this.right += deltaLeft;\n        }\n        if (deltaTop && deltaTop.constructor === Number) {\n            this.top += deltaTop;\n            this.bottom += deltaTop;\n        }\n        return this;\n    }\n\n    /**\n     * Resize `this` to size `width` and/or `height`, anchored at `anchor`.\n     * @param {Number} [width=null]\n     * @param {Number} [height=null]\n     * @param {String} [anchor='top-left'] supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\"\n     * @returns {BoundingBox} self\n     */\n    resizeTo(width, height, anchor) {\n        // NOTE: anchor supports \"top-left\", \"top-right\", \"bottom-left\", or \"bottom-right\". By default it is \"top-left\".\n        // NOTE: anchor also supports being passed as a position. Allowing the resize anchor to be anywhere other than\n        //       the predefined strings.\n        let curSize = this.getSize();\n        let newSize = new Vector(width || curSize.left, height || curSize.top);\n\n        anchor = anchor || 'top-left';\n        if (typeof anchor === 'string' || anchor instanceof String) {\n            let anchorStr = anchor;\n\n            anchor = this.getPosition();\n            if (anchorStr.indexOf('right') >= 0) { anchor.left += curSize.left; }\n            if (anchorStr.indexOf('bottom') >= 0) { anchor.top += curSize.top; }\n        }\n\n        this.left += (anchor.left - this.left) * (curSize.left - newSize.left) / curSize.left;\n        this.right += (anchor.left - this.right) * (curSize.left - newSize.left) / curSize.left;\n        this.top += (anchor.top - this.top) * (curSize.top - newSize.top) / curSize.top;\n        this.bottom += (anchor.top - this.bottom) * (curSize.top - newSize.top) / curSize.top;\n        return this;\n    }\n\n    /**\n     * Determines if `this` encapsulates `other`.\n     * @param {BoundingBox}\n     * @returns {Boolean}\n     */\n    isContains(other) {\n        if (!other) { throw new Error(\"isContains requires argument 'other'\"); }\n        other = other.getBoundingBox();\n\n        return other.left >= this.left && other.right <= this.right &&\n            other.top >= this.top && other.bottom <= this.bottom;\n    }\n\n    /**\n     * Determines if `this` encapsulates at least one of `others`.\n     * @param {BoundingBox[]}\n     * @returns {Boolean}\n     */\n    someContains(others) {\n        if (!others) { throw new Error(\"someContains requires argument 'others'\"); }\n        if (others.constructor !== Array) { throw new Error(\"someContains requires argument 'others' of type Array\"); }\n\n        for (let index = 0; index < others.length; index += 1) {\n            if (this.isContains(others[index])) { return true; }\n        }\n        return false;\n    }\n\n    /**\n     * Determines if `this` touches an edge of `other`, but does not intersect area.\n     * @param {BoundingBox}\n     * @returns {Boolean}\n     */\n    isTouching(other) {\n        if (!other) { throw new Error(\"isTouching requires argument 'other'\"); }\n        other = other.getBoundingBox();\n\n        return ((this.top <= other.bottom && this.bottom >= other.top) &&\n                (this.left === other.right || this.right === other.left)) ||\n                ((this.left <= other.right && this.right >= other.left) &&\n                (this.top === other.bottom || this.bottom === other.top));\n    }\n\n    /**\n     * If `this` touches one of `others`, but does not intersect area, then this returns the `this` edge name.\n     * @param {BoundingBox[]}\n     * @returns {String|undefined} edge name\n     */\n    getEdgeTouching(others) {\n        if (!others) { throw new Error(\"getEdgeTouching requires argument 'others'\"); }\n        if (others.constructor !== Array) { others = [others]; }\n\n        for (let index = 0; index < others.length; index += 1) {\n            let other = others[index].getBoundingBox();\n\n            if (this.top <= other.bottom && this.bottom >= other.top) {\n                if (this.left === other.right) { return 'left'; }\n                if (this.right === other.left) { return 'right'; }\n            }\n            if (this.left <= other.right && this.right >= other.left) {\n                if (this.top === other.bottom) { return 'top'; }\n                if (this.bottom === other.top) { return 'bottom'; }\n            }\n        }\n    }\n\n    /**\n     * If `this` touches one of `others`, but does not intersect area, then this returns the `other` edge name.\n     * @param {BoundingBox[]}\n     * @returns {String|undefined} edge name\n     */\n    getOtherEdgeTouching(others) {\n        if (!others) { throw new Error(\"getOtherEdgeTouching requires argument 'others'\"); }\n        if (others.constructor !== Array) { others = [others]; }\n\n        for (let index = 0; index < others.length; index += 1) {\n            let other = others[index].getBoundingBox();\n\n            if (this.top <= other.bottom && this.bottom >= other.top) {\n                if (this.left === other.right) { return 'right'; }\n                if (this.right === other.left) { return 'left'; }\n            }\n            if (this.left <= other.right && this.right >= other.left) {\n                if (this.top === other.bottom) { return 'bottom'; }\n                if (this.bottom === other.top) { return 'top'; }\n            }\n        }\n    }\n\n    /**\n     * Determines which edges of `this` is closest to `other`, returns all edges in sorted order by distance.\n     * @param {BoundingBox}\n     * @returns {String[]} edge names sorted from closest to furthest\n     */\n    getEdgeClosestOrder(other) {\n        if (!other) { throw new Error(\"getEdgeClosest requires argument 'other'\"); }\n        other = other.getBoundingBox();\n        let centerPos = this.getCenterPosition();\n        let dis = [];\n\n        dis.push({\n            'edge': 'left',\n            dis: other.getDistanceSquaredToPoint(this.left, centerPos.top)\n        });\n        dis.push({\n            'edge': 'top',\n            dis: other.getDistanceSquaredToPoint(centerPos.left, this.top)\n        });\n        dis.push({\n            'edge': 'right',\n            dis: other.getDistanceSquaredToPoint(this.right, centerPos.top)\n        });\n        dis.push({\n            'edge': 'bottom',\n            dis: other.getDistanceSquaredToPoint(centerPos.left, this.bottom)\n        });\n        dis.sort(function (a, b) {\n            return a.dis - b.dis;\n        });\n\n        return dis.map(function (dis) { return dis.edge; });\n    }\n\n    /**\n     * Determines which `this` edge is closest to `other`.\n     * @param {BoundingBox}\n     * @returns {String} edge name\n     */\n    getEdgeClosest(other) {\n        let edges = this.getEdgeClosestOrder(other);\n\n        return edges[0];\n    }\n\n    /**\n     * Returns a vector representing the delta position to add to `this` to snap to `other`.<br>\n     * Note: `snapDelta` may contain `NaN` for `left` or `right`\n     * @param {BoundingBox}\n     * @param {Number} [snapDistance=5] max distance to move `this`\n     * @returns {Vector} snapDelta\n     */\n    getSnapDelta(other, snapDistance) {\n        if (!other) { throw new Error(\"getSnapDelta requires argument 'other'\"); }\n        other = other.getBoundingBox();\n        snapDistance = snapDistance || 5;\n\n        let snapDelta = new Vector(NaN, NaN);\n\n        if (this.top <= other.bottom && this.bottom >= other.top) {\n            // Handle x-snap:\n            const leftRightDis = minAbs(other.left - this.right, other.right - this.left);\n\n            if (leftRightDis.abs <= snapDistance) { // this.LeftRightSnapTo(other)\n                snapDelta.left = leftRightDis.min;\n\n                // Handle y-subsnap:\n                const topBottomDis = minAbs(other.top - this.top, other.bottom - this.bottom);\n\n                if (topBottomDis.abs <= snapDistance) { // this.TopBottomSubSnapTo(other)\n                    snapDelta.top = topBottomDis.min;\n                }\n            }\n        } else if (this.left <= other.right && this.right >= other.left) {\n            // Handle y-snap:\n            const topBottomDis = minAbs(other.top - this.bottom, other.bottom - this.top);\n\n            if (topBottomDis.abs <= snapDistance) { // this.TopBottomSnapTo(other)\n                snapDelta.top = topBottomDis.min;\n\n                // Handle x-subsnap:\n                const leftRightDis = minAbs(other.left - this.left, other.right - this.right);\n\n                if (leftRightDis.abs <= snapDistance) { // this.LeftRightSubSnapTo(other)\n                    snapDelta.left = leftRightDis.min;\n                }\n            }\n        }\n\n        return snapDelta;\n    }\n\n    /**\n     * Determines if `this` touches an edge of one of `others`, but does not intersect area.\n     * @param {BoundingBox[]}\n     * @returns {Boolean}\n     */\n    someTouching(others) {\n        if (!others) { throw new Error(\"someTouching requires argument 'others'\"); }\n        if (others.constructor !== Array) { throw new Error(\"someTouching requires argument 'others' of type Array\"); }\n\n        for (let index = 0; index < others.length; index += 1) {\n            if (this.isTouching(others[index])) { return true; }\n        }\n        return false;\n    }\n\n    /**\n     * Determines if `this` intersects an area of `others`, not an edge.\n     * @param {BoundingBox}\n     * @returns {Boolean}\n     */\n    isColliding(other) {\n        if (!other) { throw new Error(\"isColliding requires argument 'other'\"); }\n        other = other.getBoundingBox();\n\n        return this.left < other.right && this.right > other.left && this.top < other.bottom && this.bottom > other.top;\n    }\n\n    /**\n     * Determines if `this` intersects an area of one of `others`, not an edge.\n     * @param {BoundingBox[]}\n     * @returns {Boolean}\n     */\n    someColliding(others) {\n        if (!others) { throw new Error(\"someColliding requires argument 'others'\"); }\n        if (others.constructor !== Array) { throw new Error(\"someColliding requires argument 'others' of type Array\"); }\n\n        for (let index = 0; index < others.length; index += 1) {\n            if (this.isColliding(others[index])) { return true; }\n        }\n        return false;\n    }\n\n    /**\n     * Returns which of `other` that `this` intersects an area of, not an edge.\n     * @param {BoundingBox[]}\n     * @returns {BoundingBox|undefined}\n     */\n    getColliding(others) {\n        if (!others) { throw new Error(\"getColliding requires argument 'others'\"); }\n        if (others.constructor !== Array) { throw new Error(\"getColliding requires argument 'others' of type Array\"); }\n\n        for (let index = 0; index < others.length; index += 1) {\n            if (this.isColliding(others[index])) { return others[index]; }\n        }\n    }\n}\n\nexport default BoundingBox;\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/BoundingBox.js","import Vector from './Vector';\nimport BoundingBox from './BoundingBox';\n\n/**\n * A CollisionMesh class.\n */\nclass CollisionMesh {\n    /**\n     * @param {BoundingBox[]} boxes - An array of objects thatg resolve to BoundingBox.\n     */\n    constructor(boxes, opts = {}) {\n        if (!boxes) { throw new Error('CollisionMesh constructor requires argument \\'boxes\\''); }\n        if (boxes.constructor !== Array) { boxes = [boxes]; }\n        this.boxes = [];\n\n        for (let box of boxes) {\n            if (box.constructor === BoundingBox) {\n                this.boxes.push(box);\n            } else if (box.constructor === CollisionMesh) {\n                this.boxes = this.boxes.concat(box.boxes);\n            } else {\n                this.boxes = this.boxes.concat(box.getCollisionMesh(opts).boxes);\n            }\n        }\n    }\n\n    /**\n     * Clone the current collisionmesh to a new object.\n     * @returns {CollisionMesh} A clone of this instance\n     */\n    clone() {\n        let boxes = new Array(this.boxes.length);\n\n        for (let index = 0; index < this.boxes.length; index += 1) {\n            boxes[index] = this.boxes[index].clone();\n        }\n\n        return new CollisionMesh(boxes);\n    }\n\n    /**\n     * Returns the width of `this`.\n     * @returns {Number} width\n     */\n    getWidth() {\n        if (this.boxes.length === 0) { return 0; }\n        let left = this.boxes[0].left;\n        let right = this.boxes[0].right;\n\n        for (let index = 1; index < this.boxes.length; index += 1) {\n            // This assumes left is least, and right is most in terms of value:\n            left = Math.min(left, this.boxes[index].left);\n            right = Math.max(right, this.boxes[index].right);\n        }\n\n        return right - left;\n    }\n\n    /**\n     * Returns the height of `this`.\n     * @returns {Number} height\n     */\n    getHeight() {\n        if (this.boxes.length === 0) { return 0; }\n\n        let top = this.boxes[0].top;\n        let bottom = this.boxes[0].bottom;\n\n        for (let index = 1; index < this.boxes.length; index += 1) {\n            // This assumes top is least, and bottom is most in terms of value:\n            top = Math.min(top, this.boxes[index].top);\n            bottom = Math.max(bottom, this.boxes[index].bottom);\n        }\n\n        return bottom - top;\n    }\n\n    /**\n     * Returns the size of `this`.\n     * @returns {Vector} size\n     */\n    getSize() {\n        return this.getBoundingBox().getSize();\n    }\n\n    /**\n     * Returns the position of `this`.\n     * @returns {Vector} position\n     */\n    getPosition() {\n        return this.getBoundingBox().getPosition();\n    }\n\n    /**\n     * Returns a BoundingBox instance version of this collisionmesh, which encapsulates all of it's internal boxes.\n     * @returns {BoundingBox}\n     */\n    getBoundingBox() {\n        if (this.boxes.length === 0) { return new BoundingBox(NaN, NaN, NaN, NaN); }\n\n        let box = this.boxes[0].clone();\n\n        for (let index = 1; index < this.boxes.length; index += 1) {\n            box.left = Math.min(box.left, this.boxes[index].left);\n            box.top = Math.min(box.top, this.boxes[index].top);\n            box.right = Math.max(box.right, this.boxes[index].right);\n            box.bottom = Math.max(box.bottom, this.boxes[index].bottom);\n        }\n\n        return box;\n    }\n\n    /**\n     * Resolve this object down to a {@link CollisionMesh} instance.\n     * Since this instance is already a collisionmesh, it returns itself.\n     * @returns {CollisionMesh} self\n     */\n    getCollisionMesh() {\n        return this;\n    }\n\n    /**\n     * Move `this` to position at `left` and/or `top`.\n     * @param {Number} [left=null]\n     * @param {Number} [top=null]\n     * @returns {BoundingBox} self\n     */\n    moveTo(left, top) {\n        let newPosition = new Vector(left, top);\n\n        this.moveBy(newPosition.subtract(this.getPosition()));\n        return this;\n    }\n\n    /**\n     * Move `this` relatively to position by `deltaLeft` and/or `deltaTop`.\n     * @param {Number} [deltaLeft=null]\n     * @param {Number} [deltaTop=null]\n     * @returns {BoundingBox} self\n     */\n    moveBy(left, top) {\n        let newPosition = new Vector(left || 0, top || 0);\n\n        for (let box of this.boxes) {\n            box.moveBy(newPosition);\n        }\n        return this;\n    }\n\n    /**\n     * Determines if `this` encapsulates all of `other`.\n     * @param {CollisionMesh|BoundingBox[]}\n     * @returns {Boolean}\n     */\n    isContains(other) {\n        if (!other) { throw new Error('isContains requires argument \\'other\\''); }\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\n\n        for (const otherBox of other.boxes) {\n            let contained = false;\n\n            for (const thisBox of this.boxes) {\n                contained |= thisBox.isContains(otherBox);\n            }\n\n            if (!contained) { return false; }\n        }\n\n        return true;\n    }\n\n    /**\n     * Determines if `this` encapsulates at least one of `other`.\n     * @param {CollisionMesh|BoundingBox[]}\n     * @returns {Boolean}\n     */\n    someContains(other) {\n        if (!other) { throw new Error('someContains requires argument \\'other\\''); }\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\n\n        for (const box of this.boxes) {\n            if (box.someContains(other.boxes)) { return true; }\n        }\n        return false;\n    }\n\n    /**\n     * Determines if `this` touches an edge of `other`, but does not intersect area.\n     * @param {CollisionMesh|BoundingBox[]}\n     * @returns {Boolean}\n     */\n    isTouching(other) {\n        if (!other) { throw new Error('isTouching requires argument \\'other\\''); }\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\n\n        for (const box of this.boxes) {\n            if (box.someTouching(other.boxes)) { return true; }\n        }\n        return false;\n    }\n\n    /**\n     * Determines if `this` touches an edge of one of `others`, but does not intersect area.\n     * @param {CollisionMesh[]}\n     * @returns {Boolean}\n     */\n    someTouching(others) {\n        if (!others) { throw new Error('someTouching requires argument \\'others\\''); }\n        if (others.constructor !== Array) {\n            throw new Error('someTouching requires argument \\'others\\' to resolve to type Array');\n        }\n\n        for (const other of others) {\n            if (this.isTouching(other)) { return true; }\n        }\n        return false;\n    }\n\n    /**\n     * Determines if `this` intersects an area of `other`, not an edge.\n     * @param {CollisionMesh|BoundingBox[]}\n     * @returns {Boolean}\n     */\n    isColliding(other) {\n        if (!other) { throw new Error('isColliding requires argument \\'other\\''); }\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\n\n        for (const box of this.boxes) {\n            if (box.someColliding(other.boxes)) { return true; }\n        }\n        return false;\n    }\n\n    /**\n     * Determines if `this` intersects an area of one of `others`, not an edge.\n     * @param {CollisionMesh[]}\n     * @returns {Boolean}\n     */\n    someColliding(others) {\n        if (!others) { throw new Error('someColliding requires argument \\'others\\''); }\n        if (others.constructor !== Array) {\n            throw new Error('someColliding requires argument \\'others\\' to resolve to type Array');\n        }\n\n        for (const other of others) {\n            for (const box of this.boxes) {\n                if (box.isColliding(other)) { return true; }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns which box of `other` that `this` intersects an area of, not an edge.\n     * @param {CollisionMesh|BoundingBox[]}\n     * @returns {BoundingBox|undefined}\n     */\n    getColliding(other) {\n        if (!other) { throw new Error('getColliding requires argument \\'other\\''); }\n        other = (other.constructor === Array ? new CollisionMesh(other) : other.getCollisionMesh());\n\n        for (let box of this.boxes) {\n            let collided = box.getColliding(other.boxes);\n\n            if (collided) { return collided; }\n        }\n    }\n}\n\nexport default CollisionMesh;\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/CollisionMesh.js","/* global fin */\nimport './ready';\n\n// TODO: Add runtime checks here for OpenFin and Electron\nlet runtime;\n\nif ((typeof process !== 'undefined' && process && process.versions && process.versions.electron) ||\n    (typeof window !== 'undefined' && window && window.nodeRequire && window.nodeRequire.runtime)) {\n    // We are running in an Electron Runtime:\n    runtime = require('./electron/index');\n} else if (typeof fin !== 'undefined' && fin && fin.desktop && fin.desktop.main) {\n    // We are running in an OpenFin Runtime:\n    runtime = require('./openfin/index');\n} else {\n    // We are running in an Browser Runtime:\n    runtime = require('./browser/index');\n}\n\nexport default runtime;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/index.js","import windowmanager from '../global';\nimport { SyncCallback } from '../utils/index';\n\nlet callbacks = [];\nlet isReady = false;\n\n/**\n * Executes callback when windowmanager is ready.\n * @memberof windowmanager\n * @method\n * @param {callback}\n */\nwindowmanager.onReady = function (callback) {\n    // Check if callback is not a function:\n    if (!(callback && callback.constructor && callback.call && callback.apply)) {\n        throw new Error('onReady expects a function passed as the callback argument!');\n    }\n\n    // Check if already ready:\n    if (isReady) { callback(); }\n\n    // Check to see if callback is already in callbacks:\n    if (callbacks.indexOf(callback) >= 0) { return; }\n\n    callbacks.push(callback);\n};\n\n/**\n * Returns if windowmanager is ready.\n * @memberof windowmanager\n * @method\n * @returns {Boolean}\n */\nwindowmanager.isReady = () => {\n    return isReady;\n};\n\nexport default new SyncCallback(function () {\n    isReady = true;\n    for (const callback of callbacks) { callback(); }\n    callbacks = [];\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/ready.js","import windowmanager from './global'; // Setup windowmanager runtime variables for Electron\n// TODO: Determine if renderer should be setup using the startup script, and have renderer be a NOOP\n\nif (windowmanager._isNode) {\n    // We are running in an Electron's main script:\n    require('./node/index');\n} else if (windowmanager._isRenderer) {\n    // We are running in an Electron renderer:\n    require('./renderer/index');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/index.js","import windowmanager from '../../global';\nimport nodeRequire from './require';\n\nwindowmanager._isNode = false;\nwindowmanager._isStartup = false;\nwindowmanager._isRenderer = false;\nwindowmanager.runtime.name = 'Electron';\nwindowmanager.runtime.version = undefined;\nwindowmanager.runtime.isElectron = true;\n\n// Determine if this is node or renderer:\n// TODO: Clean up the following code to clearly identify the three potential states: node, startup, renderer\nif (typeof global !== 'undefined' && global) {\n    // We are running in an Electron Window Backend's Runtime:\n    const { BrowserWindow } = nodeRequire('electron');\n\n    // The following check works because BrowserWindow is not exposed to the window scripts:\n    windowmanager._isNode = (BrowserWindow != null);\n    windowmanager._isStartup = !windowmanager._isNode;\n    windowmanager.runtime.version = global.process.versions.electron;\n\n    // If is a window startup script:\n    if (windowmanager._isStartup) {\n        let _require = nodeRequire;\n\n        _require.runtime = windowmanager.runtime;\n        _require.workingDir = _require('path').dirname(_require.main.filename);\n        _require.windowmanagerPath = __filename; // Used so new windows know where to load windowmanager from.\n        global.nodeRequire = _require; // Used so windowmanager in a window can access electron.\n        // TODO: Determine if window can be set directly here.\n\n        process.once('loaded', function () {\n            // TODO: Is this needed?\n            global.nodeRequire = _require;\n        });\n    }\n} else if (typeof window !== 'undefined' && window) {\n    windowmanager._isRenderer = true;\n\n    if (window.nodeRequire != null) {\n        // We are running in an Electron Window's Runtime:\n        windowmanager.runtime = window.nodeRequire.runtime;\n        windowmanager._windows = new Map();\n    }\n}\n\n// This is used to store info across windows:\n// Everything on here gets exported as windowmanager.\nexport default windowmanager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/global.js","// Exposes node require\nexport default eval('typeof require !== \\'undefined\\' && require'); // eslint-disable-line no-eval\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/require.js","import readySync from '../../ready';\nimport './Window'; // Setup window backend\n\n// TODO: Make scalejs.windowmanager the main.js script for Electron. Load the config.json\n\nreadySync._deref();\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/node/index.js","import windowmanager from '../global';\nimport nodeRequire from '../require';\nconst { BrowserWindow } = nodeRequire('electron');\n\n// TODO: Give the node backend access to windowmanager Window-like functionality\n// This is Electron's main process:\nconst { Vector, BoundingBox } = windowmanager.geometry;\n\n// TODO: Solve event syncing between windows\nBrowserWindow.prototype._notifyReady = function () {\n    for (let other of BrowserWindow.getAllWindows()) {\n        other.webContents.send('window-create', this.id);\n    }\n};\n\nBrowserWindow.prototype._ensureDockSystem = function () {\n    // Make sure docked group exists:\n    if (this._dockedGroup === undefined) {\n        this._dockedGroup = [this];\n\n        this.on('closed', function () {\n            // Clean up the dock system when this window closes:\n            this.undock();\n        });\n\n        this.on('maximize', function () {\n            this.undock(); // TODO: Support changing size when docked.\n        });\n\n        this.on('minimize', function () {\n            this._dockMinimize();\n        });\n\n        this.on('restore', function () {\n            for (let other of this._dockedGroup) {\n                if (other !== this) {\n                    other.restore();\n                }\n            }\n        });\n\n        let lastBounds = this.getBounds();\n\n        this.on('move', function () {\n            const newBounds = this.getBounds();\n\n            // this._dockMoveTo(newBounds.x, newBounds.y, [lastBounds.x, lastBounds.y]);\n            lastBounds = newBounds;\n        });\n\n        this.on('resize', function () {\n            const newBounds = this.getBounds();\n\n            if (newBounds.width !== lastBounds.width || newBounds.height !== lastBounds.height) {\n                this.undock(); // TODO: Support changing size when docked.\n            }\n            // TODO: Handle resize positions of other docked windows\n            //       This requires reworking how windows are docked/connected\n            //       (they must be docked to edges of windows, not the windows themselves)\n            /* for (let index = 0; index < this._dockedGroup.length; index += 1) {\n                const other = this._dockedGroup[index];\n\n                if (other !== this) {\n                    other.setPosition()\n                }\n            }*/\n\n            lastBounds = newBounds;\n        });\n    }\n};\n\nBrowserWindow.prototype.dock = function (otherID) {\n    this._ensureDockSystem();\n\n    // Resolve otherID, and fail if otherID doesn't exist.\n    const other = BrowserWindow.fromId(otherID);\n\n    if (other === undefined) { return; } // Failed to find other. TODO: Return error\n\n    // If other is already in the group, return:\n    if (this._dockedGroup.indexOf(other) >= 0) { return; }\n\n    // Make sure docked group exists:\n    other._ensureDockSystem();\n\n    // Loop through all windows in otherGroup and add them to this's group:\n    for (let otherWin of other._dockedGroup) {\n        this._dockedGroup.push(otherWin);\n        // Sharing the array between window objects makes it easier to manage:\n        otherWin._dockedGroup = this._dockedGroup;\n    }\n\n    // TODO: Check if otherGroup is touching\n};\n\nBrowserWindow.prototype.undock = function () {\n    this._ensureDockSystem();\n\n    // Check to see if window is already undocked:\n    if (this._dockedGroup.length === 1) { return; }\n\n    // Undock this:\n    this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n    this._dockedGroup = [this];\n\n    // TODO: Redock those still touching, EXCEPT 'this'.\n};\n\nBrowserWindow.prototype._dockFocus = function () {\n    this._ensureDockSystem();\n\n    for (let window of this._dockedGroup) {\n        if (window !== this) {\n            window.setAlwaysOnTop(true);\n            window.setAlwaysOnTop(false);\n        }\n    }\n    this.setAlwaysOnTop(true);\n    this.setAlwaysOnTop(false);\n};\n\nBrowserWindow.prototype._dragStart = function () {\n    // if (!this.emit('drag-start')) { return; } // Allow preventing drag\n    this._ensureDockSystem();\n\n    this.restore();\n\n    for (let window of this._dockedGroup) {\n        window._dragStartPos = window.getPosition();\n    }\n};\n\nBrowserWindow.prototype._getBounds = function () {\n    const bounds = this.getBounds();\n\n    return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\n};\n\nBrowserWindow.prototype._dragBy = function (deltaLeft, deltaTop) {\n    this._ensureDockSystem();\n\n    // Perform Snap:\n    const thisBounds = this._getBounds().moveTo(this._dragStartPos[0] + deltaLeft,\n                                                this._dragStartPos[1] + deltaTop);\n    let snapDelta = new Vector(NaN, NaN);\n\n    for (let other of BrowserWindow.getAllWindows()) {\n        if (other._dockedGroup !== this._dockedGroup) {\n            snapDelta.setMin(thisBounds.getSnapDelta(other._getBounds()));\n        }\n    }\n    deltaLeft += snapDelta.left || 0;\n    deltaTop += snapDelta.top || 0;\n\n    for (let other of this._dockedGroup) {\n        let pos = other._dragStartPos;\n\n        // If other doesn't have a drag position, start it:\n        if (pos === undefined) {\n            pos = other._dragStartPos = other.getPosition();\n            pos[0] -= deltaLeft;\n            pos[1] -= deltaTop;\n        }\n\n        other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\n    }\n};\n\nBrowserWindow.prototype._dragStop = function () {\n    this._ensureDockSystem();\n\n    // Dock to those it snapped to:\n    const thisBounds = this._getBounds();\n\n    for (let other of BrowserWindow.getAllWindows()) {\n        if (thisBounds.isTouching(other._getBounds())) {\n            this.dock(other.id);\n        }\n    }\n\n    for (let window of this._dockedGroup) {\n        delete window._dragStartPos;\n    }\n};\n\nBrowserWindow.prototype._dockMoveTo = function (left, top) {\n    this._ensureDockSystem();\n\n    const oldPos = this.getPosition();\n    const deltaLeft = left - oldPos[0];\n    const deltaTop = top - oldPos[1];\n\n    for (let other of this._dockedGroup) {\n        const pos = other.getPosition();\n\n        other.setPosition(pos[0] + deltaLeft, pos[1] + deltaTop);\n    }\n};\n\nBrowserWindow.prototype._dockMinimize = function (left, top) {\n    this._ensureDockSystem();\n\n    for (let window of this._dockedGroup) {\n        window.minimize();\n    }\n};\n\nBrowserWindow.prototype._dockHide = function (left, top) {\n    this._ensureDockSystem();\n\n    for (let window of this._dockedGroup) {\n        window.hide();\n    }\n};\n\nBrowserWindow.prototype._dockShow = function (left, top) {\n    this._ensureDockSystem();\n\n    for (let window of this._dockedGroup) {\n        window.show();\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/node/Window.js","import windowmanager from '../global';\nimport readySync from '../../ready';\nimport Window from './Window';\nconst { ipcRenderer } = window.nodeRequire('electron');\n\nwindowmanager.messagebus = (() => {\n    // TODO: Optimize Electron's messagebus by keeping track of listeners\n    //       in the main process for early termination.\n    // TODO: Listener cleanup on this window, or other window close.\n    // TODO: Use a custom eventName, so to not collide with current ones.\n    let wrappedListeners = {};\n    let windowWrappedListeners = {};\n\n    function wrapListener(window, listener) {\n        return (_, message) => {\n            // If listener only listens from a specific window, check that this message is from that window:\n            if (window && window._id !== message.winID) { return; }\n\n            const fromWindow = windowmanager.Window.getByID(message.winID);\n\n            // Don't execute listeners when the sender is the same as the listener:\n            if (fromWindow._id === windowmanager.Window.current._id) { return; }\n\n            listener.apply(fromWindow, message.args);\n            // TODO: Send response if response is expected\n        };\n    }\n\n    return {\n        send: (eventName, ...args) => {\n            const curWin = windowmanager.Window.current;\n            const message = {\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n                winID: curWin._id,\n                event: eventName,\n                args: args // If the first arg is a window, it gets removed later.\n            };\n\n            if (args.length > 0 && args[0] instanceof Window) {\n                // Remove window from args in message:\n                const window = args.shift(); // args is by reference in message currently\n\n                // Don't execute listeners when the sender is the same as the listener:\n                if (window._id === curWin._id) { return; }\n\n                window._window.webContents.send(eventName, message);\n            } else {\n                for (const window of windowmanager.Window.getAll()) {\n                    if (window !== curWin) {\n                        window._window.webContents.send(eventName, message);\n                    }\n                }\n            }\n        },\n        on: (eventName, window, listener) => {\n            if (listener === undefined) {\n                listener = window;\n                window = undefined;\n            }\n\n            const onMessage = wrapListener(window, listener);\n\n            if (window !== undefined) {\n                // Don't execute listeners when the sender is the same as the listener:\n                if (window._id === windowmanager.Window.current._id) { return; }\n\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\n\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n                winLisGroup[eventName].set(listener, onMessage);\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n            } else {\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\n                wrappedListeners[eventName].set(listener, onMessage);\n            }\n            ipcRenderer.on(eventName, onMessage);\n        },\n        off: (eventName, window, listener) => {\n            if (listener === undefined) {\n                listener = window;\n                window = undefined;\n            }\n\n            if (window !== undefined) {\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\n\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n                // delete on a Map returns the deleted value (desired onMessage):\n                ipcRenderer.removeListener(eventName, winLisGroup[eventName].delete(listener));\n            } else {\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n                // delete on a Map returns the deleted value (desired onMessage):\n                ipcRenderer.removeListener(eventName, wrappedListeners[eventName].get(listener));\n            }\n        }\n    };\n})();\n\nreadySync._deref();\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/renderer/index.js","import windowmanager from '../global';\nimport { EventHandler } from '../../../utils/index';\nimport { BoundingBox, Position, Size } from '../../../geometry/index';\nconst { ipcRenderer, remote } = window.nodeRequire('electron');\nconst url = window.nodeRequire('url');\nconst BrowserWindow = remote.BrowserWindow;\n\nconst currentWin = remote.getCurrentWindow();\nconst defaultConfig = {\n    width: 600,\n    height: 600,\n    frame: false,\n    resizable: true,\n    hasShadow: false,\n    icon: 'favicon.ico',\n    webPreferences: {\n        nodeIntegration: false,\n        preload: window.nodeRequire.windowmanagerPath\n    }\n};\nconst configMap = {\n    left: 'x',\n    top: 'y'\n};\nconst acceptedEventHandlers = [\n    'ready',\n    'drag-start', 'drag-before', 'drag-stop',\n    'dock-before',\n    'move', 'move-before',\n    'resize-before', 'close', 'minimize'];\n\nclass Window extends EventHandler {\n    constructor(config) {\n        // Call the parent constructor:\n        super(acceptedEventHandlers);\n\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n        const isArgConfig = (config.webContents === undefined); // TODO: Improve checking of arguments.\n\n        if (isArgConfig) {\n            for (const prop in config) {\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n                    config[configMap[prop]] = config[prop];\n                    delete config[prop];\n                }\n            }\n            for (const prop in defaultConfig) {\n                if (defaultConfig.hasOwnProperty(prop)) {\n                    config[prop] = config[prop] || defaultConfig[prop];\n                }\n            }\n            let _url = config.url;\n\n            delete config.url;\n\n            this._window = new BrowserWindow(config);\n            this._id = this._window.id;\n            config.title = config.title == null ? this._id : config.title;\n            // The following logic works like (in logical if-order):\n            //       1. If url has 'http' or 'file' at start, then use url, no modification.\n            //       2. If url has no '/', take location.href and remove all stuff up till last /, then append url.\n            //       3. If url has '/':\n            //          a. If location.href has 'http', extract the root url (domain) and append url.\n            //          b. If location.href has 'file', take remote.getGlobal('workingDir'), and then append url.\n            // Resolve url:\n            if (!/^(file|http)/i.test(_url)) {\n                if (_url[0] !== '/') {\n                    _url = url.resolve(location.href, _url); // TODO: Is this unsafe with '..'?\n                } else if (/^http/i.test(location.href)) {\n                    _url = location.origin + _url; // TODO: Safe?\n                } else if (/^file/i.test(location.href)) {\n                    _url = remote.getGlobal('workingDir') + _url; // TODO: Safe?\n                }\n                // If can\\'t determine url to load, then attempt to just load the url.\n            }\n            this._window.loadURL(_url);\n            this._window.setTitle(config.title);\n        } else {\n            this._window = config;\n            this._id = this._window.id;\n        }\n        windowmanager._windows.set(this._id, this);\n        this._window._ensureDockSystem();\n\n        // Setup _window event listeners:\n        // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\n        const thisWindow = this;\n\n        function _onmove() {\n            thisWindow.emit('move'); // TODO: Pass what position it is at.\n        }\n        this._window.on('move', _onmove);\n\n        function _onminimize() {\n            thisWindow.emit('minimize'); // TODO: Pass what position it is at.\n        }\n        this._window.on('minimize', _onminimize);\n\n        function _onclose() {\n            window.removeEventListener('beforeunload', _oncurrclose); // eslint-disable-line no-use-before-define\n            windowmanager._windows.delete(thisWindow._id);\n            thisWindow._isClosed = true;\n            thisWindow.emit('close');\n            thisWindow._window = undefined;\n            // TODO: Clean up ALL listeners\n        }\n\n        function _oncurrclose() {\n            windowmanager._windows.delete(thisWindow._id);\n            thisWindow._window.removeListener('move', _onmove);\n            thisWindow._window.removeListener('close', _onclose);\n            thisWindow._window.removeListener('minimize', _onminimize);\n        }\n\n        // Register _oncurrclose when page changes or window closes to clean up listeners:\n        window.addEventListener('beforeunload', _oncurrclose);\n\n        // If window isn't currentWin, execute local event listeners:\n        if (this._window !== currentWin) {\n            this._window.on('close', _onclose);\n        }\n\n        this._isClosed = false;\n        this._ready = true;\n        if (isArgConfig) { this._window._notifyReady(); }\n    }\n\n    isReady() {\n        return this._window !== undefined && !this._isClosed();\n    }\n\n    onReady(callback) {\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\n        if (this.isReady()) { return callback.call(this); }\n\n        this.once('ready', callback);\n    }\n\n    isClosed() {\n        return this._isClosed;\n    }\n\n    getPosition() {\n        const pos = this._window.getPosition();\n\n        return new Position(pos[0], pos[1]);\n    }\n\n    getWidth() {\n        const size = this._window.getSize();\n\n        return size[0];\n    }\n\n    getHeight() {\n        const size = this._window.getSize();\n\n        return size[1];\n    }\n\n    getSize() {\n        const size = this._window.getSize();\n\n        return new Position(size[0], size[1]);\n    }\n\n    getBounds() {\n        const bounds = this._window.getBounds();\n\n        return new BoundingBox(bounds.x, bounds.y, bounds.x + bounds.width, bounds.y + bounds.height);\n    }\n\n    getTitle() {\n        return this._window.getTitle();\n    }\n\n    setTitle(newTitle) {\n        if (!newTitle) { throw new Error('setTitle requires one argument of type String'); }\n        this._window.setTitle(newTitle);\n    }\n\n    isHidden() {\n        return !this.isShown();\n    }\n\n    isShown() {\n        return this._window.isVisible();\n    }\n\n    isMinimized() {\n        return this._window.isMinimized();\n    }\n\n    isMaximized() {\n        return this._window.isMaximized();\n    }\n\n    isRestored() {\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\n    }\n\n    close(callback) {\n        if (this.isClosed()) { return callback && callback(); }\n\n        this._window.close();\n        if (callback) { callback(); }\n    }\n\n    minimize(callback) {\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\n\n        this._window._dockMinimize();\n        if (callback) { callback(); }\n    }\n\n    maximize(callback) {\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\n\n        this._window.maximize();\n        if (callback) { callback(); }\n    }\n\n    show(callback) {\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\n\n        this._window._dockShow();\n        if (callback) { callback(); }\n    }\n\n    hide(callback) {\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\n\n        this._window._dockHide();\n        if (callback) { callback(); }\n    }\n\n    restore(callback) {\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\n\n        this._window.restore();\n        if (callback) { callback(); }\n    }\n\n    bringToFront(callback) {\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\n\n        this._window.setAlwaysOnTop(true);\n        this._window.setAlwaysOnTop(false);\n        if (callback) { callback(); }\n    }\n\n    focus(callback) {\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\n\n        this._window.focus();\n        if (callback) { callback(); }\n    }\n\n    resizeTo(width, height, callback) {\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\n        const size = new Position(width, height);\n\n        this._window.setSize(size.left, size.top);\n        if (callback) { callback(); }\n    }\n\n    moveTo(left, top, callback) {\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\n        const pos = new Position(left, top);\n\n        this._window._dockMoveTo(pos.left, pos.top);\n        if (callback) { callback(); }\n    }\n\n    moveBy(deltaLeft, deltaTop, callback) {\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\n        const bounds = this.getBounds();\n        const deltaPos = new Position(deltaLeft, deltaTop);\n\n        this._window._dockMoveTo(bounds.left + deltaPos.left, bounds.top + deltaPos.top);\n        if (callback) { callback(); }\n    }\n\n    setSize(width, height, callback) {\n        if (!this._ready) { throw new Error('setSize can\\'t be called on an unready window'); }\n        const size = new Size(width, height);\n\n        this._window.setSize(size.left, size.top);\n        if (callback) { callback(); }\n    }\n\n    setBounds(left, top, right, bottom, callback) {\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\n        const bounds = new BoundingBox(left, top, right, bottom);\n\n        this._window.setBounds({\n            x: bounds.left,\n            y: bounds.top,\n            width: bounds.getWidth(),\n            height: bounds.getHeight()\n        });\n        if (callback) { callback(); }\n    }\n\n    dock(other) {\n        this._window.dock(other._window.id);\n    }\n\n    undock() {\n        this._window.undock();\n    }\n\n    static getAll() {\n        return Array.from(windowmanager._windows.values());\n    }\n\n    static getByID(id) {\n        return windowmanager._windows.get(id);\n    }\n\n    static getCurrent() {\n        return Window.current;\n    }\n}\n\n// Handle current window in this context:\nWindow.current = new Window(currentWin);\n\n(function () {\n    // Setup handlers on this window:\n    let wX = 0;\n    let wY = 0;\n    let dragging = false;\n\n    window.addEventListener('focus', function () {\n        Window.current._window._dockFocus();\n    });\n\n    window.addEventListener('mousedown', function onDragStart(event) {\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\n            event.preventDefault();\n            dragging = true;\n            wX = event.screenX;\n            wY = event.screenY;\n            Window.current._window._dragStart();\n        }\n    });\n\n    window.addEventListener('touchstart', function (event) {\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\n            event.preventDefault();\n            dragging = true;\n            wX = event.touches[0].screenX;\n            wY = event.touches[0].screenY;\n            Window.current._window._dragStart();\n        }\n    });\n\n    window.addEventListener('mousemove', function (event) {\n        if (dragging) {\n            event.preventDefault();\n            Window.current._window._dragBy(event.screenX - wX, event.screenY - wY);\n        }\n    });\n\n    window.addEventListener('touchmove', function (event) {\n        if (dragging) {\n            event.preventDefault();\n            Window.current._window._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\n        }\n    });\n\n    function onDragEnd() {\n        if (dragging) {\n            event.preventDefault();\n            dragging = false;\n            Window.current._window._dragStop();\n        }\n    }\n    window.addEventListener('mouseup', onDragEnd);\n    window.addEventListener('touchend', onDragEnd);\n\n    // Add context menu:\n    let Menu = remote.Menu;\n    let MenuItem = remote.MenuItem;\n    let rightClickPosition = null;\n    let menu = new Menu();\n\n    menu.append(new MenuItem({\n        label: 'Reload',\n        accelerator: 'CmdOrCtrl+R',\n        click: function () {\n            Window.current._window.reload();\n        }\n    }));\n    menu.append(new MenuItem({\n        label: 'Reload app and restart children',\n        click: function () {\n            // Close ALL windows:\n            for (const window of windowmanager._windows.values()) {\n                window.close();\n            }\n            // Relaunch app:\n            remote.app.relaunch();\n            remote.app.exit(0);\n        }\n    }));\n    menu.append(new MenuItem({ type: 'separator' }));\n    menu.append(new MenuItem({\n        label: 'Inspect Element',\n        accelerator: 'CmdOrCtrl+Shift+I',\n        click: function () {\n            Window.current._window.inspectElement(rightClickPosition.x, rightClickPosition.y);\n        }\n    }));\n\n    window.addEventListener('contextmenu', function (event) {\n        event.preventDefault();\n        rightClickPosition = { x: event.x, y: event.y };\n        menu.popup(Window.current._window);\n    }, false);\n})();\n\nfunction resolveWindowWithID(id) {\n    let window = windowmanager._windows.get(id);\n\n    if (window) return window;\n\n    // Window isn't registered yet in windowmanager, so do so:\n    let electronWin = BrowserWindow.fromId(id);\n\n    if (electronWin !== null) {\n        return new Window(electronWin);\n    }\n}\n\n// Add other browser windows to global windows:\nfor (let other of BrowserWindow.getAllWindows()) {\n    resolveWindowWithID(other.id);\n}\n\nipcRenderer.on('window-create', function (event, otherID) {\n    windowmanager.emit('window-create', resolveWindowWithID(otherID));\n});\n\nwindowmanager.Window = Window;\nexport default Window;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/electron/renderer/Window.js","/* global fin */\nimport windowmanager from './global';\nimport Window from './Window';\n\nconst APP_UUID = 'app_uuid';\n\nwindowmanager.messagebus = (() => {\n    let wrappedListeners = {};\n    let windowWrappedListeners = {};\n\n    function wrapListener(listener) {\n        return (message) => {\n            const window = Window.getByID(message.winID);\n\n            // Don't execute listeners when the sender is the same as the listener:\n            if (window._id === Window.current._id) { return; }\n\n            listener.apply(window, message.args);\n            // TODO: Send response if response is expected\n        };\n    }\n\n    return {\n        send: (eventName, ...args) => {\n            // TODO: Check if ready? Dunno if needed\n            const curWin = Window.current;\n            const message = {\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n                winID: curWin._id,\n                event: eventName,\n                args: args // If the first arg is a window, it gets removed later.\n            };\n\n            if (args.length > 0 && args[0] instanceof Window) {\n                // Remove window from args in message:\n                const window = args.shift(); // args is by reference in message currently\n\n                // Don't execute listeners when the sender is the same as the listener:\n                if (window._id === curWin._id) { return; }\n\n                fin.desktop.InterApplicationBus.send(Window.current._window[APP_UUID], window._id,\n                                                        eventName, message);\n            } else {\n                // TODO: Possibly switch the below out for a loop through all windows?\n                fin.desktop.InterApplicationBus.send(Window.current._window[APP_UUID], eventName, message);\n            }\n        },\n        on: (eventName, window, listener) => {\n            if (listener === undefined) {\n                listener = window;\n                window = undefined;\n            }\n\n            const onMessage = wrapListener(listener);\n\n            if (window !== undefined) {\n                // Don't execute listeners when the sender is the same as the listener:\n                if (window._id === Window.current._id) { return; }\n\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\n\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n                winLisGroup[eventName].set(listener, onMessage);\n                fin.desktop.InterApplicationBus.subscribe(Window.current._window[APP_UUID], window._id,\n                                                            eventName, onMessage);\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n            } else {\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Map();\n                wrappedListeners[eventName].set(listener, onMessage);\n                fin.desktop.InterApplicationBus.subscribe(Window.current._window[APP_UUID], eventName, onMessage);\n            }\n        },\n        off: (eventName, window, listener) => {\n            if (listener === undefined) {\n                listener = window;\n                window = undefined;\n            }\n\n            if (window !== undefined) {\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\n\n                winLisGroup[eventName] = winLisGroup[eventName] || new Map();\n                // delete on a Map returns the deleted value (desired onMessage):\n                fin.desktop.InterApplicationBus.unsubscribe(Window.current._window[APP_UUID], window._window._id,\n                                                eventName, winLisGroup[eventName].delete(listener));\n            } else {\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n                // delete on a Map returns the deleted value (desired onMessage):\n                fin.desktop.InterApplicationBus.unsubscribe(Window.current._window[APP_UUID], eventName,\n                                                            wrappedListeners[eventName].delete(listener));\n            }\n        }\n    };\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/index.js","/* global fin */\nimport windowmanager from '../../global';\nimport readySync from '../ready';\nimport { EventHandler } from '../../utils/index';\n\nwindowmanager.runtime.name = 'OpenFin';\nwindowmanager.runtime.version = undefined;\nwindowmanager.runtime.isOpenFin = true;\n\nlet setVersion = readySync.ref(function (version) {\n    windowmanager.runtime.version = version;\n});\n\nfin.desktop.main(readySync.ref(function () {\n    fin.desktop.System.getVersion(setVersion); // TODO: Handle errorCallback\n\n    let app = fin.desktop.Application.getCurrent();\n    let mainWindow = app.getWindow().contentWindow;\n\n    if (mainWindow === window) {\n        windowmanager.runtime.isMain = true;\n        windowmanager._internalBus = new EventHandler(Object.keys(windowmanager._eventListeners));\n        windowmanager._windows = new Map();\n    } // children get the above in the constructor of the Window.\n\n    // Wire the internal bus to emit events on windowmanager:\n    windowmanager._internalBus.addPipe(windowmanager);\n}));\n\n// This is used to store info across windows:\n// Everything on here gets exported as windowmanager.\nexport default windowmanager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/global.js","/* global fin */\nimport windowmanager from './global';\nimport readySync from '../ready';\nimport { EventHandler, getUniqueWindowName, SyncCallback } from '../../utils/index';\nimport { BoundingBox, Position, Size, Vector } from '../../geometry/index';\n\nconst defaultConfig = {\n    defaultWidth: 600,\n    defaultHeight: 600,\n    frame: false,\n    resizable: true,\n    saveWindowState: false,\n    autoShow: true,\n    icon: location.href + 'favicon.ico'\n};\nconst configMap = {\n    title: 'name',\n    left: 'defaultLeft',\n    top: 'defaultTop',\n    width: 'defaultWidth',\n    height: 'defaultHeight'\n};\nconst acceptedEventHandlers = [\n    'ready',\n    'drag-start', 'drag-before', 'drag-stop',\n    'dock-before',\n    'move', 'move-before',\n    'resize-before', 'close', 'minimize'];\nlet currentWin;\n\nfunction _setupDOM() {\n    let thisWindow = this;\n\n    // TODO: Rewrite to remove setTimeout for the following:\n    function setWindows() {\n        if (thisWindow._window.contentWindow.windowmanager) {\n            thisWindow._window.contentWindow.windowmanager._windows = windowmanager._windows;\n            thisWindow._window.contentWindow.windowmanager._internalBus = windowmanager._internalBus;\n        } else {\n            setTimeout(setWindows, 5);\n        }\n    }\n    setWindows();\n\n    this._window.getBounds(function (bounds) {\n        bounds.right = bounds.left + bounds.width;\n        bounds.bottom = bounds.top + bounds.height;\n        thisWindow._bounds.set(new BoundingBox(bounds));\n    });\n\n    // Setup _window event listeners:\n    // TODO: look into moving these elsewhere, might not work if currentWin is closed, and thisWindow is not.\n    function onBoundsChange(event) {\n        event.right = event.left + event.width;\n        event.bottom = event.top + event.height;\n        thisWindow._bounds.set(new BoundingBox(event));\n\n        if (event.changeType !== 0) {\n            thisWindow.undock(); // Undock on resize. TODO: Allow resize with docking\n        }\n        if (event.changeType !== 1) {\n            thisWindow.emit('move'); // TODO: Pass what position it is at.\n        }\n    }\n    this._window.addEventListener('bounds-changing', onBoundsChange);\n    this._window.addEventListener('bounds-changed', onBoundsChange);\n\n    function onClose() {\n        // TODO: Is it possible that onClose might not be called when the window is closed?\n        //       What if this event is set up on a window that has closed already, and then this window closes?\n        thisWindow._isClosed = true;\n        windowmanager._windows.delete(thisWindow._id);\n\n        // Undock:\n        thisWindow.undock();\n\n        // Move children to parent:\n        const parent = thisWindow.getParent();\n\n        for (const child of thisWindow.getChildren()) {\n            // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\n            // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\n            child.setParent(parent);\n        }\n        thisWindow.setParent(undefined); // Remove from parent\n\n        thisWindow.emit('close');\n        windowmanager._internalBus.emit('window-close', thisWindow);\n        thisWindow._window = undefined;\n        // TODO: Clean up ALL listeners\n    }\n    this._window.addEventListener('closed', onClose);\n\n    function onMinimized() {\n        thisWindow.emit('minimize');\n    }\n    this._window.addEventListener('minimized', onMinimized);\n\n    // Setup title element:\n    this._titleEl = this._window.contentWindow.document.createElement('title');\n    this._titleEl.innerText = this._title;\n    this._window.contentWindow.document.head.appendChild(this._titleEl);\n\n    this._ready = true;\n    this.emit('ready');\n    windowmanager._internalBus.emit('window-create', this);\n};\n\nclass Window extends EventHandler {\n    constructor(config) {\n        // Call the parent constructor:\n        super(acceptedEventHandlers);\n\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n        const isArgConfig = (config.app_uuid === undefined);\n\n        // Setup private variables:\n        this._bounds = new BoundingBox();\n        this._ready = false;\n        // TODO: Identify current states.\n        this._isClosed = false;\n        this._isHidden = false;\n        this._isMinimized = false;\n        this._isMaximized = false;\n        this._dockedGroup = [this];\n        this._children = [];\n        this._parent = undefined;\n        this._title = undefined;\n\n        if (isArgConfig) {\n            for (const prop in config) {\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n                    config[configMap[prop]] = config[prop];\n                    delete config[prop];\n                }\n            }\n            for (const prop in defaultConfig) {\n                if (defaultConfig.hasOwnProperty(prop)) {\n                    config[prop] = config[prop] || defaultConfig[prop];\n                }\n            }\n            this._id = getUniqueWindowName();\n            this._title = config.name == null ? this._id : config.name;\n            config.name = this._id; // Need name to be unique\n\n            if (config.parent) {\n                config.parent._children.push(this);\n                this._parent = config.parent;\n                // TODO: Emit event 'child-added' on parent\n                delete config.parent;\n            }\n\n            windowmanager._windows.set(this._id, this);\n            this._window = new fin.desktop.Window(config, _setupDOM.bind(this), function (err) {\n                console.error(err, config);\n            });\n        } else {\n            this._id = config._id || config.name;\n            this._title = this._id;\n            this._window = config;\n            windowmanager._windows.set(this._id, this);\n            _setupDOM.call(this);\n        }\n\n        // TODO: Ensure docking system\n    }\n\n    isReady() {\n        return this._ready;\n    }\n\n    onReady(callback) {\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\n        if (this.isReady()) { return callback.call(this); }\n\n        this.once('ready', callback);\n    }\n\n    isClosed() {\n        return this._isClosed;\n    }\n\n    getPosition() {\n        return this._bounds.getPosition();\n    }\n\n    getWidth() {\n        return this._bounds.getWidth();\n    }\n\n    getHeight() {\n        return this._bounds.getHeight();\n    }\n\n    getSize() {\n        return this._bounds.getSize();\n    }\n\n    getBounds() {\n        return this._bounds.clone();\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\n\n        if (parent === this._parent) { return; }\n\n        if (this._parent) {\n            const index = this._parent._children.indexOf(this);\n\n            if (index >= 0) { this._parent._children.splice(index, 1); }\n            // TODO: Emit event 'child-removed' on current parent.\n        }\n\n        if (parent) {\n            this._parent = parent;\n            this._parent._children.push(this);\n            // TODO: Emit event 'child-added on parent'.\n        }\n    }\n\n    getChildren() {\n        return this._children.slice();\n    }\n\n    addChild(child) {\n        child.setParent(this);\n    }\n\n    getTitle() {\n        return this._title;\n    }\n\n    setTitle(newTitle) {\n        if (!newTitle) { throw new Error('setTitle requires one argument of type String'); }\n        this._titleEl.innerText = this._title = newTitle;\n    }\n\n    isHidden() {\n        return this._isHidden;\n    }\n\n    isShown() {\n        return !this._isHidden;\n    }\n\n    isMinimized() {\n        return this._isMinimized;\n    }\n\n    isMaximized() {\n        return this._isMaximized;\n    }\n\n    isRestored() {\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\n    }\n\n    close(callback) {\n        if (this.isClosed()) { return callback && callback(); }\n        this._window.close(callback);\n    }\n\n    minimize(callback) {\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\n\n        callback = new SyncCallback(callback);\n        for (let window of this._dockedGroup) {\n            window._isMinimized = true;\n            window._window.minimize(callback.ref());\n        }\n    }\n\n    maximize(callback) {\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\n\n        this._isMaximized = true;\n        this._window.maximize(callback);\n    }\n\n    show(callback) {\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\n\n        callback = new SyncCallback(callback);\n        for (let window of this._dockedGroup) {\n            window._isHidden = false;\n            window._window.show(callback.ref());\n        }\n    }\n\n    hide(callback) {\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\n\n        callback = new SyncCallback(callback);\n        for (let window of this._dockedGroup) {\n            window._isHidden = true;\n            window._window.hide(callback.ref());\n        }\n    }\n\n    restore(callback) {\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\n\n        callback = new SyncCallback(callback);\n        for (let window of this._dockedGroup) {\n            window._isHidden = false;\n            window._isMinimized = false;\n            window._isMaximized = false;\n            window._window.restore(callback.ref());\n        }\n    }\n\n    bringToFront(callback) {\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\n        let thisWindow = this;\n\n        let beforeCallback = new SyncCallback(function () {\n            thisWindow._window.bringToFront(callback);\n        });\n\n        for (let window of this._dockedGroup) {\n            if (window !== this) {\n                window._window.bringToFront(beforeCallback.ref());\n            }\n        }\n    }\n\n    focus(callback) {\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\n        let thisWindow = this;\n\n        let beforeCallback = new SyncCallback(function () {\n            thisWindow._window.focus(callback);\n        });\n\n        for (let window of this._dockedGroup) {\n            if (window !== this) {\n                window._window.focus(beforeCallback.ref());\n            }\n        }\n    }\n\n    resizeTo(width, height, callback) {\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\n        if (!this.emit('resize-before')) { return; } // Allow preventing resize\n        let size = new Position(width, height);\n\n        this._window.resizeTo(size.left, size.top, 'top-left', callback);\n    }\n\n    moveTo(left, top, callback) {\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\n        if (!this.emit('move-before')) { return; } // Allow preventing move\n        let deltaPos = (new Position(left, top)).subtract(this.getPosition());\n\n        callback = new SyncCallback(callback);\n        for (let window of this._dockedGroup) {\n            let pos = window.getPosition().add(deltaPos);\n\n            window._bounds.moveTo(pos);\n            window._window.moveTo(pos.left, pos.top, callback.ref());\n        }\n    }\n\n    moveBy(deltaLeft, deltaTop, callback) {\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\n        if (!this.emit('move-before')) { return; } // Allow preventing move\n        let deltaPos = new Position(deltaLeft, deltaTop);\n\n        callback = new SyncCallback(callback);\n        for (let window of this._dockedGroup) {\n            let pos = window.getPosition().add(deltaPos);\n\n            window._bounds.moveTo(pos);\n            window._window.moveTo(pos.left, pos.top, callback.ref());\n        }\n    }\n\n    setSize(width, height, callback) {\n        if (!this._ready) { throw new Error('setSize can\\'t be called on an unready window'); }\n        const size = new Size(width, height);\n\n        this._window.resizeTo(size.left, size.top, 'top-left', callback);\n    }\n\n    setBounds(left, top, right, bottom, callback) {\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\n        let bounds = new BoundingBox(left, top, right, bottom);\n\n        this._window.setBounds(bounds.left, bounds.top, bounds.right, bounds.bottom, callback);\n    }\n\n    dock(other) {\n        if (!this.emit('dock-before')) { return; } // Allow preventing dock\n        if (other === undefined) { return; } // Failed to find other. TODO: Return error\n\n        // If other is already in the group, return:\n        if (this._dockedGroup.indexOf(other) >= 0) { return; }\n\n        // Loop through all windows in otherGroup and add them to this's group:\n        for (let otherWin of other._dockedGroup) {\n            this._dockedGroup.push(otherWin);\n            // Sharing the array between window objects makes it easier to manage:\n            otherWin._dockedGroup = this._dockedGroup;\n        }\n\n        // TODO: Check if otherGroup is touching\n    }\n\n    undock(other) {\n        // Check to see if window is already undocked:\n        if (this._dockedGroup.length === 1) { return; }\n\n        // Undock this:\n        this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n        this._dockedGroup = [this];\n\n        // TODO: Redock those still touching, EXCEPT 'this'.\n    }\n\n    _dragStart() {\n        if (!this.emit('drag-start')) { return; } // Allow preventing drag\n        for (let window of this._dockedGroup) {\n            window._dragStartPos = window.getPosition();\n        }\n    }\n\n    _dragBy(deltaLeft, deltaTop) {\n        if (!this.emit('drag-before')) { return; } // Allow preventing drag\n        // Perform Snap:\n        const thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft,\n                                                    this._dragStartPos.top + deltaTop);\n        let snapDelta = new Vector(NaN, NaN);\n\n        for (const other of windowmanager._windows.values()) {\n            if (other._dockedGroup !== this._dockedGroup) {\n                snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\n            }\n        }\n        deltaLeft += snapDelta.left || 0;\n        deltaTop += snapDelta.top || 0;\n\n        for (let other of this._dockedGroup) {\n            let pos = other._dragStartPos;\n\n            // If other doesn't have a drag position, start it:\n            if (pos === undefined) {\n                pos = other._dragStartPos = other.getPosition();\n                pos.left -= deltaLeft;\n                pos.top -= deltaTop;\n            }\n\n            other._window.moveTo(pos.left + deltaLeft, pos.top + deltaTop);\n        }\n    }\n\n    _dragStop() {\n        // Dock to those it snapped to:\n        const thisBounds = this.getBounds();\n\n        for (const other of windowmanager._windows.values()) {\n            if (thisBounds.isTouching(other.getBounds())) {\n                this.dock(other);\n            }\n        }\n\n        for (let window of this._dockedGroup) {\n            delete window._dragStartPos;\n        }\n\n        this.emit('drag-stop');\n    }\n\n    static getAll() {\n        return Array.from(windowmanager._windows.values());\n    }\n\n    static getByID(id) {\n        return windowmanager._windows.get(id);\n    }\n\n    static getCurrent() {\n        return Window.current;\n    }\n}\n\nfunction setupCurrentWindow() {\n    Window.current = windowmanager._windows.get(currentWin.name) || new Window(currentWin);\n\n    // Setup handlers on this window:\n    let wX = 0;\n    let wY = 0;\n    let dragging = false;\n\n    window.addEventListener('mousedown', function onDragStart(event) {\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\n            event.preventDefault();\n            dragging = true;\n            wX = event.screenX;\n            wY = event.screenY;\n            Window.current._dragStart();\n        }\n    });\n\n    window.addEventListener('touchstart', function (event) {\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\n            event.preventDefault();\n            dragging = true;\n            wX = event.touches[0].screenX;\n            wY = event.touches[0].screenY;\n            Window.current._dragStart();\n        }\n    });\n\n    window.addEventListener('mousemove', function (event) {\n        if (dragging) {\n            event.preventDefault();\n            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\n        }\n    });\n\n    window.addEventListener('touchmove', function (event) {\n        if (dragging) {\n            event.preventDefault();\n            Window.current._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\n        }\n    });\n\n    function onDragEnd() {\n        if (dragging) {\n            event.preventDefault();\n            dragging = false;\n            Window.current._dragStop();\n        }\n    }\n    window.addEventListener('mouseup', onDragEnd);\n    window.addEventListener('touchend', onDragEnd);\n}\n\n// Handle current window in this context:\n// TODO: Rewrite to remove setTimeout for the following:\nfin.desktop.main(readySync.ref(function () {\n    currentWin = fin.desktop.Window.getCurrent();\n    let currentReady = readySync.ref(setupCurrentWindow);\n\n    function getCurrent() {\n        if (windowmanager._windows) {\n            currentReady();\n        } else {\n            setTimeout(getCurrent, 5);\n        }\n    }\n    getCurrent();\n}));\n\nwindowmanager.Window = Window;\nexport default Window;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/openfin/Window.js","import windowmanager from './global';\nimport readySync from '../ready';\nimport Window from './Window';\n\n/**\n * Message bus for application.\n * @namespace\n * @alias messagebus\n */\nwindowmanager.messagebus = (() => {\n    // TODO: Utilize iframe communication? Or use messagebus that is currently shared in setup.js?\n    let wrappedListeners = {};\n    let windowWrappedListeners = {};\n\n    window.addEventListener('message', function (event) {\n        const message = event.data;\n        const win = Window.getByID(message.winID);\n\n        // Don't execute listeners when the sender is the same as the listener:\n        if (win._id === Window.current._id) { return; }\n\n        if (windowWrappedListeners[message.event] != null) {\n            // Check to see if the called window is being listened to directly:\n            if (windowWrappedListeners[message.event][message.winID] != null) {\n                for (const listener of windowWrappedListeners[message.event][message.winID]) {\n                    listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\n                }\n            }\n        }\n        if (wrappedListeners[message.event] != null) {\n            for (const listener of wrappedListeners[message.event]) {\n                listener.apply(win, message.args); // TODO: Make apply's this point to window who sent messsage\n            }\n        }\n    }, false);\n\n    return {\n        /**\n         * @method\n         * @alias messagebus.send\n         * @param {String} eventName - the event to send to\n         * @param {Window} [window=undefined] - the target window to send to (if not specified, sends to all windows)\n         * @param {...*} args Arguments to send to listeners\n         */\n        send: (eventName, ...args) => {\n            // TODO: Check if ready? Dunno if needed\n            // TODO: Do we need to add a way to identify if a return is needed?\n            const curWin = Window.current;\n            const message = {\n                id: 0, // TODO: Randomly generate a unique id to avoid collision!\n                winID: curWin._id,\n                event: eventName,\n                args: args // If the first arg is a window, it gets removed later.\n            };\n\n            if (args.length > 0 && args[0] instanceof Window) {\n                // Remove window from args in message:\n                const window = args.shift(); // args is by reference in message currently\n\n                // Don't execute listeners when the sender is the same as the listener:\n                if (window._id === curWin._id) { return; }\n                // TODO: Save the id of message so we can get the response\n                window._window.contentWindow.postMessage(message, '*');\n            } else {\n                for (const window of windowmanager._windows.values()) {\n                    if (curWin !== window) { // Don't send to current window\n                        window._window.contentWindow.postMessage(message, '*');\n                    }\n                }\n            }\n        },\n        /**\n         * @method\n         * @alias messagebus.on\n         * @param {String} eventName - the event to listen to\n         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\n         * @param {Function} listener - the callback function to call when event is triggered for this window\n         */\n        on: (eventName, window, listener) => {\n            if (listener === undefined) {\n                listener = window;\n                window = undefined;\n            }\n\n            if (window !== undefined) {\n                // Don't execute listeners when the sender is the same as the listener:\n                if (window._id === Window.current._id) { return; }\n                // Replace window.name with some way to identify the unique window\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\n\n                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\n                winLisGroup[eventName].add(listener);\n                // TODO: On window close, clear subscriptions in windowWrappedListeners!\n            } else {\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n                wrappedListeners[eventName].add(listener);\n            }\n        },\n        /**\n         * @method\n         * @alias messagebus.off\n         * @param {String} eventName - the event to remove listener from\n         * @param {Window} [window=undefined] - the window to listen to events from (if null, listens to all windows)\n         * @param {Function} listener - the callback function to call when event is triggered for this window\n         */\n        off: (eventName, window, listener) => {\n            if (listener === undefined) {\n                listener = window;\n                window = undefined;\n            }\n\n            if (window !== undefined) {\n                // Replace window.name with some way to identify the unique window\n                const winLisGroup = (windowWrappedListeners[window._id] = windowWrappedListeners[window._id] || {});\n\n                winLisGroup[eventName] = winLisGroup[eventName] || new Set();\n                winLisGroup[eventName].delete(listener);\n            } else {\n                wrappedListeners[eventName] = wrappedListeners[eventName] || new Set();\n                wrappedListeners[eventName].delete(listener);\n            }\n        }\n    };\n})();\n\n// Notify everyone that windowmanager is setup for this window:\nreadySync._deref();\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/index.js","import windowmanager from '../../global';\nimport { EventHandler } from '../../utils/index';\n\nfunction getBrowserInfo() {\n    // Credit: http://www.gregoryvarghese.com/how-to-get-browser-name-and-version-via-javascript/\n    let ua = navigator.userAgent;\n    let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n    let tem;\n\n    if (/trident/i.test(M[1])) {\n        tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n        return { name: 'IE', version: (tem[1] || '') };\n    }\n    if (M[1] === 'Chrome') {\n        tem = ua.match(/\\bOPR\\/(\\d+)/);\n        if (tem !== null) { return { name: 'Opera', version: tem[1] }; }\n        tem = ua.match(/\\bedge\\/(\\d+)/i);\n        if (tem !== null) { return { name: 'Edge', version: tem[1] }; }\n    }\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n    if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) { M.splice(1, 1, tem[1]); }\n    return {\n        name: M[0],\n        version: M[1]\n    };\n}\n\nlet browser = getBrowserInfo();\n\nwindowmanager.runtime.name = browser.name;\nwindowmanager.runtime.version = browser.version;\nwindowmanager.runtime.isBrowser = true;\nwindowmanager.runtime.isMain = (window.parent === window);\n\ntry {\n    window.parent.document;\n} catch (e) {\n    // If the above access errors out, it's due to CORS violation.\n    // So assume this JavaScript window is the top-level window:\n    windowmanager.runtime.isMain = true;\n}\n\nif (windowmanager.runtime.isMain) {\n    // This is the main/root window!\n    let nextZIndex = 1000; // TODO: Recycle Z-Indexes! In case of a (probably never) overflow!\n\n    // The following is to fix Edge not sharing Map values across windows:\n    class _Map {\n        constructor() {\n            this._map = Object.create(null);\n        }\n\n        values() {\n            let values = Object.keys(this._map);\n\n            for (let index = 0; index < values.length; index += 1) {\n                values[index] = this._map[values[index]];\n            }\n\n            return values;\n        }\n\n        set(key, value) {\n            this._map[key] = value;\n        }\n\n        get(key) {\n            return this._map[key];\n        }\n\n        delete(key) {\n            delete this._map[key];\n        }\n    }\n\n    windowmanager._launcher = window;\n    windowmanager._internalBus = new EventHandler(Object.keys(windowmanager._eventListeners));\n    windowmanager._windows = new _Map();\n\n    windowmanager._getNextZIndex = () => {\n        nextZIndex += 1;\n        return nextZIndex;\n    };\n} else {\n    // This is a child window of root!\n    windowmanager._launcher = window.parent.windowmanager._launcher || window.parent;\n    windowmanager._internalBus = window.parent.windowmanager._internalBus;\n    windowmanager._windows = window.parent.windowmanager._windows;\n    windowmanager._getNextZIndex = window.parent.windowmanager._getNextZIndex;\n}\n\n// Wire the internal bus to emit events on windowmanager:\nwindowmanager._internalBus.addPipe(windowmanager);\n\n// This is used to store info across windows:\n// Everything on here gets exported as windowmanager.\nexport default windowmanager;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/global.js","import windowmanager from './global';\nimport { EventHandler, getUniqueWindowName } from '../../utils/index';\nimport { BoundingBox, Position, Size, Vector } from '../../geometry/index';\n\nconst defaultConfig = {\n    width: 600,\n    height: 600,\n    frame: false,\n    resizable: true,\n    saveWindowState: false,\n    autoShow: true,\n    icon: location.href + 'favicon.ico',\n    url: '.',\n    minWidth: 100,\n    minHeight: 100,\n    maxWidth: Infinity,\n    maxHeight: Infinity\n};\nconst configMap = {\n};\nconst acceptedEventHandlers = [\n    'ready',\n    'drag-start', 'drag-before', 'drag-stop',\n    'dock-before',\n    'move', 'move-before',\n    'resize-before', 'close', 'minimize'];\nconst transformPropNames = ['-ms-transform', '-moz-transform', '-o-transform',\n    '-webkit-transform', 'transform'];\n\n/**\n * @callback Callback\n * @param {String|null} error - String on error, or null if no error\n * @param {Object|null} result - Object on success, or null if error\n */\n\n/**\n * A Window class.\n * @extends EventHandler\n */\nclass Window extends EventHandler {\n    /**\n     * Wraps a window object.\n     * @param {Object} config - Configuration\n     */\n    constructor(config) {\n        // Call the parent constructor:\n        super(acceptedEventHandlers);\n\n        config = config || {}; // If no arguments are passed, assume we are creating a default blank window\n        const isArgConfig = !(config instanceof window.Window);\n\n        // Setup private variables:\n        this._ready = false;\n        // TODO: Identify current states.\n        this._isClosed = false;\n        this._isHidden = false;\n        this._isMinimized = false;\n        this._isMaximized = false;\n        this._dockedGroup = [this];\n        this._children = []; // TODO: Add way to remove or change heirarchy.\n        this._parent = undefined;\n        this._title = undefined;\n        this._id = getUniqueWindowName();\n\n        if (isArgConfig) {\n            for (const prop in config) {\n                if (config.hasOwnProperty(prop) && configMap[prop] !== undefined) {\n                    config[configMap[prop]] = config[prop];\n                    delete config[prop];\n                }\n            }\n            for (const prop in defaultConfig) {\n                if (defaultConfig.hasOwnProperty(prop)) {\n                    config[prop] = config[prop] || defaultConfig[prop];\n                }\n            }\n            this._title = config.title == null ? this._id : config.title;\n\n            if (config.parent) {\n                config.parent._children.push(this);\n                this._parent = config.parent;\n                // TODO: Emit event 'child-added' on parent\n                delete config.parent;\n            }\n\n            this._minSize = new BoundingBox(config.minWidth, config.minHeight);\n            this._maxSize = new BoundingBox(config.maxWidth, config.maxHeight);\n\n            let newWindow = windowmanager._launcher.document.createElement('iframe');\n\n            newWindow.src = config.url;\n            newWindow.style.position = 'absolute';\n            if (!Number.isFinite(config.left)) {\n                config.left = (windowmanager._launcher.innerWidth - config.width) / 2;\n            }\n            newWindow.style.left = config.left + 'px';\n            if (!Number.isFinite(config.top)) {\n                config.top = (windowmanager._launcher.innerHeight - config.height) / 2;\n            }\n            newWindow.style.top = config.top + 'px';\n            newWindow.style.width = config.width + 'px';\n            newWindow.style.height = config.height + 'px';\n            newWindow.style.minWidth = this._minSize.left + 'px';\n            newWindow.style.minHeight = this._minSize.top + 'px';\n            newWindow.style.maxWidth = this._maxSize.left + 'px';\n            newWindow.style.maxHeight = this._maxSize.top + 'px';\n            newWindow.style.margin = 0;\n            newWindow.style.padding = 0;\n            newWindow.style.border = 0;\n            newWindow.style.resize = 'both';\n            newWindow.style.overflow = 'auto';\n            windowmanager._launcher.document.body.appendChild(newWindow);\n\n            this._window = newWindow;\n            windowmanager._windows.set(this._id, this);\n            this._ready = true;\n            this.emit('ready');\n            windowmanager._internalBus.emit('window-create', this);\n            this.bringToFront();\n            this.focus();\n        } else {\n            this._minSize = new BoundingBox(defaultConfig.minWidth, defaultConfig.minHeight);\n            this._maxSize = new BoundingBox(defaultConfig.maxWidth, defaultConfig.maxHeight);\n            this._window = config.document.body;\n            windowmanager._windows.set(this._id, this);\n            this._ready = true;\n        }\n    }\n\n    /**\n     * Returns true if the {@link Window} instance is created, not closed, and ready for method calls.\n     * @returns {Boolean}\n     */\n    isReady() {\n        return this._ready;\n    }\n\n    /**\n     * Calls a callback when window is ready and setup.\n     * @param {Callback=}\n     */\n    onReady(callback) {\n        if (this.isClosed()) { throw new Error('onReady can\\'t be called on a closed window'); }\n        if (this.isReady()) { return callback.call(this); }\n\n        this.once('ready', callback);\n    }\n\n    /**\n     * Returns whether window has been closed already.\n     * @returns {Boolean}\n     */\n    isClosed() {\n        return this._isClosed;\n    }\n\n    /**\n     * Returns window's current position.\n     * @returns {Vector}\n     */\n    getPosition() {\n        return new Position(this._window.getBoundingClientRect());\n    }\n\n    getMinWidth() {\n        return this._minSize.left;\n    }\n\n    /**\n     * Returns window's width.\n     * @returns {Number}\n     */\n    getWidth() {\n        return this._window.getBoundingClientRect().width;\n    }\n\n    getMaxWidth() {\n        return this._maxSize.left;\n    }\n\n    getMinHeight() {\n        return this._minSize.top;\n    }\n\n    /**\n     * Returns window's height.\n     * @returns {Number}\n     */\n    getHeight() {\n        return this._window.getBoundingClientRect().height;\n    }\n\n    getMaxHeight() {\n        return this._maxSize.top;\n    }\n\n    getMinSize() {\n        return this._minSize.clone();\n    }\n\n    /**\n     * Returns window's size.\n     * @returns {Size}\n     */\n    getSize() {\n        let box = this._window.getBoundingClientRect();\n\n        return new Size(box.width, box.height);\n    }\n\n    getMaxSize() {\n        return this._maxSize.clone();\n    }\n\n    /**\n     * Returns window's bounding box.\n     * @returns {BoundingBox}\n     */\n    getBounds() {\n        return new BoundingBox(this._window.getBoundingClientRect());\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        // TODO: Execute appropriate checks (if not closed, and is this new parent a window)\n        if (parent === this._parent) { return; }\n\n        if (this._parent) {\n            const index = this._parent._children.indexOf(this);\n\n            if (index >= 0) { this._parent._children.splice(index, 1); }\n            // TODO: Emit event 'child-removed' on current parent.\n        }\n\n        if (parent) {\n            this._parent = parent;\n            this._parent._children.push(this);\n            // TODO: Emit event 'child-added on parent'.\n        }\n    }\n\n    getChildren() {\n        return this._children.slice();\n    }\n\n    addChild(child) {\n        child.setParent(this);\n    }\n\n    /**\n     * Returns window's title.\n     * @returns {String}\n     */\n    getTitle() {\n        return this._title;\n    }\n\n    /**\n     * Sets window's title.\n     * @param {String}\n     */\n    setTitle(title) {\n        if (!title) { throw new Error('setTitle requires one argument of type String'); }\n        this._title = title;\n    }\n\n    /**\n     * Returns true if window is hidden.\n     * @returns {Boolean}\n     */\n    isHidden() {\n        return this._isHidden;\n    }\n\n    /**\n     * Returns true if window is not hidden.\n     * @returns {Boolean}\n     */\n    isShown() {\n        return !this._isHidden;\n    }\n\n    /**\n     * Returns true if window is minimized.\n     * @returns {Boolean}\n     */\n    isMinimized() {\n        return this._isMinimized;\n    }\n\n    /**\n     * Returns true if window is maximized.\n     * @returns {Boolean}\n     */\n    isMaximized() {\n        return this._isMaximized;\n    }\n\n    /**\n     * Returns true if window is not hidden or minimize or maximized.\n     * @returns {Boolean}\n     */\n    isRestored() {\n        return this.isShown() && !this.isMinimized() && !this.isMaximized();\n    }\n\n    /**\n     * Closes the window instance.\n     * @param {Callback=}\n     */\n    close(callback) {\n        if (this.isClosed()) { return callback && callback(); }\n\n        this._window.parentElement.removeChild(this._window);\n        windowmanager._windows.delete(this._id);\n\n        // Undock:\n        this.undock();\n\n        // Move children to parent:\n        const parent = this.getParent();\n\n        for (const child of this.getChildren()) {\n            // We use getChildren to have a copy of the list, so child.setParent doesn't modify this loop's list!\n            // TODO: Optimize this loop, by not making a copy of children, and not executing splice in each setParent!\n            child.setParent(parent);\n        }\n        this.setParent(undefined); // Remove from parent\n\n        this._isClosed = true;\n        if (callback) { callback(); }\n        this.emit('close');\n        windowmanager._internalBus.emit('window-close', this);\n    }\n\n    /**\n     * Minimizes the window instance.\n     * @param {Callback=}\n     */\n    minimize(callback) {\n        if (!this._ready) { throw new Error('minimize can\\'t be called on an unready window'); }\n\n        // TODO: What do we do on minimize in this runtime?\n        for (let window of this._dockedGroup) {\n            window._isMinimized = true;\n            window.emit('minimize');\n        }\n    }\n\n    /**\n     * Maximizes the window instance.\n     * @param {Callback=}\n     */\n    maximize(callback) {\n        if (!this._ready) { throw new Error('maximize can\\'t be called on an unready window'); }\n\n        this._restoreBounds = this.getBounds();\n        this._window.style.left = 0;\n        this._window.style.top = 0;\n        this._window.style.width = '100%';\n        this._window.style.height = '100%';\n        this._isMaximized = true;\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Unhides the window instance.\n     * @param {Callback=}\n     */\n    show(callback) {\n        if (!this._ready) { throw new Error('show can\\'t be called on an unready window'); }\n\n        for (let window of this._dockedGroup) {\n            window._window.style.display = '';\n            window._isHidden = false;\n        }\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Hides the window instance.\n     * @param {Callback=}\n     */\n    hide(callback) {\n        if (!this._ready) { throw new Error('hide can\\'t be called on an unready window'); }\n\n        for (let window of this._dockedGroup) {\n            window._window.style.display = 'none';\n            window._isHidden = true;\n        }\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Restores the window instance from the minimized or maximized states.\n     * @param {Callback=}\n     */\n    restore(callback) {\n        if (!this._ready) { throw new Error('restore can\\'t be called on an unready window'); }\n\n        for (let window of this._dockedGroup) {\n            if (window._isMaximized) {\n                window._window.style.left = window._restoreBounds.left + 'px';\n                window._window.style.top = window._restoreBounds.top + 'px';\n                window._window.style.width = window._restoreBounds.getWidth() + 'px';\n                window._window.style.height = window._restoreBounds.getHeight() + 'px';\n                window._isHidden = false;\n                window._isMinimized = false;\n                window._isMaximized = false;\n            }\n        }\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Brings the window instance to the front of all windows.\n     * @param {Callback=}\n     */\n    bringToFront(callback) {\n        if (!this._ready) { throw new Error('bringToFront can\\'t be called on an unready window'); }\n\n        for (let window of this._dockedGroup) {\n            if (window !== this) {\n                window._window.style['z-index'] = windowmanager._getNextZIndex();\n            }\n        }\n        this._window.style['z-index'] = windowmanager._getNextZIndex();\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Sets focus to the window instance.\n     * @param {Callback=}\n     */\n    focus(callback) {\n        if (!this._ready) { throw new Error('focus can\\'t be called on an unready window'); }\n\n        for (let window of this._dockedGroup) {\n            if (window !== this) { window._window.contentWindow.focus(); }\n        }\n        this._window.contentWindow.focus();\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Resizes the window instance.\n     * @param {Number} width\n     * @param {Number} height\n     * @param {Callback=}\n     */\n    resizeTo(width, height, callback) {\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\n        if (!this.emit('resize-before')) { return; } // Allow preventing resize\n        let size = new Position(width, height);\n\n        this.undock();\n        this._window.width = size.left + 'px';\n        this._window.height = size.top + 'px';\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Moves the window instance.\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Callback=}\n     */\n    moveTo(left, top, callback) {\n        if (!this._ready) { throw new Error('moveTo can\\'t be called on an unready window'); }\n        if (!this.emit('move-before')) { return; } // Allow preventing move\n        let deltaPos = (new Position(left, top)).subtract(this.getPosition());\n\n        for (let window of this._dockedGroup) {\n            let pos = window.getPosition().add(deltaPos);\n\n            window._window.style.left = pos.left + 'px';\n            window._window.style.top = pos.top + 'px';\n        }\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Moves the window instance relative to its current position.\n     * @param {Number} deltaLeft\n     * @param {Number} deltaTop\n     * @param {Callback=}\n     */\n    moveBy(deltaLeft, deltaTop, callback) {\n        if (!this._ready) { throw new Error('moveBy can\\'t be called on an unready window'); }\n        if (!this.emit('move-before')) { return; } // Allow preventing move\n        let deltaPos = new Position(deltaLeft, deltaTop);\n\n        for (let window of this._dockedGroup) {\n            let pos = window.getPosition().add(deltaPos);\n\n            window._window.style.left = pos.left + 'px';\n            window._window.style.top = pos.top + 'px';\n        }\n        if (callback) { callback(); }\n        for (let window of this._dockedGroup) {\n            window.emit('move');\n        }\n    }\n\n    setMinSize(width, height, callback) {\n        if (!this._ready) { throw new Error('setMinSize can\\'t be called on an unready window'); }\n        const size = new Size(width, height);\n\n        this.undock(); // TODO: Support changing size when docked.\n        this._minSize.left = size.left;\n        this._minSize.top = size.top;\n        this._window.style.minWidth = this._minSize.left + 'px';\n        this._window.style.minHeight = this._minSize.top + 'px';\n        if (this.getWidth() < size.left || this.getHeight() < size.top) {\n            // Resize window to meet new min size:\n            // TODO: Take into account transform?\n            this._window.style.width = Math.max(this.getWidth(), size.left) + 'px';\n            this._window.style.height = Math.max(this.getHeight(), size.top) + 'px';\n            if (callback) { callback(); }\n            this.emit('resize');\n        } else {\n            if (callback) { callback(); }\n        }\n    }\n\n    setSize(width, height, callback) {\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\n        const size = new Size(width, height);\n\n        this.undock(); // TODO: Support changing size when docked.\n        this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, size.left)) + 'px';\n        this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, size.top)) + 'px';\n        // Clear transform:\n        for (let transformPropName of transformPropNames) {\n            this._window.style[transformPropName] = '';\n        }\n        if (callback) { callback(); }\n        this.emit('resize');\n    }\n\n    forceScaledSize(width, height, callback) {\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\n        const size = new Size(Math.min(this._maxSize.left, Math.max(this._minSize.left, width)),\n                            Math.min(this._maxSize.top, Math.max(this._minSize.top, height)));\n\n        this.undock(); // TODO: Support changing size when docked.\n        this._window.style.width = size.left + 'px';\n        this._window.style.height = size.top + 'px';\n        // TODO: Calc transform:\n        let transform = Math.min(width / size.left, height / size.top);\n\n        for (let transformPropName of transformPropNames) {\n            this._window.style[transformPropName] = 'scale(' + transform + ')';\n        }\n        if (callback) { callback(); }\n        this.emit('resize');\n    }\n\n    setMaxSize(width, height, callback) {\n        if (!this._ready) { throw new Error('setMaxSize can\\'t be called on an unready window'); }\n        const size = new Size(width, height);\n\n        this.undock(); // TODO: Support changing size when docked.\n        this._maxSize.left = size.left;\n        this._maxSize.top = size.top;\n        this._window.style.maxWidth = this._maxSize.left + 'px';\n        this._window.style.maxHeight = this._maxSize.top + 'px';\n        if (this.getWidth() > size.left || this.getHeight() > size.top) {\n            // Resize window to meet new min size:\n            // TODO: Take into account transform?\n            this._window.style.width = Math.min(this.getWidth(), size.left) + 'px';\n            this._window.style.height = Math.min(this.getHeight(), size.top) + 'px';\n            // Clear transform:\n            for (let transformPropName of transformPropNames) {\n                this._window.style[transformPropName] = '';\n            }\n            if (callback) { callback(); }\n            this.emit('resize');\n        } else {\n            if (callback) { callback(); }\n        }\n    }\n\n    /**\n     * Sets the bounds of the window instance.\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} right\n     * @param {Number} bottom\n     * @param {Callback=}\n     */\n    setBounds(left, top, right, bottom, callback) {\n        if (!this._ready) { throw new Error('resizeTo can\\'t be called on an unready window'); }\n        let bounds = new BoundingBox(left, top, right, bottom);\n\n        this.undock(); // TODO: Support changing size when docked.\n        this._window.style.left = bounds.left + 'px';\n        this._window.style.top = bounds.top + 'px';\n        // TODO: Take into account transform?\n        this._window.style.width = Math.min(this._maxSize.left, Math.max(this._minSize.left, bounds.getWidth())) + 'px';\n        this._window.style.height = Math.min(this._maxSize.top, Math.max(this._minSize.top, bounds.getHeight())) + 'px';\n        // Clear transform:\n        for (let transformPropName of transformPropNames) {\n            this._window.style[transformPropName] = '';\n        }\n        // TODO: Events\n        if (callback) { callback(); }\n    }\n\n    /**\n     * Force docking this window to another. They don't need to be touching.\n     * @param {Window}\n     * @param {Callback=}\n     */\n    dock(other) {\n        // TODO: Check if otherGroup is touching\n        if (!this.emit('dock-before')) { return; } // Allow preventing dock\n        if (other === undefined) { return; } // Failed to find other. TODO: Return error\n\n        // If other is already in the group, return:\n        if (this._dockedGroup.indexOf(other) >= 0) { return; }\n\n        // Loop through all windows in otherGroup and add them to this's group:\n        for (let otherWin of other._dockedGroup) {\n            this._dockedGroup.push(otherWin);\n            // Sharing the array between window objects makes it easier to manage:\n            otherWin._dockedGroup = otherWin._dockedGroup;\n        }\n    }\n\n    /**\n     * Force undocking this window from it's group.<br>\n     * TODO: Redock those still touching, EXCEPT 'this'.\n     * @param {Window}\n     * @param {Callback=}\n     */\n    undock(other) {\n        // Check to see if window is already undocked:\n        if (this._dockedGroup.length === 1) { return; }\n\n        // Undock this:\n        this._dockedGroup.splice(this._dockedGroup.indexOf(this), 1);\n        this._dockedGroup = [this];\n\n        // TODO: Redock those still touching, EXCEPT 'this'.\n    }\n\n    _dragStart() {\n        if (!this.emit('drag-start')) { return; } // Allow preventing drag\n        this.restore();\n        for (let window of this._dockedGroup) {\n            window._dragStartPos = window.getPosition();\n        }\n    }\n\n    _dragBy(deltaLeft, deltaTop) {\n        if (!this.emit('drag-before')) { return; } // Allow preventing drag\n        // Perform Snap:\n        const thisBounds = this.getBounds().moveTo(this._dragStartPos.left + deltaLeft,\n                                                    this._dragStartPos.top + deltaTop);\n        let snapDelta = new Vector(NaN, NaN);\n\n        for (const other of windowmanager._windows.values()) {\n            if (other._dockedGroup !== this._dockedGroup) {\n                snapDelta.setMin(thisBounds.getSnapDelta(other.getBounds()));\n            }\n        }\n        deltaLeft += snapDelta.left || 0;\n        deltaTop += snapDelta.top || 0;\n\n        for (let other of this._dockedGroup) {\n            let pos = other._dragStartPos;\n\n            // If other doesn't have a drag position, start it:\n            if (pos === undefined) {\n                pos = other._dragStartPos = other.getPosition();\n                pos.left -= deltaLeft;\n                pos.top -= deltaTop;\n            }\n\n            other._window.style.left = (pos.left + deltaLeft) + 'px';\n            other._window.style.top = (pos.top + deltaTop) + 'px';\n            other.emit('move');\n        }\n    }\n\n    _dragStop() {\n        // Dock to those it snapped to:\n        const thisBounds = this.getBounds();\n\n        for (const other of windowmanager._windows.values()) {\n            if (thisBounds.isTouching(other.getBounds())) {\n                this.dock(other);\n            }\n        }\n\n        for (let window of this._dockedGroup) {\n            delete window._dragStartPos;\n        }\n\n        this.emit('drag-stop');\n    }\n\n    /**\n     * Returns a list of all {@link Window} instances open.\n     * @returns {Window[]}\n     */\n    static getAll() {\n        return Array.from(windowmanager._windows.values());\n    }\n\n    /**\n     * Returns the {@link Window} instance that has `id`.\n     * @param {String|Number}\n     * @returns {Window|undefined}\n     */\n    static getByID(id) {\n        return windowmanager._windows.get(id);\n    }\n\n    /**\n     * Returns the {@link Window} instance that calls this function.\n     * @returns {Window}\n     */\n    static getCurrent() {\n        return Window.current;\n    }\n}\n\n// Add launcher to list of windows:\nif (windowmanager.runtime.isMain) {\n    window.document.body.contentWindow = window;\n    Window.current = new Window(window); // Force add launcher to window list\n} else {\n    // No need to do this for child windows, since _windows is shared across windows.\n    // Handle current window in this context:\n    Window.current = (function () {\n        for (let win of windowmanager._windows.values()) {\n            if (win._window.contentWindow === window) { return win; }\n        }\n    })();\n}\n\nif (!windowmanager.runtime.isMain) {\n    // Setup handlers on this child window:\n    let wX = 0;\n    let wY = 0;\n    let dragging = false;\n\n    window.addEventListener('focus', function () {\n        Window.current.bringToFront();\n    });\n\n    window.addEventListener('mousedown', function onDragStart(event) {\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\n            event.preventDefault();\n            dragging = true;\n            wX = event.screenX;\n            wY = event.screenY;\n            Window.current._dragStart();\n        }\n    });\n\n    window.addEventListener('touchstart', function (event) {\n        if (event.target.classList && event.target.classList.contains('window-drag')) {\n            event.preventDefault();\n            dragging = true;\n            wX = event.touches[0].screenX;\n            wY = event.touches[0].screenY;\n            Window.current._dragStart();\n        }\n    });\n\n    window.addEventListener('mousemove', function (event) {\n        if (dragging) {\n            event.preventDefault();\n            Window.current._dragBy(event.screenX - wX, event.screenY - wY);\n        }\n    });\n\n    window.addEventListener('touchmove', function (event) {\n        if (dragging) {\n            event.preventDefault();\n            Window.current._dragBy(event.touches[0].screenX - wX, event.touches[0].screenY - wY);\n        }\n    });\n\n    const onDragEnd = function (event) {\n        if (dragging) {\n            event.preventDefault();\n            dragging = false;\n            Window.current._dragStop();\n        }\n    };\n\n    window.addEventListener('mouseup', onDragEnd);\n    window.addEventListener('touchend', onDragEnd);\n}\n\nwindowmanager.Window = Window;\nexport default Window;\n\n\n\n// WEBPACK FOOTER //\n// ./src/runtime/browser/Window.js"],"sourceRoot":""}